%!PS-Adobe-3.0 EPSF-3.0
%%Title: (parentchild.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 13:59:51 05/29/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 338 238
%%HiResBoundingBox: 0.0 0.0 337.5 237.75
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-05-29T13:59:51+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-29T13:59:51+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-29T13:59:51+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:7A7DC43153A9E111BE7586D53BE239AF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:7A7DC43153A9E111BE7586D53BE239AF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:90b04751-62ef-45b5-b1ec-f9390f182dbf</stRef:instanceID>
            <stRef:documentID>uuid:be6bedb0-5900-484a-ae98-87da8fd03de2</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 337.5 237.75 rectclip
q
0.0 0.0 m
337.5 0.0 l
337.5 237.75 l
0.0 237.75 l
h
W
n
q
337.5 0.0 0.0 237.75 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 450
/Height 317
/ImageMatrix [450.0 0.0 0.0 -317.0 0.0 317.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%13FN$4ICQ$k<jZ%Ls'b
%hB0]'GM)j&ePZh'GD/q'bh;q'bqGu'bqH%)B'M4)BKq@*ZcON,9nQ`-S-f"s1eUH
#Q['h_?0f_!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!;0<S8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0Ht>77B>kIW%MjHGFIZ)ue+hU\so4JC^b*heYE)fr9@,9H_:T=@D*
QY_%p9'3]S#?AmjlZQ\/8)[K0SY4KdC:"e'<-u)VdT%9&%6Z>hSTF8Cai`q;FGA=U
EIQ9s]#VLmg<_`3m?/Efi-.agG`q[P?(00l\iVZMJR(9<%&Y*,?%#Xb-JX*Xm;8rt
$Xh!YF<=Lh.EUiq1%a@[Ftol7j$+dU<3`m>gJ'RfhD]6sc$/\L:I=5%NA#PdCIF>-
!"S+!J'UlNr:\@<Yl=^bO.cLQZ?*I&=SaiLd2m&KeuW]#c`;Ie(C+roghRhJ\*5qW
AZ^K*E7#3icU%R2Rt#@![=6I!517=,oQG*DG5h6um>b(CYh(c"%q,r`KRu&a*oT0=
\fXPV0..""op=S#;pd=kr)VQ`9br&`[CcAr0^`G!^[;HBH!O?0NePq8EQb6Eo)ltb
<aqSW1%+\7C[S0_F,O2hgY\UE.J+<*XK6dhCGPJID)>/=q^d#I[A/mc5Lh.CI?Q:B
M]$"Zo&!G!A^AIU0K"O3l`@7pm>`MRdn*:,eW+iAogg^1+"&!)VDhf1<HW5eE-)(O
p`uZFrr?7!FnlbLAQa8[aEXm,r1&*`Woq"X[?#:gh52K)_!5%X9C4rU/jEmfIP&0b
IZgYc*a5SW=0(ssZ#SZbl/suTlC!Q)@@%pLF,%_9dU;J=;q`O<B;\_sQ1^WI[bL)j
_Wj.Ij$()V@'.uGI"jMpT'dUD:m.Ej/$<=>^?/t7ed?97TY/j!3VcEc/(j=9K(!o8
5>pb`r@8*?TpA6I*P:498VrE3c#LF;qlK'gAs_05='&5^I[^_%CH#C!G1"*haq%UL
(I.3b!++r]:EnA&;3R-&esi6M;d!_d-kusk(;55?UTWiQ:S=MH*_&RXZp,oaii9"m
F5GpW!SjKHM(W]7XIW95`:V8GlDO5jb]AEmkNFTj+4b[#+=0P/?DEP>qc=AiVt7+0
F.QOsl<`;orDtuS,c@G06CY!rWL)!*fj0RJA(kLsCP79Flr;D2P"?p`Uln:q.3t'J
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.3t'J8Euq,%>L>)=gdD8$Q9ttj8`HKjM2\,?.-;r71[DQ&rS3D
k3(=\g03e_400ViOe-i'[nc5!rA1YM/=c$sDb8(90#8mT&i"84Us_[$?(:P["!/rD
:@!0BPiPZ\4#\rKXCbr$<;2]/eiiIJcQW1$@iBRsi0'Z)FH2Pj2Ik?mNnS>c=_2HL
JZihq/Sgia#SLPNp1s.GD')i[`5)W3XD=a\Y1&c<b-h#eO%\cIj^mOqbk`9<Rt`Gu
c)puIDm%pN*lf&$gp+YHhTB2-XF4GWqOP#RZ0]BLF'R/tUfR$l,J$KYMdKb,m5`eX
5+QmURVZL/dN&/@3V#uC&#4QZp4q:?^=BiFYN[ill(-S;cL3qu'&.A[*[AD$AbA-r
eW.])>G%6n/g\_#HG^qAo_.^:pF_*"rG0O=k9Bf.W+IqDp?]C:=-IUM(Xl0Wi'sRi
g;d`goH&\fo9:b<Y#m24m2O4L/e-X\8XMfUV0'q?;2'HF(1RDN.<TJY%Pi54_uoEg
XLnJ;ACo@QYc>TL`T\sc\_1"h[r#/IlHOI/S[lTIOuVW);lBS;Y:Ch$\I?H[Stt=N
,+POdI8>+D>B20.#2S'J9H=I4G&>1D`asDn%,p2Ued1o?6\kl5p'Rq#!O%*H*IV0U
hmBN)[\DC`U8QRTbeEBG8!:lelX*N$(7qJmSCVfZ156b*l^(c_Y59o[0NGKdJ+BF<
qR)gC1@i#gF2JH/BA$9R[^kLn[F=t+do-Iu1Gd/5\k7'!H65VmaZ5`538!u86+3e\
a%(fjTc`W'?Bs#gT!(d0\_#H<]52QfOaCOW:O,H%,p7XH%?Gq'A(9[Fk!$gGN?ulN
q6r>GWGgqo+QRW^OdD/MZES?;]X4otAP@H/8D=9XVm_KJ8L[<%qT3fa3i48u-hK8s
m)rVdcOO_=T-g,Spqc=.7EtdBU"K<6'<9+:>fU:0n(]O:?V?HGmEPF9,c@40a)gWk
01`,km#K50T5EQA9.R!Jb_,>/B`$?:M:<&7l'19n4]jSu)F4GYcH#J;'HPS@YNe(0
kI/%,;3f[#FtbmT`^t8iSQt=jV:3"S3c7\snVCd8;jh-8g>/m5iO^.8"sM>T,c>/;
^!<N34/IFX@';26qnBVK[P2uFYBT],7(McdoK)?/hQBB4Xqfu,TAF,`a#_&tkLr3#
XKI7'.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPiUls$3_GK'/5B&3j(o<]piMI
Ch7G;ajb-g<d"_tr19P0n`m/>e^).W[l02WCQS!e3KL?*#E?REGIW5^eTC%$V["9O
oN\Hna'QnuZLcgV5G>4HWJmTtCD\D=*Gd!a;0'7/9C(5U4W>%^o\$TU6V1e[hT%Qu
X`#9rZB@gIM+?6=Bu\u@dB0hELn11sA)t1J^StA(%-i)fjC0mIV.H!AV:`c_@+]Z1
h.N_gCLSVMe'3$W,c;j#JA[f+1,>s(.dJtB<L#CX/T#VkQ[>P,/]s,JqQ\O(mDEO*
:+Pk=#VCHaTpZ_aBkokI*9VkmSYK-A\l=hkM,2[R;p]=D^:5JW,9tana;KJDgUDB^
\!:I"oXp3RS('%_R:\@"k:*h*,0!aI<lY:?j;.`U:MS?M,q1+&8P2Q"P#@MsVQ>ZI
7I4lVf[ABVi&RrSd"2cO9dGtoI;blloNn#Te@Jsg1h"dL8(hpMDUPCBq\aHkXl+PU
4*%f#eU3jV%p.!l<Snl:ZU5bpA)1_"E:O1HC>[Ugr(?XSrAWhfkF36m8n2.CWK!pT
L,"39X_<4bci=;^,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k
;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L6A]><hX.epm>LQ2^iUCg,"0lY$2CHI)S[
o"Xe@Mch>T,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTs
PbaI6,q1+&8P2Q"P#@H7,a>*f8L6A]><hX.epm>LQ2^iUCg,#@rr<s#GGt./K]Ze)
1AkIR?.`62io'*]X=\4@BrIZ7>5F$IUT49/_S<&3i`1hoa,6fHF.@&ce`Yc@8H/Zd
P+JLNc0@9Z5LB:+b<FI'0rfatfjsJfJB&Y1/"6>(bH.J71EOA,Y3OZ6]*ih;\;MNb
A5%4nVfsLQ(D?(L1*<sKgC5tF-Zd0IChP[!Yk"kJ8#YEiN./8/IGIDl1H)S0nCBN<
;\&[_::l4@Q'mc,QKg1ch?h@_jE2AVApsJdU>"tUD.]YR1!XCUZ64[*8kOL8-,aHR
Q%tcqeT1#tai)6Ef/j3gK8dg][f)fA2j%=QbW5i_T,$+VV\?"WDs88u+kYIbbA5i%
<p&CJp,VR;/S!O4CSl3*ZoW,'a6K&T-Q0BJJ]3b":SH2]o.=_u)Y14`[XU*^5P48q
rrAZXYP"fmjn(+8HC\u"VYk7h5uDVQqbV45MF0AYil=!="I/PX/fU_OFdelu*V\BR
Qd?V>IS69q(M(ERf\9oC,Wo?dIruNn59$MK?gChIfb\5m/<!V?n%%"NHZBAUS*61S
2e8<0#1uLCBX;coY]Td_PD"@#N1eR.naU>",/u@W"5YMC[Z?KkBeFbte(J).le&`X
Dqg:l]X5]MN;DiS+6n@^8PXt(=?92G(tgb'^:_)Wa\`LhqU"eKHX^/J_`O-rXK$7*
(>ZT<T#uf-\`\*qD/I[NR$VPh.FrA#I8Jm(dcQjEh.9_*j+1R:BVsZabd!\1bqA-T
F7%08=*5Jk4KO*&3P?]d+)B`q2^[[qjpN6n5AR^s:NViopmKdfY/kK:[iAV44k^J`
26D-Bo:s0;3fYO^Al]'g-N#Mmf5)&.eSb(q6l?*4j=@OfBA_2:>;>Yh^9CmD9slt3
iZ!cu),Bme>O"AE83U>09\Ne$Er,2g:!LA*q4/S1<*JHh=LQ%MX7[H*O0nX/9bLCg
BeD';e"9E@Vs=7#1,CX5_YZ\MIXRUPZ1#*ZcZR\%+1#X8cB<s7rh\*tka37`G+,N2
U<A#3P$Dn-LK#`=>u.B/c/?*%IhIp9i?a?R=k>R'TndL2]pMssA'jOH?L^i,]r`r-
-/3X^Q*uj?P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4V
P"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq.(RT49AW$>cqBm&!!ad7--lI$aEC$b
2b"&E/n;2mL[VX)XK&W)QT1<RlGj&S1d89h$9kcfN384qLLs7`%>JH-c)RH+G;8dY
h"O)Sm=X&l*=JrWoLo[2PEU\!T8efG>Ak$he;kDJp?cpF*D;:mI+L+)1[1[;$uFdq
Ob&Se7TdKfq9Ls$dm'V6YZ`,MF"GYS[`@4tR[\_jd;shRhc"$!Z(NuqcX;p-r")+9
a?"nan&<;ho`!6:D=hX]eaEM*Z+i`pSd:U<oiiTi>F3a-B"UuHf[KZ'h7^Op_2kSC
i!:?dqVe&j:8arG9C64peFArBBF]+@=l6g(Q-5^Q_Ff"=`lGdc=`nSdoK1R%c2a.i
[ERFZi9bLkMghdV?Z!5XhOffZ[G0L*9ts;EmM]b_CSK"ulfTXroLs'jk2SATa0srL
(Lsbj%"$g;Ri&s0E!?np5.+q\>>t+^"W4`0[hXq/nD'5A_+SVA2UA+&62FLu_Feq;
kWK^ZdF<'MU%ps/HHrXhgP68"C>g'P64s4tSF`Z2,Q>9R2sX34oc/oQ*%'`&%j5@g
#")UX2/%-7`\#_nG<<`sd%mPK`qrIF2lTkYQIb3Q%0WrE0^`_E^KCeq/=]C=`j(qS
1?R0]g;.8dK3lGIGb3ip)]=e2KBib=l.9J'NIfO29n&B[Nht?3OO$eLZHCrE[B4rt
+]l.QAGoNQl8Z7WDc"<KVn]6AMr2,.)P--I:TEZ#RUd2#E0?f]]M*(D].0hJbHa&&
ehdBiqI1>PpOI?c):5s$-2)!0@:RiVi8Vq'!=j'0l,:oZ3E7L(a,o*1EVcO=_P\n*
baa$n;.83MCS'9_er>\!I-=fteU0Ta9uspYf42+V:8)04a09)0bCR"qY?H[iftYYS
Np/"-rr?UPpI"r\#"?i$I4qY0[rlLZEc#;rH^gu(%<p7T4dL]Y0@&g"l^_Y%[FTD<
N>X<[4Z$^*>=F!p&(-Z`qG&Igm$lJ.)-%A,*i@JFiFNF5!,ZTS^c?oN#M`84e*nu:
m(4=J]#RkG\]k8fe=G,'rBnHbqDVLA<V0O/58r>3/[GBV9)QU#=N.E*dBb.\O4s?8
L`:Ku9tsqmSNa-D0MU4YB=k"1G$<>O=>fOWD;/LC4%?G="I/:Zd^j<b(ZSeZ<L%,[
e\-uN+n$N_mN9.0)Q6N[\i)EPKc!cEZ>4Gn@plmGDlq&S93nJH-N=(JR8mU3,B.BX
30dPB]'RUO@BZrJ`Di0[oT%]);6MHdqUYT"XF+?4L\Ac"@5k,>p=^p1CNIa3YP)'c
JatjtVd$*ASse,4`cW89njR)T)]L*0'=@<W2,g]Vi6l9rA(Ju3[EQ\Fcoj;$2`6[R
SY:+;lQ9'Nl@2n7a\SU"F0^Np(-Dh?`t#8l\;K+=A.h+Ra`WFh*E_r1Cc'_sc-J:N
ZiR_u!*naKkReG!,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P37>egasdehJu%r>%gS`,iOK
^u9,qrr?/>q17P:<#iPEI-c(:AM@7eU)_W,bRd/R5nXI^,s4(\-W=Y[4\Gsc=N=o1
*4G/T=Tu!UjD:jBhG`Z%59gd9=]pKoZt@rAZ'5;?DUu4I2aJhGWE+([\ulNVl2<3a
onVa:;qu)uQ64D`f!4oG,W)+@K2:6oJ"cOp_k>PlDM6^.Nkr8q>>$o"I4kjT.G"@#
;m,C'rCDDo[]DN\g!6DIqag8fYW(PKd-H*0cE$XL:$o.N=k)RqE$o^Ah(95omT6Z,
a2Z-!N(14><m]RSh?-7ZMNXLtVpaIpRF<p\?sr6p0$&*)S\W]k0KsY4Fe;QXJ>'Ku
IL1-W<TSY@d;d=Mo^<TNh"/RS"T4TuP"L";YOu+uok^*$emZ/!gtQPfFZXYaR*sT4
FZl3[LbRh;1:9p/O/oB.*i"Z"d#V&=hR*tf:)2D!<b<GT+'*E%bHi^/1+U!Rd<Mkj
]*%@\ReD>;gdc2m1-VdPFUUI5B2cpOrCa-L3sgtMKs]mi6_TGB`P`Q5c6[Rh,c<"O
U($D$.kPg:(t<)+gqkpnaC?aLr7-qY^8kddZ]4[RdohUX8?h5XN7!i).L0mlkHqXP
K'0UA)FEaf8PW@bl2%sj!1$aEp>^Y9:Si0nLR$A17BNtg9-Li'mJPOmBrWPqo5_4$
8PU(/kW'YZ3tjZ@j(+*Lfic8=CS+2k$U781g%VsoE.1E^(Y((<>3]VdV;@hG4]M8X
RbP7#Q5\E#cJ&hPRddn1P#KTt0<3W,eFL2*%:)0t!4R\%7XZ>QWj.NTrCVkMA-"8F
a"#tBqS)k;Y=DD)Z.7=PRt+\n$Ho"lohC"&JB!6"(>;>/k==((g2?/#=SLA2FR6*P
?7]lM?WM$04htoR+mj&uG$P_P,c)cL8L[4VP"JVD,a+CT8L1,XZhd0mDcQ[Pg5THK
bdS#&h72"EhnY*)_N.IXR+\tboc*Va<DE5J\^nCtO$_II\@Co.G0*<NP"6&,_gXQ!
>CB8dNS_0l9lN2_Qr:uHa31DgMeauFgchV@[/AWK8P)fFcHXAnfTt]45LZ?](YIcL
!Ti=G?hKbc@oN7p5GMMFdsqsWhQ%`@FeA/hA$ec/QN6#8JkC>'Q"t],:SOP2feh5^
%<-[\CKhQL__*1u6%qF[bY1Vu7TK-/8Ur@sm:/$6gu8O;.5FJ`k.RJT+jFs0Xp./s
JdSR/3hA9$_L?Z7mnJM<%:Iuc^$Z;=(uF\%S,c,T[$DXlpJ[t6L37Bur&QU7D&(jL
R<`T*oED=()aWIL+;JCap&$Aq/Z..OO)m([`3-#jh=d9Y=Brk:Vc_n(3f,DHm_*39
e^nsq[dKhb:T_LbR27PAeLbG\Y]STAm\SOLYi0[d47XBVm_4F\hdmQ\[MHRCAB(K0
rWt%(8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaIFff`R3m_S.QIBtMo49N$l8cJcd
C`U:@!5$B28PRF1XDB@,PF#cnWLUZa#.aj*4bCu8eG?rOHhqUdr:2c->!J2!r6%m.
^WEBQCgN;A[l^Qnp>!+Aa#Iq9RH.4G]76nRGFW?R&lK-34Br4_4sb'GYXosX>^:CI
e]p>"e>#%+HV7TGRc+Ai5m9;@.EZkbr-A[UUg%J*GqrTa6(jk3A%Xk9H^9DY1uE09
=;l;j6((R4,6R1X?]AR)&*uIBa_N/bR[?6>VtDXZ%eeQOrrARfbA:VVZDWGjVu"56
<AV3f:[1#IR6t<WrrAOq9.afS?*#W)IRR65+'ZP4""Ce2&,T.nm<J2>9hd#5p,MlD
Vcb=3hlI[%\5h'pZ_ghu"-NY``;]0l$`_g_/dKL4JfFl]A0!rVdSf<TP"JVD,a+CT
8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sSjVf;7Ai'3[=-Y=;X`>m5W4Rj
W*palG#r0Xo3$0<<X2:5a2kEG=7&bX)4a/uD%r;jG\OFVm,%JgG*b;/o"4b%UAb(F
N3guYY0Dt:g@k*h7g)TolFNJ=?VB-`6]4U)6\a`oXr;Ke5tOkCd9\ul5H;1:pJk-Q
]bf:_:+k6>1t/o!0l1k.",J^F?<9Sg3p,/qU+<8^bSJcYh1E[I7SA_LUpd`mi&Q@`
G1.A4PuHsJP>A:JTk@*&WA[l)6o9N<9]XZ9&`j<JWV*TqjRl<Lq3Y9$&&#f?XbT15
;qZ'7m;.KKe@r?_XT"KIKnI,bW+An=%-cW<]l@Q:[r&O72MUYo';Ek<G@KBlq@:1+
Ud-_*r'q9Sq`P\/:Q!aq:Ee.I-9H[\=bkL@Y:/B%Hjju[)nhCE6S.!%7_8`@`>;M!
M34Em:+d3+F6TRgl4-N>\6=)8>:U,%Xf^;Ki'R(#P#I)-3fcY'ONSY]&&.?abGkA#
7;d4.8u#sN<_Sh*A&=S`gg#d6IQgdiDn5g.1ESU(?dl9E^0]BNk@l1P-)$`\PETC&
3VaM"#V;[V&5Va:?QRZ\1pHL'a*Z(apZ;N%D8LfAH'.;f;4i_<F'J=PVWQW&2afm;
E\F]"I;BC+UKme]gP_Kdg'7j\FBnN89uM8+YH1l>*JZ%c4KB?ChpM`c+f0mqqEcDt
?1LQ9i3R3Km9@lb#O=Pe\EkqbeQ(nlZ>06JeG=WB/U(J\<nd*.rgi0&m]P\5-e%^_
?6_o&kp3)NP"@)o,a(bt8L0I`P"?pq,a(_J8/[i*\.kHl]*23UBI6;lNt#kmQT4[@
;Q=$QT7*o\kgd-pp(H+s-8Fa0O_',g3.Bn1n_;3X+%`W)L2LRX1HGg=7=YBRH#5G(
.rW=(q8B)))`j<erd0,h_EZu4mC?8Yjh7Sa:%E#Sk2$l62D.06%E?Ah[+*Er`WuWg
5C+eN.7keJ8lA5+P*D,$,c)cL8L\:0YA%L^F'Ki>,S5?(=o,m&3A9Uj=jnJ<aro&,
Siaij*d^7MRajtU3BqEI3')1%6'kF2-NZl#(ZSVAO6emg>f#]r5H+l-/)+j?d`V6"
Q(JF7F?PE$^ai$KG=h&t7()i4LKe-WG;PcUAH(\uQG($WP+.:ZT<`U`%</VBT2>Of
!M/S]%gM+Ehtj30rr=K>T3*ftE3$"jB2#\"+)1dTidZ"mL".(-2c#T/FV7@R,"A6p
;l$68P"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sT0MQu>L9sJ=8KiT:'J=8,8[>`
P8,beqH5BlaE->?!6IDsf1"$1(tdXhVV'$Bl8efCk:!]?l.8BnN]S)+V9U_+3\I0<
UZ#Y3R7fiO^7ftc)%<qn$a0OnYli__Kh!6MInR]Dpt-FE^4V,VQX]#1j4:3](E59B
["8eI#U&>oRIi,*Rr3.Akl!ifjB^4V<+ND2^J_\sl8*J^+?2Xk1dh-2rr@m.V]pUV
a,dd0oO3c3a1E!(0<*ipo4C_okr-)f#.2&!D#tqOL56lWZC:d+Mg%b=l.MGkq(++G
Y'r9Z6%S92>j4!?W@>m0kkA_$?oJ>UrI#sOjjfQ,BfO@Y),]2OY[]`734sTGl)Lr<
^9_rU+1>hAk6m"c5d0O=i`TkW_..98G$C?\/;(#c6`-on=;Up0l1a4FK']#9iEp)s
q]fojWK2D>8S@8]7f>\G/Y:'5XT#KTfpC;HhfAu,6?C3#)-5qX(tILJc<Cd&@H)pf
HJ`#72[J=7N4O(PafXA_gid1o2fi>+c>47$HVWRGQ-`IX0WB5@K4*t_oeKY?$V]-o
#Qb3aXAs5RXC>UFO)qUIZC?FO_l"isqWX-N>7>;;6VIRPkQr]Xl2>,X'C\%A>fk-g
b.<<"@pOiC6WtFESQN/*8Tsn0T&$)EqNG5Y%pM!Ml[P1?)tZLGc.TY]Gj2,>>#fuW
_5F2>FN-Af8#P*Ie<8e#\u0Iaj0ql6]g&:Po\>t\S7gRof)#)<k6"q)5=s'<A8^k9
8oLMg8L[4VP"JVD,a+CT8L1,XP"@)o,dQe%[q7eUh%>XZ[$KC5BCoqpd""Cdf+6\T
SVrr"S!gh^SNa;j;tfZACL]YWm!%mL>=!>$j9!B;aijP+r3;D9^r+(2Ft<)bkdo3n
Z1Dh651[]*fYd6!)D+'(PtiW\.bD9_1#m'?DM%XEm9gLV1\iU)c:Yt;h&;gMcF&)P
A^Z'Bg<eP/DP;^jW7Ple1f'Q4Fh1XQ_KH\fKlu<_o_aWOi45tlXeFUCmMZuSK"G?,
*Ot8bX6P-n"IkkRQ2ip,_1f`2e^O$BNHK@^7pO:@0<"`V;b:W$[J'[pQau\s06Bt%
U"%;%1&BpI]S\o/KmRhpEAl8&@j:4n?KVPl\XqhBND`^=38%EePmaiLY567jqOAV[
*c3/LbK@lA`O@cXii4`clRdD@X_<l>>lOfRqcRf4;Y4+M@lI;7hh&mM:.)H*Og32Q
2m>,VfOIpVorFtNFapIFh*2QWmB?.V-YRRg6c05t]5/aiPQ%o]8oak2C1#A+B1r;-
lb-=\+giE]Y/UNN%7gsU4"Z6\5+Q"AEimK]\mErigE-'nV7(dW98NFAU;Y:Pj3mA[
[ae#%\#ES9X)CWg^[3)CL>P_lg)pH>G7^crNepaVG7t4[eBF9<oGhU;ZjRhd[TM/$
i>oYnPkA*hioAG[S;XGJQj;/gK38G?EA35TQ/,Y]WQfc2-*M"c&:9!FSC^Et_rqkH
h,ZI1`u3C4bcGlL9m6BP[<dJTX>fcg+c\[4f2;3!TZet!._+;qG$UD373?-A#[hYG
L>,M$>R;HlP+?Kee1nO8%D>+[O]<SrB\_T=%;T-/QT0L2@/@^i1$tgn=/<SE'-bHE
gY6d%F`+NTHI]9qBI?@S_C*pY9Ur8L^Cn"_DB;4aJqiQ-'O&["^cS*[a.+9EXrTGL
duVmh5;N*Qca//q)VS!O+*fD$Qtp>scA=!VdseQ1B3UR\CTGI`N6?1@Y0.cqdn\eA
)KqZqE1<g!fC\N;f&LYNXINO!gtQ"*rm^5d\?nh>_e04>bWht6?dM!FA6k/7j:(t,
f3r&F"('%!>3MLtW($#'H-PYOdV#TP@N]h!(.q2FDRnBgqCWgXmsTB:7=M2SobuR)
cpn1:hna$146lhGZ>8[[HO$Ou+4b8MaL-QL:"D/5I2:Dt-dup@Z9a!A$dfSbP"?p`
V&-DF1pPt!Xq4c)Je*Z88L6AelMW^*In%#pR-oA`@G'c'Nqm)^`ma(>mJUMs:8N\#
WZ:*X997'ecR-KtA"L)k8PNGBVh*?dk@%]?M[W_'@I-/g@>?]8&?RF-]d'Ft(H0L;
6+NFcHO6k;Io>RT?JglFI`p>^28dOK:oJkoc1Y<GK5rG[rDdD.!%B3TaXjlK@)T2,
SuBgnAZd]k:^sPI_3_O?Vb^a4I$U-BM&Lu/QUs$[$.;_78L0OrP"?rK,a(_k8L0Hs
P"B&0But_I01KA%DJuLd5oc=BfH/B+]%-uF.4LQYf"(t.I5;euTsVYHKsf;QOP;=*
hskA)bsn>-Q*nDM9KTI\J&BG]WP@&-DD#kG[qP;:mT%qC>uYo^4&.)$j,<B7[Y":$
SBC/0p6N2O'/6Lqj7OBrXK*Qjm9$u(BsQA-2;C3pfZ(>:]^h5WiN?tM*l8oK#m=uK
4i2?erE73b5%[S[-hK!#EcFV;29!eJU&:4d!^Ee,!4jG?Uln:q.3t'J8kC:k;NaTs
PbaI6,q1+&8P3+\rr?2AZ#5";,rXrI<d*-LG(s%F/@NSVT_Sn<P*aa)l`g5,CW1:s
,<"+^eR7L.jj/2CD/=25CQ@\>aK%D!FIo+dr#0MH_p'?YhkOS+J"1$GUo.DQ[?mGG
7pX$HSshJMi]4H&&)PF\k1\tt!$R>_*QtM$[hA%2XMJruN*8@h<,C8F!O8M[K#b>^
VY++RG%O[ZC!Eg$;#;*\fZPb"3Nb6IN@c`*ROt\'ODm800jCM>;\,1;)&9X1gcquH
?+]s,,s=kSG>iL+WU6q@ilCF/m;RY\khtdDRcQR_7p2lKXgb4e;3P)K4%Xk2-C4s`
<(P^tmJGuk4[iFNE,h`AYVF+WfL**X\iHWLNo<]P4[5oW@J%3lfbJVpo"*+XFqE9e
fFIYc[i2\V2EF>SYQU=^a6W\QbT<ZW34CO<%#QQP`t['c.(QF-O8CGc2a)\^UIjrH
:K*[>IS3kuEpggs10m/DQ['ZZRtodQNRRI^\6ElLb/n=bWn-27R2u5WC>Gf\Pn0o9
9)S.ceUD:T:-4gIqAkQX?M;KXof9,oK=&"#VtIq\0*gdg;9HaqA^$t;Z).m2Lhj's
Z"lo[.D@jH96O1KDIj&$(c^O+H@Z"q;g.8:?t]FAqRk.Tp>\(QWi;kJAU,j0e74m%
mCZW[G2PjWd\q9EU\0DC56h8&[c&/d4t_!0)V]DKXc@`K)niK>PG1Zqj\mrG,:1TW
3S>6XU'kXO"?Xj(oNZk,b5VIeSun35d]n@O)*)j#=dP8/MYs1Q24fTel=b9XG,Ak8
CObX4:s[G+\9/^kAXN31X1I"lNc2'=k1f-&!=.Ec[#G\rHKmXJYKH,N;VPl#@E1%f
p"%5/*P/7"phE[2HCmpXF.7fK7SB0r_ODKQ"4(C+-gT+alGcXOo`;B;=f8n)RQ\CP
2,ml/nhU'>9t(A$Z_Fo>+CniG3:2'[f"%ZD[i*L>IdL\m4_dWIDq7+NgoNVmk7"rm
Z^HY]1u_Ul)Ts](rr>QVp+pcY43SAk9&H]jEf=nBf%kZpO4*Uf_P[Z;5=k2.AP[`*
gV'K#+:Va*4do$,`TpfIN/K3jjQ9A<CTTPQJS$%F[\iM$QSkmd*Q/t2\s<PMeiug%
kN6AVD1,qQ]-q56U6f#DAjpX?g:>.JIc,<2Td;iu+RuZ4'<Z]I-$Q]\q]0h9W--cT
#1222O`5K=R6%L),q1+&8P2Q"P#@H7,a?:7AW/M!d.TFdRc,BAfRgZj]o,D2cBFOD
\i[+6I1.a3'-#h'O#f"fB5i3$$]_'7V0%V7lOQq/(t$fOSa#4smr>^#2,di;mh6pc
05FcU1TWo8I,!p6f.OJX]!\(jlQpfuA^@X5\^rRPoikjk=Ost`>2jtGI!fSWYWBfs
l=J6)q/k[XJmQUV$edh0c_Na5E7X)]iH5g^qE>oXP=oq5ZKkc935+ck\_`m2cM$g$
[m_0;Q&@\o(#riSl(ZC;$f9,lPAE,->'uK3h'B;;#?/)r*niBj3I#K7XrouS+?>a=
gN-,b`^83I8kC:k;NaTsPbaI6,q3o-=t4YtrB$u#k*dp?Yl<n.1qpF@/_'1_\1WaK
,9DfT/B,_=ZE%/2p,dj58pFV=4R2cq3k%h#G1l,.T'Uf/=<>9Fm4<KtTtll57)5k&
^FIIaTNb&o`n+6;:G6K+QP[?R2I:cd$Wd7Zeo;[":U6ME5;ej)F]UDEHB#)SrrADk
`0Hr`>upmNJ^r"n'771=i8\m^ntO_jPm;RTcMgF.F?Zm-m#JK=SDWJ6BPnr:@q4?[
f\c&'XS^UCK85;EJW.fX<c"e@T]D80P"F/d9TjZj8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&g8L0PZrGJIP"!9Ot>LTl\P@Sj<ZH=_B_5t/Vr"h<BEAO`^*C$K1ZFdiklYg@#
)WY);_%$mYGN8f2,!jS-\R)DdXlukZ\o"i:*Q0_7)p?..*\59ZCph=*RgaOm_Gce\
L"%l(P<,=8'\2o#5.kVZEO0A`NUM"MCGd9.5RU?lVe,g8_J;#H!4+<,fqnApNDiXG
]gn4`<3a#Aenhe(eu'Ib#75BmY0!rTgXBX_AH)XJmp-Gul+$[EK2!;VkFM>#o.RB<
#3V'QLBBdu)C236X+Sm"l0c]B"iTP64"B()++'Hr*O#a0^o\lFS6LHBi'2#A]-ABj
AR1d378@O$Q=S=AdCG9O@@d`RLXe#LZQqU0VqI>P=Ur-rrfNOEoIXR]k^:+*BSEmX
8ocAs4V@DL;c[O3b0)@Q>[L"")d#0@(-`[fUN-,Tif@,Gq5u]fI4HM1D/5VNZ48\V
/Ki5Ag@B*#Sj&%Y8L6>+qO>sk:r9[l2U7oB,H&-;UM,IbqgCfI+%3gYUH3!EI7X$#
DAO:9ib]5D.q>,[@Bn%e>=g,#a6LAEa2Op6Z8(a_IBTCmVh&W3G<,@Rb6o<<?,:9H
'Rmlsj5FG.o`KQsIJEre$f,='2B2+[=9IcC>0/%f.f.It`j;Rc$ll>u>Zk^<pZ(Q(
XC[B)oP_D5hVi2\*!d`Sd"7f6Pi,L53s(kUn]"U6Z1+l,piJR:m%r7Ie8F0kK&AW_
QY<NXlMgiYDC0fANHN`n40?TFAVPX-7dZuP&[tO>VNOPl./L?3a1BKrXK:_N(ZSKm
Ri:<c/.hcL=M_M_QT@p2ZHeMf?9_3(Bn"?l=E3DY5+PKC]Ca_/nuj=%RN3oSA+Y*7
V\[H]9t%dueSDWPULThg2SB,#guHVZkp2FVP"?pq,a(_J8L0Hk;W[c8>gKL:^&J(%
lkle`<M\=J!2!B)KgVq`VY*Ou)ZKe1,):K3pI+Cj(6ILN[D9U#`Y)4coh+a=k6\U\
\K6UE@p&YKHuBeS81,@tpKF+:fHuro"4u0G0)IoJA:_S=pI:^9Y0"c$ENcA$hi?[k
m&g"[ml&p!*$b=7:Qg#GS(([ml'SohSo;]PoMWNb9s&3'n6eI5;H%f)dp2=IeLke3
@[p%^mHQOhf\uC<Xo$^BWV!oo=%gIKe[X8p38&GWdFMFgV"=Kh@A:8pP`eT`V'M3q
.7keJ8lA5+P*C`N4W.52+""GP<Iu;uJ2sbR@%np0S=d%Y*guH\<dgkcJ(cHOP$1*.
D`aIRWr9i>/IKc><lN=fj86+PQmU$]`lhOJ@RtQiPgWduY,^0g57a^D/'G"Y@GP/(
/U_O8lKi3pA%^Mn;e78=4_(=0];jj#j(i]$+7r]L+5(l2MS4_n0`$c@gcIrUVeb#j
Y@G=j`]+2XhG+'HVSYnMP*D,$,c)cL8L[4VP"JVD/@T6PoiE%m6bPU$95Wqs#7W\2
1JX!To$=[m.o;CmAp#b!n$(bPp8ljGmmn:4D*1#F_:[WTkHHCDFPfR:S!dpCZWoDX
Lk`14Rd"@RNVlRm;6]P0YUT3aRfJW7\\u&IH0+LAV9X)N.`+eU8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D^8L,%"u%0W;dOqpjcH[i!_aAPs/e,HXp
cDT%Fon*k%IP#]Vf<t[a^5ssg95!KSnQ55NX3JSX2OP<@<m-jNU"]3q$0SR"G06oM
5>s<5egh'Dl9-H'rCWpn/[a)SFCbG7aCG.@p0(`SNh=h)`P_#er<>JW_RBl-f]qaF
k.B6R".BUd>1#Kg`?d[aX42HU-VME=H&jOb+cQp7c[4GUXCE1qc6n,XJ(4CSnp1aG
h.*X,X*Z8*kB!_uQWVBO?/AZf^!M593Om`_+/reCe?JOsZ:XmDoddJNmXJU]pPsW!
;eHL(-8nn9GSq@/GSf3VEQ2QUK&)#`)!8Bg5h6>YDl!%gDR7gWl<&VSS%!5M!$1EI
Qt-8F[9(H84X'XR3(tmJaiJaU/Z307VR<52pDN\39M[_5\K6CP0kpKnd<a>,V0Tgo
Wj?b_Gae!B1qo^?dBL%97Qf*tfXn:rf9&fceDF3q1>ddeW6M$^XcBm?&p::`L)c9(
3fP.;Zp,ZmN/WY!=g/"s\_A&Y7[)!SnZ9.s;M&.[k'^jeCBKDI"te3ZJe^+aX#aTU
lB^42eabbe.*4*LcE[*Oa/r:m?,^D`7Z\6]k\2\6\sljNrj$\%@q"X^RJBtW?0YO?
)@Pm(2Dc$Nf"K(HaS@&jd;B.s(iR=3X!7]nbG`>$^F7mgZ<;J193Ta`I[PDkH_dRO
8TB/3VU:$Woj=`GqgR.bkuX-cluUFq[h@FgCtqQ(3J27*A_JE+,a(_J8L0Hk;Fr-s
P`eT`V'M3q.7keJ8lDLTdW'=Z)'H[5/V@goW&lR5pITtg\+qZ\^.RZ^.EVI:;!FS.
Y?0F4a8N0[Bcmr]C'Ni[qT[eWSY9apI2Q"j,9"SX<J,?DXG8[N`"A^fc+g#2[m)[F
>&Z6'G<E*IVUPPF%8;<@lN5[f.4%#H/@K\f@Q[N>.Mto+27Xjt`NYpXdi/Vlf7Dif
QD-uL8L0I`K9_daKgW.$Sh$qJ,kiZOcj$;0^`&FWm\O57Ru^boOdB`.XD6d8"%)_q
UDQ)&r[%[f028_'[m-lU\J]7V9s+D,M:*hemi9"*I"mJ,(YSAjf=Rt=f[pGmiLMO0
GiTEXC&\0&5ILB`;6=UP(r.'@J/ZcW!':>J,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o
,a(bt8L0I`P"?pq,a(_J8L0Hk;ITY<FU+#!%j7!qBc7Q'62;e&L,La+q]Mkj+)e(@
L5hZH2XH6Um"LSN3c85'd?TPWoi%\efiqe6!N3?.B`j(0@/XNUrrAFOeEd[>p\r>f
3I;ZI5)C>Xrr?,BGF2Q6orRL$O4'Fn_POHOU;phf/>#@kEFVM9^]U*4gn#-W\W]N`
h?Qfs`Q+gW%2IWVqa_sJbfZ_OQIRNiF8"83WHLHu?3=BbBQYL-mLL(?Id-Y\H2dkM
c+Q38k"s9<:YKWm_X-Snb]Z%6$HkS%<b/_.D!fVl>q[]Q2ZfMNWgcGc!aT)T2WbH>
"h$3W28`7RQc/-Z2lDu^$q`6IrgBLhf=U(I#ubF_-$6I6Ph+QhE-j)D!Ng<anE./%
&FFos,O76W9<IHL)]Io"IalIs?%#*umAd2Q\a<mf%Xu2=H)a#/V.4pSWh-QE?#Dm)
P=m[02d'WG/&'#$i9&hhqo8GG)Pj:-DAF0r*ni(R()qmY)@re*[FT?iLbMFCm*;*o
LLpFIO0h$$qn4n+EG5ns0&%]\5mmc>lW7+$FUk+)K1k_17SUDg477'r`mWhVeML6/
+f9B2qNoeeZfgI[@ClLLS3q44Al,5VSldO$d*7>r@r]q=8P_oa4V\3ZX()=90<d=,
DKEOUSK*jQK8n=UAf.e_R$:E"da;&g@"7jXZqij7\peKZ9*ZQ;@o&qd;_DVP[GX#?
hRThm?Xn:`kVVrc=Q.nQrDmG)`Qg';KplKJbW-t48B8a[WIguOd2n356rsAmC`T4H
1dkSu9")qrTq-["a3Crdj5FkijZ;+_r4Uj?U2u-0)^fpi=Mt!kF0k8LanlQ@gPL)`
*RjQgc#97W%<fnt'>Hp0,c@S4Eeit0FZ:4`RFL3T5HF-o")c44@p!M)^%iF)YgELp
2J-AEI<Ih`b'9eB]Y$@c>^$TL`KXO]hV.:DG4!a]O@G=pSuj<[p!18&EOodd_S3$i
Zgk70D&;59pG:9<HOd6]Xq+rQRVUuqC^4Lc$C>=Y2WDMY.rfo`U!@FL*_@fbP"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M3q.>uj%(g1?9Rc$Q%i?3co+_5+kg!M4S1SnF5HtjMa
/]5XTis%>XGGa=OVa:-ahrLo)T@Wjm3#I,@`^Q:*oP)?i(-TI#FG&r\''%m_;s4/\
;?$X9<S^aB7U?U)G0GE5B'^;CaJJ8)XK$C=D.rq#`E)=)!94<fjS`rMoiA\FYcr=]
)X4BU2YT</a6dLn8$h149#&m1dIFMX4^^JOS&:i?Z"^FCd)+Jh:,($(_cKG$=#rdP
$odetEcCt%#-6KtV>]?$OTIYu#L+PXLIfG*V\Q`W1=9u9D3nCg#fq@Krr<EL5oab"
E&:X]*g+tjeM3&qI4M=CX!3t&Q2h=gOpH"Y4p>7a8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK7`Kb>]"*gF/Y<=\Uln>jZ+:dmqR#.\
T!mS41PP/^Nbe:]m+qG/V-hbhXA#WLY]D90<JO$MG"+]t=ssj^aq(MsK^R?)(IXEY
H0en=3P@MP@UNU,Z-C:*e_+8'5,B($lOBV;9sp)FFs5^','<R$rrB(/N9ODHFcVmG
>tuuK\[CjN$uHa3`\\>0Z_H8I,rk]O_"uB9CW<[V0#Y#]d?&(JVc@EdZ0`@Y_"#Kb
iY4UcofV$"H[=Oq12+S0>uj-P5(d3X5)#=>=_TsCg)s#B8L6?KlHgP)X7Xf%rr=S,
Oaj@:q6..*2XTDigE%M./*cP1bfn/mH'RDGW5GfM[!K]W#'sn8*U6_5OOiV]'<9k[
,roV=o^8(ce*VTWhi?:=?hSj6/r#?Yl_LnOh@T\4NRmre:[<9!fZ*R(?JeN#?WhZc
[^5l[Xhm7+<l.EWU"=ThHJ_<8l#3fS1)^Cr#3[XXGa=`Pe$i30/B7Wkbd0$l\N+aj
AgTt\BZA'aWbZW5HeJqT4/IOOO,#6[8L6?_I9Ud(G>#rra;*h/G1PA&+'<k2)df?5
^7t(jpAY+B7q.6deZ>:B>:[tC%_CGsCnp5pZC8c`fjLtoc&O#lbt2s58L6@P>O(60
[COV3k-:K+h:%/hSW`0Je=FI*T-&s=_P\T:8u]t@\(\jhFc9t1*?9Db4uDk$8L5f2
P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsQSJ/`Q[N8ZA,_I4QTh\PVccZ!IR"FWFR(=?
#>D`f\oTRFm(=P*<l.,p.sM-LV!'aS"Fhg0aXQ8]Rkh)Aa+2r,=[ernaZHS4YX\P=
2M]o[<jjM6X06DPXM2fIe^eLJiO$>Fb+VP>=a,1n%Jrj"f&jV^\uj^[R-)$9g"I//
bG-&bO*',bMQ(7"b7B4B2(9u`olueqr8os%^CqXV+3G@*et8>%\TH"BTQIebX1L#=
!LK8;]#K@dRi!?\UhFqn-i$1(>0/3b,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`
V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA:dT<2(bX][khE[p]UD62dY(JAUlg$6/Y
N>rn9f2sNZ-X3J6\ta;S@o^tJ"V/*3!MgX6]6fIELAq66#q==p<l+',5H34Ol1m2J
0rJfX9>eP/#AGlOFg^8ZqsJE7FYpf"49i/a5B9A3B68TfeB;.I0^6]#1i'4'>i7^H
Lldo58*O;5\_TI_S7b&V\u%?fE:\#]<_GLR!+*d`*GZ1^ZHf%WorFq@(?SgupGM<=
<*0HETnW&7Sb91aA+_@VqLe+MVS$/]Q<TOB;k.k;_dR,G81bSAP+BOW?W-2S@]e8/
.DDL0IUc0T"5i<s3L^idgrBY7iPqH<l2&6F7MZJ8:s#IBbkc+cQ!7a%In8/%)nTq)
`2';*-&pCQZh3S[4ss=p=4,LB?%/HLgKHg'AqeuP;EK)(?e.84H&_(^Al.9\`nCl]
(*2,<gG>qpP+.:X=^>s@i7[>VB4K>$i53Yh@pC!=F:_393$4U!#U2T->pPS)8kC:k
;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0Hs
P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a@k<k\ob"BBpR=$Sfn]
#2Cc6dL.\-VerlO&HoAoa2)<HA+beL1@ogp"c[Y1EuuVbL9S0j<>8G3m&cq0Odk&G
!1k!R?</qmgPo48IG"FFC;C(thD[B4m3@:aaiD*gf1h70oK1O0XWWoh[BJ<Ji9bJ4
.Db7ErM0%`-`g]W@k\pU>o$W?h+5-IA"3gANGG)iRS7uYSuIHjLJ5n,%bPg#[XdDm
e74n2MO%j%gF<qaf$Os;ha=h68^_#2Wi\c]oIa_4DToFqSX*QlLWRGK8o_(!Z9&/`
;q!>8b5JZ'6ZL*ZBR(@t>=/L\CK`4[aV2:.6F#"DngsXdR@2PZ^jGoi*DUin2=E3>
2cds\OYJA1-RTuGLZN+"g1dL'ZHEMh>!,A,/\bQ)WOR\lX5T48!%qlZr6eNe;q&(@
ds?FlB"/cU%oT44dr`"c2#;?c3?VuMmZ/A,moumRh.nfmAdoTnZp*J43h4s088B6Q
\]/%@IS7%>,s4EBhNr075-=de%IIad9Zq4@D.Y8EXIqGROT=d9<%Yo2DEgt]fpN_Q
,:>84"t_f/Ze+k%hd,p9]!q_sNEl"^,I6r`4H,.PBX9'5`mmdX0=&W[f!VUm8L5ZF
gNmqBc2,rUBQO1'>ue/tBChd*ZpRN&mdTYQH4):-U%IJP*8;Eh5^Q`AE,_qb#X-Zk
rj)K/l8K-!*i4dWCVGdNg;c2N!&@T<8lA5+P*D,%%(<bUKl:bODV4I,%bEs-9Q4C8
VJ.<=8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"L!.F4SC_m_AWB\?6pQ
HG=3;NW/t[G4"qSml=D<1UHS?f3a_iGaXlj=t2/EA$QCna2[g_Z-4N?F%2Xg$a-8&
@Uj"]B@=XMc1LsY8NXU4lt1pdJ9rc6?WT9h>As0bHXDnsbf<jlO(6pmCi+!o[l)U^
)T^;P3#MTulN)33^r(=_mDd,c^C9c^;cUWeqj@B`k/1=6?aG"?SJIRBhP4r@fbdj0
3JP@KD/L_!Tp8s2**VYGD(T=;@3c:/4B88,<Tq5/HF;Ffm)k_k9CK=4*FikHQsAf<
G;SeW7qA[b/ElMFD?VtA*6S>X^F(>RHYS`2XaS18d!H7LUo.=Fi*,(^nd<1sPZ.S^
3r7M$gC:%b#196U+^_!'X4_P3InfQNEJI]_Z.hd/cm5YL@,k+POe5ier2/'"SKu:S
E+YUGhGR:nAGp0,30i$QD%==XjkT:(o#>Qr*B-s;O<=brX!Ndf5;]E8lJ5[Ck2ToL
Q1f$CVjEh8h-3ufgh\+e[b&3Q)m"G!F+JnZh6WdHX"lK:hb;eSkns56h!]Z"V30&p
e(I4JX8Og/*,GVq<6PmX/X8KLgJg+B[`/mC,G-%A.Bh+)Et;+4SJs?EP^7-0oWhfS
[I:9prC43S[^E`:&KkhTf2)<9FcZGHGPsmk/&FFZU<\mUm'gLffop9>rfPN]Zp!le
EH*+KPJ+MT?CSNE<pAJ$-;AE]f*g<sCP3;dLME!BI%1\Wf(&8!hpX<a.V79,^GFIW
=N8eOg%m&$VSh4%WJsNHepalH*-u[PVbYFXanm\c`ep^s\.)qcD,.5,>/9mEOQS@R
n@P!n0qjTR1]RcB=LS0(ka.4mZ'QGXLH<IbMsY?_a1/h62Q",D*QEOW.A<0Z]!Yg2
Y@\3PN*_7YgK#7DA6M_YDCr-TNdfg<l*$N\8F##Zfpt.t2a6Nu4h61pS9jC:jqkJM
G>pq[BcJ/A(JeC4_li@<`F-GC[,gZL2>\4?")F]%d0cHUeXi,Vng__V>lOf1!\nK%
lRf8iiO"K0pCQ.;8PTdhl90ImO4+$3?dp*+Z?%M8^DPR!W7>JB)bm_qn);a-jFPc!
ehJki_tnOFf=^e"CUp*7/bFU4Wqn[*`g^82LJIq$XJ;K]ghr`S9W#*MZ)qm91NSB`
AY-M/iahr5/GcX!lo??C@t)sQb'(t0DTgf6)Qg1^+6$K;P*(/ql42!T<>OZV?Y2H\
RWE-VACB):(:MJi@pTHE[D74VD,TW3,7gW/?'"8RD<7Yln$1Hu@;+BNc`iV+i,Gip
V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,X
P"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL
8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_Js4I~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
