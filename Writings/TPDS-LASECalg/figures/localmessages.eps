%!PS-Adobe-3.0 EPSF-3.0
%%Title: (localmessages.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 14:02:46 05/29/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 595 123
%%HiResBoundingBox: 0.0 0.0 594.75 123.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-05-29T14:02:46+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-29T14:02:46+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-29T14:02:46+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:55FBE8CC53A9E111BE7586D53BE239AF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:55FBE8CC53A9E111BE7586D53BE239AF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:a17964ee-6997-4ccb-9d8b-649a2f1bf093</stRef:instanceID>
            <stRef:documentID>uuid:7d1497d5-d747-4ea8-966e-77b4a0fa3ff4</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 594.75 123.0 rectclip
q
0.0 0.0 m
594.75 0.0 l
594.75 123.0 l
0.0 123.0 l
h
W
n
q
594.75 0.0 0.0 123.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 793
/Height 164
/ImageMatrix [793.0 0.0 0.0 -164.0 0.0 164.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%1<OR$P!d[%h]Qg&J5]n
'GM5q(EOA0(`4&1,p"*K*Zc@K,:Frg-n$;k0JG17/2oXP4#]5_4$,Mc4$,Mcs1eUH
#QUY&)$9m`!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!;0<S8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q#<o0b'C&WH3
MVq:E`]$[6>`tRJ.`87Xf4$s-\Q$0VWA\8p)Ja6IA`1@XRK!7M^8]E/oh9]=',A-.
K?%MuVf="LrjgKtqL(M(msD=F2N"&*2VR>4"Ln#G<p02G<.F(d9mL]Q)lVZ&26R*3
2?(!8r)-J)P0`Ea>kH'9d=n!WDOkbso`HC%R4`;Lkc<_A@D=<ER(oo;Pq@7]hfX%H
VM!^Fm2Ne%Uo.WIS('Kc;oQN"`9A-Wbh<T0<OhC3T?W:tXkJ.9FP`_Ao'Y2%d[u(s
dX=XC9tH?([\l,33b^.(StYh7]Bj,g8?VfXi[_7p[@=timIZ>f*A](EA639PXpnJc
&a?a:O0ifeG99;V]t@6AI3jP%5.`h=p)]UA*mVsAa2`'>nQ3!Of2#.eb%;lEL:\C/
luaDlguh_irWt$fP/4C$GqnPBUpnBcZ5r`ZeY.6RB*+^3*(K+<I</f$eFE"\[EWpD
i_i^#-%sFT]GDYg/#>,0TPcYTN-t2bYOsCAj5")/Mt&60#LrWN2I&i%2YqXH+,W[/
,dME)qUF;T*8I]gq>pO>Bu[]E,P`s8>JNHIQVkd!c#-C&9?tJra+4Z6*VR3oS^"mR
p`ub?-(WNTHL3YXofW/"\os/cV\IM9kn*7F-LEph#9sWB6gq;Th,bAl>iKP$pb$o^
dWB2QgDRM^(^VYC8Q"aIrEbdn3gO>;Dfg;#WuTJ(bjG]4[se[NfKQcoji/DAj5'_8
]u__X8Pj7EA\BtnS@U8t1UA=Q/?!?[e*B!`r3`*h0<ZJnC"*(^p(#FIkt+Z9P0_7J
Xuc]>@V"LT3P.G$D5GRXn.,E)[amIEmQJ^nC&6r$DTq@!Z`IVB%"IVY8p6@sHB@HH
ec*X5,?kE&qbq<NSKi'Mk,S39qU@8<p?2)>O$BESZJbNW8UJNM:9mMK3T!t/62d1p
(Lt87EZ\tBpQ3BS-.C]COQ;PSCVamH_[a\7Y-WM3)f2XOCeo/;l(kSfb50jn9A;s3
_8s[PmnM\UZF?.G[s0lm!663X`EVU&*F@l3HCc-:YAAMZV]ah<bfM\?\+*$ajH^\K
hc^rW4TmdBA@"1g8'1+,]ZeZoH?6Bnl0iL_Ah_tV:4'C./2(jfCT0m"jH^nci9ICe
gV0k6!Mk?PnLXU+@9q+BNl/]62:u&U)g:YiToHACpG[<0XaGJ)$koX5DksWWoqre^
g>CAjV0f^l_RR(Be?Q0;R^^fCk>(7&UH%&bi4']1n%8W\gh<_'5%uIm8S$fYC?SgR
2<!S+38\iSCjf@9\ceDn.qh>oqT8D[""Dl*h+&8#+b1A1Ff_Zp7#BdZfd/[N.X6AK
V"GO?l1qjbD@J5Q7BE`\"psu_kp7@\36ucf>/rZs?oSfB_&T8HW?dX!;Fr-sP`eT`
V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M5+Qdg>1"*`qi;i94q]#N;Gqd^tLb"@\$=Mr(oX$*34
Wj4PZ+(M;G-G]>A['W`_kZT<.MNrU:WT;^_icI<?9TU949<#r3+3rU+?"&fZUo/&U
S^`GG"(N:tc5S:gms\BDmLIk4ZEh89p5nc_I^$.-Qh;u1<V6[SNCG=qVF1rAmBud2
;H'TYaj'[o:Jf/^7JYX(A)m6.EaM7#!O`!+@Fr5lh)D#!^6&4D_5YYacl6K][`b3!
%-m/Mo>sQranij#E6/uG7hUD6(119Agg0!;M:VN(IML[+"!P3Wf_`?T-jJL0h<k^\
%PBG[BI[!RIZ]ZMqClohF,;3eWJr0p9SWADM(-=A!1fB;:,bi2[uN`kDlas,6]pU`
p?-'0SD;=`T4@F4+0"&ll?d'^\\ZiQmNl12,rf7JqWE(o>r)R%cMYj,H17jNpoE4C
^:.Tf*@C,XG=0&VACULadr)tEC%LIeoTE.6O41hK2^5kSqScK7f7uPYYhN9,8*4];
er`-ESO]GcoaHm]SQ@`W]rc4HMJ?p;&kf\tRiS\p>)=N&1T0k"JW]YiT:M51,Ap6;
m.Y_r^h\B;+m",OkaAslb0$mQ/?k;qEj@SpkA=\qNVNa\P"KD0cA0iZ2lM%74)rN]
U;G>ME+\LC>Yc;r*Ih*RX]7QO8\ns/[i1r)Eu(39.2>speCEb];_+g;`\]Qarr=;M
6i[2e&-dXfkp3)NP"@)o,a(bt8L0I`P"?pq,a(_J9:3s"c_$9ko*aiq/#;09@ljA:
>45EM$VWG4p;cC;k,t7o4\u(Xb6LZ>!5]9ER0aCm,L?@G;>FaM#Nd*'-0JWAqNoc<
J$-I0Vu9oCF`ukV\W*T7GG2S0`d5'poNe\J[;"ZQW;U/h?X:CA@^kYT?Wca]D5P=3
N-pWE\?L_P>OA\k8W<gCm!ptp3X[1uFHSMa[=>UQI^3L4@`@TKc`9%5AnLn!#-5fS
oZZ`H[aVE#coTe0J(ZtpUi]I(WGbhA[+JXnXfU9e`hgW!M\H#!Fc=JWVIK3^RuqS/
R29AG5)6_YD6]+Eh97H)\aQ]Y=8JK&?+N[5eh:Is[QNQZDk&DQJGNWM+%sdl+<DXi
eku8EU'VeurC\5Mn"K\jaSNl6dtODpEGE_Bobn9@O;mGPh!JsV?9>8d0K4%kXq1G<
5H=ZgqMg>+*Ch:+FPTYLB!Lg-gN7o(k6JQOrr?0'5HQbjFR"-2SLa!uK;[X2aj'*k
_dd:Jb1jPXR+>FFZ0iO,hR3#Xi!PN<e'if)eLke+n((2$Wne,t:T(M!/N9u+[tcuU
?5u_!HOT/u\?E!$Ip.;of1/lFlWq1jh=:1i[la5@3]ORKDnC6-X8s<`g&D$jR3ONQ
2C;fN7Rd+'J]r%BSK5@@hMD.*`;N:toRD$PI08![jaCVZHNoF&>&<EreE:FS\:J47
6hZ6F<Mg)Wq1WUe/$!=G<W4a7"pJ-fZPMn3?#D`1iD[g/n6EbPPG%"r=o+3PK0-$n
FW*HPAmf-&o4)dnl3:5F!(L/q%tI<GmHW<G91S$[+2g=J9?I1/@f9g%Ip*k904)rh
4Vt!K(?Jm">?4,,rb7Y/lN=]fj'L\\Fag%WQg9.P>ed=(=*"mDl2<:n\_4'V<Rqg,
X=Z#CeZ]$pGVXLMG-0l0e%0n__t36k!_^coX8:fS/mh+Mam0^bhNIb=?>XsL]g`5t
%VMbPUjS[ij=a)7gLD14%(5"RVo0TB>DjNd?"j&>8L0HsP"?p`Uln:q.3t'J8kC:k
;Nr`4X'f,N^,XmKr2OHVUbq&hj1O,8'iap@k:qs1+R?!-:rrL4oj]H>[j.^-=_3UH
I>3XR\\uU2S/W`:<iS_?UOgfR:J.M<3c6No[GGN8<&OefDf.E$<'TMh8RRKmZgkD`
d-'LLo%rK>P"KEeb:VtVVcB4P__O!\5l?3$ht6;IK?I-/U\bG%=/J45*2qEloO?M"
RqSn*`0+%d/rm:38h90%<&Z/;U?ci62E'3(3:*[![ZYd[Wg/([2H\:0p0Gn.mk".s
FAKM^5.7`5g.<SNh+K]-inD5tqJa`Y[U.p>.W@2ZD2j2BTj[PRTokM^>gA=sKt_0^
59@sO%5.B9X5*)O#IS=mP+8'"XPGt9AD)s1?<r#MI[R^6(/jAthV0NZm6'ZndsD#o
8F#n4St2#sZD"i%m;j8p4(PbdC#s"RP+)%9$k.o[na^D%^m::l`jgU/6isG@bce'3
=#3Ek?VA;Ec8&_k.k[%`Xg3e?d5lJI_Rl`<qT^BGmbB7<Rc]qn1NOSJ>$u%N.DCt^
rrAO6[-N@rHAs;V[FJfsm_5%"rfXs3?"U7.g9EC^^H&PXACar)M:Pg&Rg(tf;gfsG
pAY,pq"e@GZ#[nR@V(jsIrcg"&,Jom;sO$tTi8/8b.4ruh!A2dO=T(pl&(+`3UfU7
oTi5of"\9=q$k9;2R_[/_^N#UMd1WK?1"c4r0FW\;Fr-sP`eT`V'M3q.7keJ8lA5+
P*D,$,c)cL8L[4VW:`jN]II$&0WaOU>4%9O[l1ZR8_ms=51\uB++d+'.QpG,oT#$[
m\cCP0mD#Tgc)kAN"Y<$JuONXonr[9o/aU4.:WkHJV(`&SohF,RchGW_2Caq3rtaf
cYbU-.bG9Q$u`*&!,._=m/T^PDO8r<lL2(Gf_J4;J/7%)9;lEcrf>U`oDWL%l@-9U
3/?SQoZF(-7^qL6*PM08=?k"[FX33uVkpoqlT0Mnb.FS[Ug%\i[604nCOXL]G)q4b
-e2S)GV8YD\o'<?rr>[VgA=,%a6n02[8KRh!!!!)"$cp0P"A8;,a)&g8L0OrP"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>.@ofrHV
/0-8@!!kg[A1m[jgX(7Hh.!P%AK/47'q/mPHcFVWg2%8Pq<,%N64[l05mfh**UE;#
jZ;l9r+g^eSUXYOrhgoDrr<u[pk[/o!0!]Q!'[Z02tT;#PLX[Ljn*H9_dfaAmI(ut
i8@)?i7%>E+]#.\Nh=oW?dj=t?G8:NV=j7t,d`=ch-6?97u@FS7!fmQ!1di=;*WS5
n>Cs>!#U4b9tF]P&,uVm'Q:/m3;?ic5,i,Tf\1#@p@#H-[>k0%9:U)DY.pq6?0L*G
VUa*Nnbl]R2L9LaHXkMD=mfeRm0B(cC[1(NqSPaHh.%21/>V^:9:4k*cI^Y0\4gWb
<8r=26i?*hd]$n$OV@_4JGlZ#r\gsT/*^t3(tLJ-Cs&TuZF:(D^l('cRimEUp!Y@\
=6kT"eW.2iXQ_kZiX9!nnQTpWpC6S8Z^,=8&0o,rh]qEa5g&<_oF(25o_`/=<Bd7S
Bl(i&=hO\Xa]%M4<]UcB.dO.:@C%4WB"&E84ha8*gt,&\_A3(N9Zu\<9<W5gL;(-8
OF;-5?fLsVFK_ul*2dpCVgXPOD\ieN<C1m2BFLqDi.C(@rrA!%&,<TtA/PO/li-rg
/#gScL%ReL$N?Yn9W1mS,2u8O@t_8EI:k[p"L&^Qj]]k(Z-`+=9cX`t(u'V$ZdGT%
@,'q*XS7L*Qj:/iC&U4@r[J/s%qs*MCWlCSrr=NU=$Q2F^\&HOO4N3j'RaWZkN[L4
;5:#\b)%-;53l?QWO2Q%Vpod3CS?banj^=Sh$^&iF^/glFW7ZkfPAO>HcF(83"`MW
2#SZ?=P*QQMbg<42d)8e:#0B`FcUaMO<r16M1KUcPWs71LDSu$$JWm]1&D0W^5pf.
VY'4kIZMo<NW<Q5WbJX`V`E$L3"M?9`;E25HY6"JX,$BFX5JDLU+4Kqm5R*a=_1To
<R,U>lCQ61k`_[n]:;[eDtPag.\+^hS[/0;[b@A>hKHSc3Mmg:#>hh>cTp^O==>$B
@hQGO2s;&KHR+2d=Mi[uG):jO7r^-+T\j4PZ&Z^hoa_)RE'M;(9_;Ig0^<lC]N8,u
:<Bsh_F]`1jT^]?F!n9c\gq>K=%uC?ASc-ce#<<Q"-TrN5Lcm:r<FJ,oWFfl2tjZ)
IBROAHQ@1a>9V_fM-FZcUifR,,_B!Y8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk
;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L]Rba2)ga[[@aT%u=B%6gE8nl<,Jq
qOYp*"+JXYD7!FTj5!A]a-tLL,rrXtUg;GeF2)DNA^]`.'P0:jL7'+AB;R6Ne\tS$
0C*3rcZ/4E]gEdLm/&[&RtGA.\X0d61&h4Z(>;>/Tnh1!aMYJG/rR;V1!@7=RN#;S
clD6:%s&+dr?1<)na^\jl5/I6bNa<!ZF:(Gr#F-OS!qqc[D3Q?"<Bc3@cVr6kc_MX
@93AoP^1@7ml9`"en[K>rrDFCUo/&USXFt*l'PEiI!>6rf<r-l4dFgbLAS&f2R/9^
5FX7q9;H^eT@W>5fPYbITuO_7mV/ihSc$(TmM"8"3[lW(cD>kKk>1>%Ts"'VG"tnR
,dNkh@s7,[]%\1p"_jd/,a(_J8L0Hk;G.ZblYfJ9Z.*6@3ebd>>hi-qf"8cl^!*Pi
ghr84Z]E]:Yi@V5]QUd`'.q&@jP36+pQ["CjI!HqOGa.Oea1KEh-%KnnL\oA%&LKt
9-U.>cV<hK.\aB_U28KLcK##(.r,q;*sW^s4A*Rl;UES=hAXeW>in9%o3I(K6`%M[
p^XnNmDojq2g]8CJN?.jhneS;4\h'F?sMIPQmJY2TA=if(;%ZQRlkbIbn<.fG1fG4
P>n?@8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTs
PbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`
Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC<F3NQqAaD4rcF,>DIjH>[o/2"W_CqhT`
X?@`/Dca^Z?uaoURYW-^p6">F[.Yse?X0g=90-WBobS'#8thJFr,mYt%lOYBBBsbF
-<nqRJFI_ljSd_A&&h*[).kEbdOZdBVicI4bj$9Po!,:7Ffo<['OC@sY8;2aIQ(Bt
\TFmAa84st88hGD]+B1pW5tobI5!5P!21HLIiBaW17%"\>0H079.[3]bp1<<6>W>D
)NZ2g.8i__eL>M:B<9e;*rJ])$T`?#A)>*.,`NcG^X75Rl$le!COL$EZP00`T,kn;
kLeQnhVB0ui9+;+Ohhd;d!SnQ`\ODL]"i(u"'X*F!,)@63@k7U1Q\j^LPjb';]*[0
/$5M)BSNph!$4BS,a-VYV$7=4Z3GI[rm-hV*hX,edJ9*;:$qkLLam*^.#EhCYZ1:d
)lqN>nP,^kQ1Z/c'GDh&`9;</Sm$K%4ViY.qIWmph/=)P(ooC/%j6$WjO!@OZe@XH
=)bFNiq@C0o\=^I"(=bHP)1Y[,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`V,+/b4FW:=
14$*)o2rE3`rXAYL6"86'ue8o!0(#arrB#Y^6"Eu9:m<;/7bX!d*XQ`?@Si#=R2U>
)NiW8[:e<TdrGrr:7[>eJC1k]rp]%[F=!d%G6kbZ!93=DrDTEg?g9RKb&,W=;X?K8
f*fJDpD[=B!17PjI#)(;eVDUde]sKYGkB9%)e6Zad'T<1>$U(f#pf9nb]"1>V[m,e
lXG*h1=l;I]\c3Tn^@$CWn6p9W4VE(0`"p\XaPf55n)b]^"Z+$O,E.7^9"=baiA@K
=#%-an\^gS/O+5]EW.P9D*;OscX4M5,7cjcg?LE.Es+M<#n',c5LpLsI\paZeOfH5
Xh*dM@JWF#bH#Nqjq!%HO&7+70qEP0dK.](I8Yjir1:5&Y4SllT9n"\Y4ZgS#]<QC
*X--1%HX::l.E**VtKrPLIfR2(4T5a\$ABS>:dC#"LPSVQ95BR2$[.'oWt%65K0O"
qT<&Ie9\ZK=gVl)qX5/"61PN@4t<J\=++9:r>-Kb+&mQa;olM/[d:UeF)kJpS0i!!
O$:g:YnPG4;7c_Q35<+Mq\>r0fTTW-o\Q.gqL;ScDJr4iY:>=tAS+1]%bGn7'<!sG
S!Wg&lFmPHG$]N1q[LF]n6':[9`&#?aaYD%/!Kgl<^mVO/@!X7:K$GJ'0;-@X#c$c
em?E]dS#77*q&6A<Or]8lQ9I4ZJX1\AmKY,#L]L-+&I+*GV1kb5qpP?96($\iaq4@
Q*;P+O<87J0<&B&J+8ZoB;kJ"4`"p(0/_FjbhN3?Dp`o8mRMlq]$Jq[M=l1WG?E(m
's@BBFLghh"1#??4jc=+d;jY=MD9V#LXj%bC=u<=iS<!c>=07S)3L[tfDm(CDoqj,
d=/A_X*nD8oj4BhfYQ&1ZKeEjJciGD<mKJ\jQePV/+gii\c2ZX.3m>l\IZgHH;E.b
Wh"2Z@<BefbAmlSf(RcoGEY1%1NDsmoc8OXjRmlr%9X@o0j$!8K#b6QOOGAuBPY>L
i0E?;=aJC`l</N_WI8"7<ck>ka_&cc8\"/qiP:o"BEa'r[V'ujfB^=MeaKU<([IW$
.Gsh-o>("U4'[48cMN29I(.Zr5K!(sqpj+=?cV_a%^";CDaVBc;<kV!I!-:4]SARM
(]ZFEc9EGRf4/["[^((h#<"jP#a(g4\<!c^ooJEW7f'"!+-2HNg3M`S/CBG3j/Dt*
mSFg[nMTAl[3p:ifB`Bm8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k
;NaTsPbaI6,q1+&8P3"ZNcdK@""1&.8ZNK%hdC>t[^MM>o?gZ-^5?rEZPt'>b-#H]
`]I#Z\3kiBJs)`Wl2LbD]#SGR<9_Y>)iP#3\=6S_8:1[B!7>,:dQ68Xle%sgUu\j/
U\)!eF%P`lQuc'BH%4D[nNE(s^GkGic:(pHiEALOU](_c7skf]'u8ekFcWSo5hh-,
fGTnoY8X[_5;heO,KPP&rA]u3:TD1iLD)1M+4bTD>E?.&ed8>5nVu&)iZrmfUXOWO
2)>)V)f8Ubbd+Mof)sefBMqb&>uj*a^A!NMWMT'1N&@_NP"@fe>ZXhg(No%&?4/Fh
VMnR^h]G>2_;t?+:EBDhC&N%p0,U6#LYJ'V?]cAnTX=+ceW+Rd!Z",9a^>b[A;/G'
Xc_hCP"B>g;J^.>\m=aJl*)/f])6WGGQ.YI_>XuBjCk)0fto`o_]`GRe(OBkr-kQ#
?=kW5]-fogc#>B!3-K@6Jul+BlGcuElS`,a'^+'5Qob]?g)V9eXO$TA?F#%JIICsl
Ig/QohH0$$M<]L=^WkGsBD.cB@/MQ+2/I\_TSd]7OSUrI!kWiJO?G&m!4N=O3kNHE
E=pnnCq"/%?hl?2rZ]\bP-_m!rrD%s'E5QB!1t=?F6[oC3>=:6=]<u1Mjcn9Qdq/!
4Y*B$J^aIZhaR=cHV4_d8XDHa2RL<O2,[%da-`8,&96r`"U&(!Ie!?*I2i1d(;45W
/YDkkFXrOLZ&rX*eukp9D,-bY;dLu'NX[;(2\-q5]*.P+q5F;nL&V-DW;P*8rJkOA
4eK!b%@4S[[q!*P897F1_?c1m(3cPH:]CEeY+bUGrQBZ6<qRH65*k>dN3%p87^u"]
krueD%q=8dr7>HY!&qIor`3J-!:2juq#s9\+QNX3=%?oHr?&%hr;CaK^@1J_dJBd@
!707nqsOIFl6#VETRZ'8+9'10rrA-Rrbllhr2dg9!8)Vt!:gJckKEfGWdjsFFUu4T
mRtt(VuHbCf22A4roNDeo6[-[j^oV6_q4ngOA#RkF:\;N_uB_hHN+!9#q>HF!(Z=H
rr>8h6gqYaP4X4&rrDZ`e3<cE\U'&/hWQ'W=bm"WYkA"rj:_ImS)"2H!%Tc'!;7JK
r.7Og^X;nUrrCBs;#B\[jLlY8J,K7f&&.N#?D7B!2nB7n<al".lofjo"Ma*n5lUi,
bWl&]YQ"SFP+OE"I]<>IoC^TsqnKZp8*Z`H!'aaVn%8I`W.3([Jc>_8R"+uD?iE>E
q7Y->o!8l,!+G3n!6?F`bP`N_J,K7f&&.N#9@<U6rrCBs;#B\[jm!rZH_>lMAfq#i
fDbi49E&jO&,`NHrrC\trrDTr.J!K=8*Z`H!'aaVn%8IZ0rk)Np6rF<GL*PKgU2^j
%Pg2F:@$@nk4_.@!6WMMrJ.TV!$IiI=8E:qF*_^H+NPaa_$#6r,ra1,Yd+%j(&/Y`
haU=XWlFhA_@.ZbOVaaCX^<s'B@j?WFh7_p"lEFn0(O"q'(9/?gQ'orCi`(/mpU-c
&t_+`rrA!2Y*?PoFT.6uJW"1MbK7p[CUQ9G@C!I<&0U@MO-j7:P$@k@YN=;=D53Tn
GG/Jo>Nm"',7KnoJ9P*`(VRgpoC4>]qW7BWY1rWDlopP3LSk#\39NKV<p)69;Xq91
mErRaf9os>P"/X]*f'.P:spU!^WP?gXjJl7VaA.kT@$S[*eOarc(ioVr^d-0]e?Pe
I/97ihLV<lIdXII0\_MLLgF<M!oO*%FPIBF!ZKuW$e#_]>:0+#>#5sBcRnfbn#i3S
1B+EKM66%;2RY=9?u&Ei0L_9lDX_.,,\oTkU8df="$7=b=4XI3XD;OJ-RQ<"AW1[J
?j>jQ\\JFZHS3\k[Pg?la6b#K`GPtL62M]VX^GdGr\F<cI9>(8(7]00DF7Od;[I=1
*:Pk=W9%Q&fCb?mJ(J#%f<I@gST>aM[!HY`3S%74P24?bd_XWFFj^bXdaC[#<RZm*
EO)@Ahd.E#]08OR\,LjTCTA8P?dW`/l1gUPdt5C$10ik7m!Ah%o\&&[d#NBXNV0KO
;qJacB&MDPok?<blNZ1+@.bAs\fqF1Cp$FsG<l#bf5eUId^l8W>ot8a<aAI:gT-n1
(.DG`/WDnYKS@I"FZLSp3rOnqP2\V)r!Skj.If1"1%P=OFX-0^k5'=f4H4b?Ai?q\
fBF(:n6U^HoY-fQdJA#N9YtL\(p"IV*D)8_o-[G<-cjuiA[)p`P"@!saSOJ-gX%^9
?Vn5-e+u5\e/&KBr?EP$B=lrI^GY2'YLVP1!(\,/r;;96\QG60e2nI)Rdt-t2q;sQ
N-#Wi/T;iK'!qT<k+C12r2/`Y!;d."rf]oLSU/%PJ,LL4:\4,iomX(D!;\tGTBG8g
7K3@VIoV!hS#?8dln(Hu9eZ=?oiM.n.Ct$._UJMbUs`3)?E_o:rr>S1;uHQH]jIhT
rfB1=q=tEGJ**BR?i6ecrrDp(:]?PNrb;=2rrC2ZTDnnq[/U-j1mIgfX7^]:!7D*O
rr>8,03@H-rrAi)WW%?5oO%EloiM.n.Ct$._UJMbUsf8CRX\=enscQW!:2:%qFr8"
FmAp2rrD\BeN_C$9@`mNrrD9cWdgY&]bgZ^rDijtb&3jO!3ij1!9l>Tk+C12r2/`Y
!;d."rf]oLSU/%PJ,LL4:\4,iomX(D!;\tGTBG8g7K3@VIoV!hS#?8dln(Hu9eZ=?
oiM.n.Ct$._UJMbUs`3)?E_o:rr>S1;uHQH]jIhTrfB1=q=tEGJ**BR?i6ecrrDp(
:]?PNrb;=2rrC2ZTDnnq[/U-j1mIgfX7^]:!7D*Orr>8,03@H-rrAi)WW%?5oO%El
oiM.n.Ct$._UJMbUsf8CRX\=enscQW!:2:%qFr8"FmAp2rrD\BeN_C$9@`mNrrD9c
WdgY&]bgZ^rDijtb&3jO!3ij1!9l>Tk+C12r2/`Y!;d."rf]oLSU/%PJ,LL4:\4,i
omX(D!;\tGTBG8g7K3@VIoV!hS#?8dln(Hu9eZ=?oiM.n.Ct$._UJMbUs`3)?E_o:
rr>S1;uHQH]jIhTrfB1=q=tEGJ**BR?i6ecrrDp(:]?PNrb;=2rrC2ZTDnnq[/U-j
1mIgfX7^]:!7D*Orr>8,%G#W84+G6t;$4$eBd`BB!q`,\VtF-k!%GL/rkd.a!2S'C
!1JC;J+B),rrDC;5Pe)#5&7p/J,2Ru+8[ko!2U=cdQd[SFV"G=rrCK*d_Fq:eR/6O
l2Lb\$W$bc9E&Z(<W<'ADP-q/YdFE1kqnY#Y5XR`!9k/qJ*bM\PY6KsrrD\Je3EY>
rr>YE9)em[IoV!hS#?8dln(Hu9eZ=?oiM.n.Ct$._UJMbUs`3(]D>%t!2NA`rrBAi
qGAjC,Q@bl-W'gCfq83k]ds(rrDijtb&3jO!3ij1!9l>Tk+C12r2/`Y!;d."rf]oL
Rd]J_rfK6srlkBBksW#QO8f2NSO<DWAq0HIoWS(goiM.n.Ct$._UJMbUsf8CRX\=e
nscQW!:2:%qFr8"CVQZpqF'Tjq_S6PV%V\65Q)dK&,hpr!7HeR^ZM0=?i6ecrrDp(
:]?PNrb;=2rrC2ZTDnnq[/U-j1mIg=rfR3\knC"Fm*GZq97KM4!;),t5PAai!(nn:
rrAL;<IaS/VuHb`/O0)+0DVO==8r7L\ps^re,KEDdSo;?qFCPcUe[W`!4+od;(__k
rrCIp;#^OKTD^1O/,j8]<W<'ADP-q/YdFE1kqp0;T@I<HVWn*\q[64!P=\Q=n*(qn
OZJ9sbl7\-7(;fLrr>T\6iR-uJ+TK-YPG*h=8r7L\ps^re,KEDdf0<9IoV!hS#?8d
ln(Hu9dMu=^SHAU7-Ylk1]IHO'&V,%r??@prL*ZcdYlPgk+C12r2/`Y!;d."rf^"S
C&M'3!6T2OrrB:1rrD:?PkhK]OoGFG'<$EIci0/%In9S>oSM'^p1OC*8hWg:!1JC;
J+B),rrDC;5Pe)-q5<merr=LZJ,[=6rrAkC;s(^g8,iRb:8.[fZTn:`/c?po!7E5k
rrC`Er@#?0rb;=2rrC2ZTDnnq[/U-j1r&1FeR/6Ol2Lb\$W$bc8PbfDko]ne3f!^Y
rrD:O\+Ga]!(`YJrr?Y\oV1u]q5<merr=LZJ,[=6rrAkCrrAL;<IaS/VuHb`/O0)+
,sH+ZUjr5/l6#mZrrAl1/DcH\4/l=7l9AQlbH[gUIIu90JFEa1-$8$Jrips2T<$`:
0fhNol8e6nC9&DJ::G_i=m;(>&q1523j2J3<Q]J`naWkMdBqn2at%/pMV9H;kp\'!
Xc7meT5HkebPQ`E&*WRI2c[Ke%b5=m;Yn`4S"\t#+/$1?*j`VSm5D8fj]L"S2SiRh
<I_u3>jM8BZbbn9-XHGToWKA+FdV@2hhq*qX5?nQ+4Z63/sVG9@1d*=rRY3NBE%r4
!@9kRAlaA!=De"4([O.HZa%]Y[u3-\gR#P-h)3h!Q2^idPSuU&*d?aX;X?mq#LlJu
&"?j;go)fR8:uXSd%ARC>I^;0n/\"GXKnJ]nHd47pDZ;\Iq9D0\QSd=3noH4T\`1W
:j[Bc!2$"9F$lC"i?3q!n3LB,Buq5?l;lM_7m#8Wg[+IE5Dg=Ma!8L9:]ULohi[gL
.me_UIkBNLl?3R)qD0b6I\/@8,/SUerf@!m\='I7)Ap:"BE/(c"R<p7+p:BN;#2d8
<]M_s>pdD2El]?WU@o\FbIh(U8"euB@`)mU3)-k;_qIa(NE]3!eoC]3m?LEipWEK;
I91lT*5#H2ENR.#DYe9[XmPWg&6BA>I#abZH=h0QF`!T7i*TU5>2MR$*KQEuh^Y0i
VIF[QJ$\7DO:LR4e$\k\Ze4]drPq?"Qd0PBpBPZIMg4>ecCNGOa;J%<degi`>3agJ
$[=ahSJIMu5jOdI5(a)=VmEEUWpi6;a-P<FMd/KHW#MpKM_K5+Hj1?Rrr<u&GZo+L
0]W6(&+Hr/6nZ\gC@?UE.BU']+ni=:4hu5^U/),>=^=^D[^\&N''D6i!%Cd+eaj:+
5+@%knjhB#5!H0br72Upd_;c>/S8Wr[CKEK+k>)Y'NF&/RLZN?rTAQY9ZbQ=`]Y]*
p)>8FQ9SCG9sqP1B/,++hSEM]:CufjS]&.VeefZU!"NR^.3u4^1Qk4*gooC&,a)o,
P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT
8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$
,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`
V'M3q.8$46a3)Wj=dYRWH9!qEgKc^W[I.I=>sAt),a+dlE'M=Ff*q$+LAVisL7!Db
*nm&F6\On,bcatAX8X\3(Y-3e=#]i-HXQ^E1i6\$!.qCNhhdN-oTE+88L0PKlQ%^N
?`2S1kB_&#qQ5T3g;CI^O!6G%`f#gj[?asRP2AnZK=:(-@.nY;G.X'4ik+lSebUU?
=(=sYeDsX-ekJs^alU*c*7N`Ao'3;sgqgdKegGEg/`dPXbDZ(T[JDcZU,Ml&7fC%?
iaH$5koG*NT2Q]reMmCi+T^!Ml7?mnpb]Z`p$N'!_<M'X+(E>VoS"U+MUIP?L19qQ
p!`M875BS*[[-?#/gQ1VN=tEakgm/Tam9UZn2fEG!uD"1[/U,\bT_e&m!Gj!k)YD`
\j+`f3bu`A9qQ7GJd&;jCMO0;9lbF'M'_"tU<UtnJ>f%gIL-T:rESRtl'U%-Pojhc
E3f8j?ih3BGAtCnP'a<QP$+;qio@dRh>"0O8L0b$,d[@I!)bs)UZHV&%JJ=T'XRQ$
H.c+\[.aR2n#QC[Wr6,BYNk<%gO2]\O4i>da7OP<,idVQE;#p!4G8sm.3t'K;Fr-s
P`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`
P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT
8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$
,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(biOc`*Z0?D;@[+/9FfjP>*8!tc`R-PWK
qU/aDDknI^):*)ESng3`WnKh26Q\#J?Q3C$&9V8>8lA5+P*D,$,c)cL8L_gJ*BtpN
BCre/O0N2$m(AKPP58DZ]-G)(gV:%rF\\?Yeo38+]gAuA4mgtsSp['WfRp+Pg.<aU
n@l!sDMO-M4V+R+mAZeW+/h-MV;ui9RTj?Er0J3!!$rK\@d6*@gXgaGoX&\)K/p;Q
aWe1%k5=OLaX!cKVgVt:SQP:Dq6]#Xo`p%Urj?X!O-j)XO&5&2+0,\4=B&iD_l^&D
E;lnogce/>rrC;)n[7U%90]=EdB/c3o`P3o'pdUmGmHu:nk0AWrr?=Z$r`RFe61ao
9C\YRI1Na#oF`0_YN,W_:Zs_s%1DZDV]^A1f^*h^!7=A5l:VNaH$"AIVmA%STDQ*U
F`%-Y[llLmqF]ltefKI9+(FLp\!-WqgqrOOG=kJL;Fr-uUln:q.3t'J8kC:k;NaTs
PbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8Rq^9lYZL3om8WtItXi-g-P1C
rK[B_dQ4$q$V2%Iam&g*itDeblZM)b`]:/[I?`9LClr;9`qF6$,J5&;nQg2+>i2S"
I2i)koZk.1#jRsAn^T41"LsB5A35G2BP-^a?CfO@VDhN>=T)EUqAbBH_tc&6_"kA$
;lYBRGT)q=>BW:O93D2o0<r$SkTtMn5?L+arH?<(^ZpaIqHlk7Z.7BeOO3/q7c1&V
X7brKBEDS)[=5*'B'Z@rAURGPfZO3oBk(61;j1#Y\(CN(2NI>N%64EAdrj<nMb2C<
=t[;6n#ZNho<Y;se:,[9:JUZ3l2%!QljZ%cCp3TG(@(Jj!2tBM0KuRd8'9-$QbD)G
ZQC3[c<Xjq:r\R=HS35$Rm+487@d6?4lMIEpJKD->8l:/*C+\`2j\e+C#<5:Iji7-
1+c!_J%ZseJM09Oo"K\JO8NPeBkCr^8A?4T@c$-X;9<;d)Uec!(rfJ9caC]^LZ1D_
I8p'`oqNVp/\b7K\!jMBoSuC)>sYUL#A@UL$V6ZYJg4VF26RU%m'Rie^sW(Okp=,f
+0<4]^9[Fe^5)A(d>:@fIa"sgGRaqo\/#OtZu%'XN$h2Y''[/6^:*uFle%a5la`oC
Sttb`]g@5f2k?Ttg<.>8@*8T%A;$`CYNp&bUS[a(i:lIg:Sr9[X&mp0V=eo/?g?Z8
L?8's=N5/pS!bj<9>6PLT;&UerrCZ"X4.'_A+[ulG4^Z.a2Q;8`Y%KHLH#q;2[BYn
m#]hPIfBEFg8O8TrE%A^%mg'>qerQYNg'0T6hW[FX4?l%qR_`=G3j,(U#K':Y+9@-
iTBc=MpZJ?5$q:4gA<c_nO!QG1pO5+SNeEgochCSorm\H[^\2[jK[!Mi!,^'8jcfG
!12F]+6'&gn[SQWr#YMWk;;kXnUpMcgTu@.^E99DWbcg"?'<QAHpAtFWr>,L!18p9
dJCEHQg5\7?#S7HY&()j='"W@Z`*p[nD2$8Zo,K*4g!aAW^BtR:;Egmj'1!dX:DT0
X7f??*gP*$bNjW-/fqL$\'s&\F(;\-iH'8d=MDCqD!O*K5>n+C%L5^RWm'e_*%eC.
>OS`P%0Khs:7s.cN6eR`I=D%'e%W0=>B@$?8(oC:e&\Zk!(POi"DYh8%tI89WC+%K
qLY\\)>AqO6MfD/K^7MuI^F69XB'aLqNL/Ar&0>mkM-0/>E6<"k1J>;5)CQ[6!0[f
lSnU[qR)Z@dQ5YF39=[)ZTfIh,22*9b(t17!]Q1aC&"MH<I\-8ihPbQlAI<r,e8E-
T3F)I&]Ep^(DpcWNhlW`e@Xp%TT.9F3PR.2jHH=SaSu7\J"bnoYEbH.eL@2gpL,e9
h6I?,p/+-Lrr=AF!$[,VqKM.lqg3I6)'tp%3n?7@*g)H4nNgqG=XAaC@tEA-'BJ*[
5ra`Y:^u]cP">g+,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*jIUCYIK7cC)l8Z-_g<5l4pD6Gurr>1X/\fX:=&:V+LPpST5Hj=+J'pn`
l:VNYhd4D'J^A:MGRr*6S8n)R>I#@N!(AQIrH$.HVTcm@bj`WKq)3U`9:]"2kTm'K
B6=`d4VOY4SO5<(D!b)E2BV58fm3As9E&YUPHS*R3W2R!Q#F=_;*XSQJqj6pZoW\)
kkubs9u<Y>Sm>?5CQJ.Y#35;H:3$-LeFWXP$`%-N:Dl1MWR7p4D6OtL4r't[=8I\O
'D7PPf@5)^_@FT*pfQJ7D4``fjL::D8?oG)nE=IB,tt&%`n"3q6X%mq!(BI)PbaI6
,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&j/C'1$qLng^#9,"82cRhi^!/%l8L_OV
!1@1q)6PSRnD2/FQed]-aAZjZi0XApafAZ!\^]jgJRt,-2n)"cVS[fT\ro[)^Lqt4
UKT_(5"'j;?5GgBA)C)C:[7n%VcRAMbcj)9]'OV_L?`\!MVLcL3+',.YuRqseb`SV
-Q=QWcOL,>T`,8t!9[,'koD"Ke)U;6XW#7YVL?X-,a@6uY.n&-V>"8Sm3H4OjAQ`T
AM"pbW;>?C>:)KcYCoL+VY]$8+/7p"[Erg0`6&"@9m6O:`\9K8Laad44[T;u50oEe
dh1isf1b`,8QHU,hc5-,j:B^]S0smRj4?IWm$1rWA:7M\/&;pU,P2aU:5>J(XC=eG
;HSG?8#NT:2IBA&emc;iP!81`GYA$PhTt>1k>eZ4Rqf:%q!<>?;n/".rJU?&Jh$W7
H-ur"NK!g+od['ge,Hg39mpXic69XSTDGSYRJ@Io\<=b_p"bfIoW,A3qCIN"GQ.XP
F<kc#m*4FfoXeU1))p,BPT4=s`?dU&/3hiq>8grK'-4qMY<II$nS:[<YH1IQl@!!K
cdMIVZ(2-sG1MhI`0M5;jNh645="LN+Ml\bX92dWR8SK"5Q'd"mC%+sWlYo=B&5cA
2n^M!M(CCS[hE+IVtF(+SS+k]+.TXG"Q/h"TSA6SEpEoWIL]J:nNUZ>PjY?OcduO)
/T>Ls%;"!0V)L(Fo6!>Pq=4,K5LXgUa((iQa)'6%?mMXiH/JD7A`$[?Yk5]/pih$,
m``h\1r%Lo\1j6:D!<uVE4WK+F8D^,D&m*l'DpCdU[N8S=a`:.8&P2>RIu<K\W)`B
e,X!l>eG8<N=kQV2e`BJ#:G2)aM!>CB&AKKJZ\YF/ks+?a6P&D^E3CTXr5g@@nRnJ
gM<8?OThn%b^pE*TNd\BJ_,@FAKBHP44Y8IK@spZIA=]"#Q%0'+':Q)0KPL;-iP1%
r0k_j,O3VQk9!mml7Jnie+B`E];ZNI2XU7G[(9^240V&S_:ha/rl&_BD\<?SY&F*1
l55h8=</qQXj"Yjd<u.Jn[[bt`Os7&-c@V%rjDC2O/u.RZ&1*I/ukIbelE^SC>5Fl
h7n-t,>Gl&-X6FuocrcLA%IN,j54@)Y'q,9JRaXRp:[mmIK3(-.pM;re_dE7<H4R"
8h:L^q<X#UCTXm%h!G4T!!#JpTs&5-d]0Ypn*teClG(i<qWHD1cF\^mF*aDn99'0L
0\3t?[Q6X;q%:W?H@OGZXN^Ogd2A>@)4*qeF"63eXlRN1mRQ'6I9??Xe,HIkpL*X:
D7Z3RFo1TJ??\@c(bB/"HVj2qWV#VHf<Y8P%Cal"Gl;+iY%QGCn))g_mbKqLmc>,:
V[3,k^M8e)T"ISZ&q=E;rr@p!#=durmWt/6r0^H;?iL+l4>6Xl47Z^hO/nmRY^WZ_
hhcnq[PK-%AA$c&iZ@U?O>\h^HW4hXZ%6iE>/%ATbJ)Y(-QTUM2ps9>`0TcG55tW>
9<<Lc?h66W/U4p>J+Kf(rrC$8>o4STY5M\NGd"&)50KD8O<&*HP0)8%[XJBMr+0G:
e2kq+rrB+pDAMDok$7VabGo3aksl@LhZ1."Z[G+8]Ci2TjQG-+3C3bg`c,GCf$$#+
ReE=ugHK?NXaNM3]Cf@FPCZs+arn'%j>]?=f7%LY[>Z1=g%.NpUOSuTp#4S%r@7ar
qJgE7rH^'ZhcN(GrG;<Fd<WUQI),BW"q/)5/h<JU/_tL5-XZ_j+/d<.Z`)oo%7PNe
g=S)=DY<5n!*D8l(Y2?JDb0-t`m\X;MlIr(Bk)dHBldN@GUMbS$O<R$7W\t>SVYEo
8%ai,CZf\WCK`"On3^%j<rW/por3CK2D./"iqcdTMoL0FcYqDWY(NqCl8i!AVP\SH
N/$c+4N?Ql&*j-W\XcsjrZr6ChG&.54.b5n\+(uOqQKQjVL;@[[gT&ogDb:,X5A2<
SkK?>/7Segn3lM*<j6m/;X.Od(<^'/<jB*igC$Xm>$a^r)TIk%rQ.Mo)ZsRV&$1R8
M'.'55lDq&kMP:bU>^7?MD<f9qR./W/"SE0`QRmV=PcSi.Q*CpG,N;r;p[_/@XW+0
a2mT&9;m!7@Vj**ahR4)7ag9;70dA4==ss\!+,[*(*?PfraW;%A_;4Z9<NF_R_`Km
H^r]n`m13F"S\12lHdtOJb;i"rA(98+ldA/Y9EV*bjCK1erT*I4lmWr:7oK.BL(/*
F8Stu;hn^[qRMj\?VnegZH#r9%spi_$^qCQ$T3tj0<IB-"#'R`rE[@\HYgG+mVY=)
SYbIP_r`*+k.2))^Z+_IkLPTSS!_B=o!AqB'u>p7!<>5FO(nC-q5@_OMiXp02^bM7
iVN43V&*7N*n0DfdCJuf<_5?$C]k!f!e3PO!D/TO@"+C?3k7IRnnI?<?Ttf<SG.oH
F0BIN."6p%9ok$mbVm;8a2%lUC\8Y`k&`eQb8U;uB!UU()06X'UN_IWe)79TEU'/p
]"_UaUj[1$\#,ZrK8J-`Snp=9IG7Ct9D$iPctA&f?V^HgQe"2f8,A_@Ai[CqbKfB5
1>T=gIYYV%!!i0bkVYINHG.&q+0m9`<:o36`4jYa(Ou?ld9StBqAsiWbK/rC2cB!`
R>V"E9$3_7P!tK"^Wn`ZiG<-);<bT]4oI`,lW7;&&8(ZArh'^3NZ(FONpY;kEjn*K
IoX)R)8POgioJHWE,2Rh/TB[nF']j8n10O>rr<jbim/Pe[b]KJd+/lAMmFf?GA)2r
g>DWb!&W[)3r,S@2rFjb4^Z]t5)G!dHCFi:A6kINpXo>Ea94VgiZ4_mXX&A\hcTQ"
A,;sU>B+BBSN;Ym!K="g'X08$)B'Y?1]Fr`;Id/,Z%PpDDe"RZf+d4\XTF-\P/I;"
T)SdiMmbFAA(^"4XkWLI^aTes^K+T4=dEF(P0.Zef?L]7JmH<\&GkY<>RRTU?%>K>
@-+m24:&u\rrDZ&%"N-/lBZ=DgXG^`4lt3NIOQ`$8R_W!cC&k0qF=P7P<W[55O_1J
2uMa_Gaa)bof!LkD]%#bA+R"eI)8L";HSFW^9G,<T3&40"%-Zq.$OUfX@RIuXcACS
&r+Jkl=YYh?Hd0t;n/".(]AN]!\jI^13ME<FbC9XEEYR@K0Ho]-Jk"_VLM$sC_#@]
WC]kE9+5qB!3P^BB3<-VP$:rnqmT^mn&UUS^K@$JVq)g,Reg-rc'/+;X[u:I9+1`8
jLfr6Y4YFEK,.Bfq0H005DjsdUO_qr3IOOC9^T/N,WCP=]3#\E\?"GXK8i*/af;;-
ocD]SrF-ODr5nf<6sGB2%R3a+[rMEJ)e7EUI]@fua8T_IiAC'hB<7YOb9\Gh^[$C"
ChX[XC`l5"D<u>VIZ%H'$2WoZIG.P8q'WDe`Q5W#:2?]D^P^[A',MVa4Z1di!#Er=
qN):e;htAQ3_TJQU\'#9GDGJ?N9_SZVTMhdg%ra&S:@U52L,*o<>G5rkrSANl:EGB
omXL.X)Y^_-p.alFm^=_g*n,$DqX#PYL`]ZO,lE4'+9kRZ7ii\/_#q^L&V-2Ec0Jf
Xn=ctjB#o;c0r^+WMki);Z?`b?WS:].iupTG<)#GOZi@R>4MA>e<3a'';G,H#l>)A
2DfAeWJj(6=r#PM8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0Hs
P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g
8L0OrP"?rK,a(_iDu1f@[/+k>^8Bf*EiX]V(a!Jh*.Dh*l2DWb8L66srrAJA5?RlP
Z@B`;&O/-XrrD)/#C#NZmltE?8L0PNrrCYRrrCFG!<1*=g]%85=/L3@_2eCVbIaA#
2+]'XfDbj&8,iRXJ,BT[rrDt0p5`/G<)0$Vg&D&fdRb`1+8FI-T4a5]l@8bTrrDe#
rr<3o,a>M2FoMI9?iL*06GNO#)RpidVrd1AU[e!)8L5P[!7t$G^MHRC!*qhcrNRW2
;L3i_Xk5OX1&SdmJ*H6TrrB4:rp0Rai2IubQ2^ie^]*R!!8siIrrA%%e%=u$@p/J6
&kOAoU]1<3pcb>:\=J%=T9lL7rrB3_rr=nU!;I0u,c%esj&$'1rJ0S$I@p$%&V'K)
J+Pu*!4$;aP+*29j*0aK6hW.XgHNk(K!RuFc.IKiq_N'Sl1tuVfh!HRg8"?E+1$BU
5<I?drr=(>eK8;VIa.+pNI<sr+5'42PaNe[8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g
8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,aA</s4I~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
