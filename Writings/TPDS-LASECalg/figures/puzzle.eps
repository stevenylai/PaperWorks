%!PS-Adobe-3.0 EPSF-3.0
%%Title: (puzzle.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 14:00:19 05/29/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 527 186
%%HiResBoundingBox: 0.0 0.0 527.25 186.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-05-29T14:00:19+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-29T14:00:19+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-29T14:00:19+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:F235FA8653A9E111BE7586D53BE239AF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:F235FA8653A9E111BE7586D53BE239AF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:152d702d-e20f-4367-b871-279e04e80a7d</stRef:instanceID>
            <stRef:documentID>uuid:86ec8a16-3947-4564-aa3f-c62d1f5cff49</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 527.25 186.0 rectclip
q
0.0 0.0 m
527.25 0.0 l
527.25 186.0 l
0.0 186.0 l
h
W
n
q
527.25 0.0 0.0 186.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 703
/Height 248
/ImageMatrix [703.0 0.0 0.0 -248.0 0.0 248.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%1<OR$P!d[%h]Qg&J5]n
'GM5q(EOA0(`4&1,p"*K*Zc@K,:Frg-n$;k0JG17/2oXP4#]5_4$,Mc4$,Mcs1eUH
#QXW$^B4K\!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!;0<S8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f
8L5f2P"A8;,a)&g8L0OrP"?rK,aJm>FY9TA\u6WN.h\pWVIS(M4#'Aq:+e-ZPC>+0
,eiGjE_:P==[01&O8`JY&,U8Mrr@9VrJf<Vo(T)4gNYs[^lk7!Q;?jbU]1=\]gMeR
_>aMl"M\Gh+8ih;+84P%rpV22=XB:/)lWc:jmQ%G!4MBHpOP!Mh+.JF07&EP[tF\\
]Ep%<8TXi')le"kBZk$jbeNhp3aGb9ibWrpaeF[oo^M0jdBN,u\ce7nP"?rK,a(_k
8S$q*5-+Q]hO2hHnaH*)l,^0SN0hriqskTT[B.?gR/8n-,F#pkorJ)m/%U60a5-aq
aOHI?,dMmJorJ)m/%U60a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,dMmJorJ)m/%U60
a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,dMmJorJ)m/%U60a5-aqaOIrQorJ)m/%U60
a5-aqaOHI?,dMmJorJ)m/%U60a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,dMmJorJ)m
/%U60a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,dMmJorJ)m/%U60a5-aqaOIrQorJ)m
/%U60a5-aqaOHI?,dMmJorJ)m/%U60a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,dMmJ
orJ)m/%U60a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,dMmJorJ)m/%U60a5-aqaOIrQ
orJ)m/%U60a5-aqaOHI?,dMmJorJ)m/%U60a5-aqaOP4)kC1qF=FEtXV=r,ZZ9:5(
ZdiPm[raN<G;,2LBdAj6;Fr-sP`eT`V'M3q.7keJ8lA5+P*E$0k1,)\ZG>cJ@tf$R
=9crb+H]r;O<suROoPKm`&&)X/=r"#r_?6m]BT0Yi)*i*Wpt#9QarpkFjI74i\V'[
*Lhpa]cX<nhYT(/l',DNVQ*j4?"<IlaKjQ6gj_;0/d#.+FF%<#]'UTe3kqf/l$h%"
Y3:m/5I$^aoA.$c7^IG&pZ#_sb(+W3),j5HXEiO8@W^CJnm(AQ]Baau;l!cUea,2:
/shc>/mFi3F,4ff3_/jl8L`K4l;#(BLRCN6o,?'W!(lTogLD-h?#:?6qq)lu:tH!m
Rbc5Xb,8.RqgAo`+6_TVN5$FtghX4%,=uV'i@K3`)joeH7&A=Q^M7kl5,Ya8qdquo
*h;ZOlERPI\f3B9Qq:#ZP"?rK,a(_k8L7`Bk1.pAISWhR3RqS;Ajq\e"i[l+]tpA'
-3oE#@@boH^t?]9bHJL**-rH<ZGP7b#*!H0TY9HgClQ^QWdi]&8,cT^mD&2EqrdtZ
EVh!X;a$m[*A\&XB%`B:>@r%WMsmpHOOii>WeNKfq^QBiO)&:Li&T(fr\)kE[?pQQ
0C#Zf.hlT'dP%lnc@;Wn77;!3_(MA/%U'KDZ1b?8L$m7+a3;T->B2FR@kK>tSBN?^
D!dcY\]u<j6$+hp@c^IV6ZR1;^:2<'/KhEd\ZT^uF'R;u*7?)Q%]_+TI:oU[oh<Yb
PtAmYI69C];7p#_1#]$Y:B@<:pPrE;#eBs8jK.)3X]eSeAQZLM[mKsFZCH;YJ_P5P
%!N?%WBQeTP+?-H8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
8kC:k;NaTsPbjSk^Z?NKrrAr(rrDc5!Ga6XNW/u,p##^-=8r9/3!h%b8L0HsP"?p`
Uln:q3BpYrjQ_6eiR<;Mq\<ltT<,fuF[,_Al+d+DMRAUFP"?p`Uln:q3B5pkWp2hF
DnuAQceV0./=^YV<HTD^2rK2Km\I7R;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2
P"A8;,a)&g8L0OsPP%`O!"usarr>dg^\R$"XKm;SrrD%[UOVOC(]OIterlS7P"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8m+AYI@jU1YtribYO!$r`loel'%])<-1mAX0#NCE
Z>BO@,%XuGID%9X+*__O`OM8Gb_H`$G4$EF&/aB=O*-Lu;[hH_m&m/<\j]`SA#IGi
D>=[>A_&g4A+XkR)%7dP5l*ceN5%16a8!WW0</)C*]MYRNDFCMS#c5Ig)B]Hb&PKJ
O?!1"g>I(UK1j6`l$.H3IRA=<XD4d?``Wi.l;le]G<G/[/*cjocFqn6]e^0Gq]gNu
A(P5H!&R?=_Fst:.F;3^<W2k3S>#R2XM6rmgfKtn\TKdeapbcbH1sG"gN?ZD*>bE_
[F:/ue!G54%;%bG3!\HIf+Deeh2p%o@.',"#AV^^=S4G,(tu!hTp=3E)V2<j)V29/
!!t*C8L0I`P"?pq/>'$_FBbhro+bCs\RU_@.__r=_jgJHoG[\Qf5T.H_U_#r`M5L1
ln#%1P[rAAD.Jd>Q3,YEB`psiP#>lRpl+JRIuXH=hOAXIpAK`O?]e9jBl;-8"'KaL
)3&:i]8iAGHX?-.e=AUbDfot@!KfWh1?Rs5BlIjV/H?6`r6X%NE,g?(ot4)%fmd2+
lIa-52PERI]*81qBGCQUUGt;a69dIV1k)W3hNdd.5H"2.fl('ZPmaS;XMo?\_5/]]
NRbp]fA,WFcO6WHeZ[O$g=cE&[JF!\Jhl_7CW%fKk.B5d2S2\]=V3&&46j4urG'Z[
I7GU:h+l+H%=Z])<A8IIWWg=:Ru0AdjfI$0cZ`.$Zdc\K6#KsD1%a&;GAU,aFcda7
f#`ggP+?-H8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k
;NaTsPbjSk^Z?NKrrAr(rrDc5!Ga6XNW/u,p##^-=8r9/3!h%b8L505XD*%&CK_$c
M1>TeP*2?]XHho/oW.gq:4K+,SQ1qVBC64aF86(:1Y@eq^W#)5IouQLMK0%#<YXNR
LD!o8:UCq`Z<II0_Wm3Y`Li9\olmED)Y(l$rAuHO9>D$!XS-48QF6/-BOiq2="hsI
c55#,YJ!T,BD!67j)nE!p>&7&W2D)IG^XLGY.N/,dbVIj#q>MrP"?r[5?WKsl@8Hb
dsq)g'l,@mXM==K5Pf?`^\`G:[?=FN8L0OrP"?r[38aM2l9G,`_#FD\h+;B5S8\=*
FW^Q@i.'qXUpZ@`P"?p`Uln:q.3t'J9J33DMP!?(D7*Qqb:@fICRX2lCRT>fL#jCU
C&4H_onVj>5Lp$\lD^g@f8![?WM-D1\P7-Z(3'=4G53dm]'?QcIJ:F_<DuQWZ/ddE
CIG_YER4\%RJfM=SI6+s(Y7pDZa"5>0/qCSpKGSFep=lEQ5:)P+leUtPja*[QZYqM
lB^5g^SF(Kmca)G\^**MI\VA(2XT8j?&ITiUZ,gnlUP:-^nph>"!Pqd2/Zp)AX<k<
Xf7?8mJ:#,ET"I)PbaI6,q1+&8P2Q"P#@H7,a>-hohYSf'"o7a!)<7'q<#)dZ@8eQ
!9.(TJ*F]arr>14P+?-H8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HtR<Lp8Fg&p)
^FKN_\A*2En+>>sR<sZ?VT`b%P3Jq19>6^l+0[nHq*V-(%*88eVu%gokPe4o-L'"D
mZ,\rlQhX`cC\m`F/eB6@BBuWVh9=7g=^NtDtA;m)TGt#2cbG2JD@s[Ra!Z/XBIDn
FuE!;f(b@RU_]'S\ZTWVCRX/h>RZ7`eQ'T2^D?P8hPBQ45(:\?!M^bo(DaM;#.E[$
9:@\VpGYgk@T/q_8L1,XP"@)o,d['IYKFQ72l=2uN/tAX5]FaR!PtlJ"g5D\1=i!7
4jMMl?Bj(-'\1diH8SB3h+NChb9.IQin7h?GAOCbQ:K:,HbVGAQgF.P8+]Q[lYcQ+
ZuN.X,EGXeB*(3iDXA%;k[NQ!KgTjbS$KIr#qdL5QT<?4M0#3M&mXF,SPH-*.Hg]R
R<F)4I^!G;AQ^,"A(8Zd_TE=*k>GJdAaOHj>jC-dKA.bSmpe:jVQ>*371=$5<7&eR
?k$mTd1'kp1]R[fXBIDnFuE!;f(b@RU_]'S\ZTWVCRX/h>RZ7`eQ'T2^D?P8hPBQ4
5(:\?!M^bo(DaM;#.E[$9:@\VpGYgk@T/q_8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*E7u2uKH&J+V],rn--\AWtNVjW;&6!2g2(
!;=G6,s'-nP"JVD,a+CT8L12]lS&1,:]?kFDuSX'X_!^hQi9aXrr>e72u`krYu\/&
;Fr-sP`eT`V^EG`!#8d0rr>dg+8Pf5/S1-*rr@qZU]1=kr"&`(e<[C4;Fr-sP`eT`
V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CtI]<>Ii`Dn)l+\&7!'Ji?Q;?$q
r(?U"rAWa9!9]g!;ll-R,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`K9_?a
D%=S-DYi6',d`0O*7m'm+jG(5!Gd7JFW.##P+;GTX7:+H:$PL2A*<3h:`;(k6#g[m
5\k7Q7(K'_%s)jJen?NrBo[[9aDH0>l5"4@]Ok:">k`gX$Z16Yl'AgaD['DYh-k80
;**mkl@-/%FMFu.BOgmuDA_8EXj(@Y`/W$]oY@7Zem)H`+McT7;P-TR-0AQA3ks79
O00>0?W3A8R2moB?1qdXk6>(Z61jVgJCUm0[Q#(:%^RBJVnL6q^FJu"hO<ht1-X6R
!Q,m:#6qOp(:rZcb?B"$pH)*OIB6[W0W8kI1Nlg@JL/7$''D:#E@u=&i_,e8PH!(?
V,QT"ghP,!f\UCZmDn,LQ<=.eIA,6Xl8s?QkPfJQ]!dcdP"?pq+Q[([RmXHd>J@Sb
M(KjWLGd=t898%f!*\;k*Cd!L,c<jC.f<N*ds@4ef_PCs<!J;3cs0c4cl1Z-d4T+[
_qa',24=e2=L;\elti!VXmmT.81c"0F'R-5f/:>Z\/>NKWo,<*!#csQ=,6HdP?r\M
aSR9S8V>oIXG0X825[t>[`:bj-*GeB%1j.Nkc$-2Y.rAgmrf`)Fh95f3-:@-:7s[B
C.%APe%8*>Y6[AaVkGpC?<>c,kl/u4bT6[HTA(5Yq!YY$8`V.p=X9/%8kC:k;NaTs
PbaI6,q1.4Q.I^omrgS=juMdb1uW"Nbs6H<;i^PmHP@RtbL=5Qoah#@kC;qM8p-;"
5P(5>J"c-Lqi/o$!8^\ik:]U1!(57#pD]\'!5,9[ek'EP!7"oAreIG%mPd6-!-qKB
!1^_ar=;a)!8MI9rplk_=XB:3!',@LqAu@1!4^hQrT-]OEqJhm4[]5LEOk!(b*&6B
><DOc9$HRI4^YJSgQCaGh>WTXrO\cN4*cKa9WBnRC!FV@WCBTu\u3@`R:$M=LB'_p
h/iSr=F/gVG<kG<=Le;rbOTWC.B/rGZUX-2>M@IW`W/Rneq['$!%2noSs"2n/(EiD
ITtYmfjAgf]$Y&ulg!kNL*W[",a(_k>im'?C;-h%#>W7WaK+^YQTl]AarDGq//\Ji
`4SK-]=pq5=Zm`';<u!nE3K9ACiC"b^=2bUrr=R\J,[LErrC-i^=2bUrr=R\J,[LE
rrC-jXHH1rIadtjrr=R\J,[LErrC-i^=2bUrr=R\J,[LErrC-jXHH1rIadtjrr=R\
J,[LErrC-i^=2bUrr=R\J,[LErrC-jXHH2$rhiQCY+ps"J$F+lp1.ZDDYnS%T<hm*
7bI[05*r)Zfin8Kf!#"Sl2Lb\+*[_b,?D*A.EVH_f!#"Sl2Lb\+*[_b,?"D7f!#"S
l2Lb\+*[_b,?D*A.EVH_f!#"Sl2Lb\+*[_b,?"D7f!#"Sl2Lb\+*[_b,?D*A.Hg#p
lW&@7,H:X"Vk:>+d?!Pj]'jRjhidrm^Lq>om2SW-C[F>i^[f"7rrDD6hu&I;aX!c3
m6=dho"1h"!:5-kr/FA:5?bhm];PZ/m![dhNEXFLV^Ljr>/0X?VuHb`IGas^9C4rI
^[f"7rrDD6hu&I;aX!c3m6=dho"1h"!:5-kr/F_QO&l,!dlMqR;89!d\u\M?aK_hl
[(*QAQaejnS-6Xt>K\D[BDs3'ci0F)^[o^,.:6fcec,W7h*:o>A+'?sjD(mI]!p6c
Vpk1IN?'q][:Rfn7;[KrTu"1E4e]Z5i[,1nhH<'BrrDR>dD,>2MuNdKCIq.q:Y)`I
Y3Grdq]C%^!$bD=:Y)`IY3Grdq]C%^!$bOM8L_dY:Y)`IY3Grdq]C%^!$bD=:Y)`I
Y3Grdq]C%^!$bOM8L_dY:Y)`IY3Grdq]C%^!$bD=:Y)`IY3Grdq]C%^!$bOM8L_dY
:Y)`IY3Grdq]C%^!$bD=:Y)`IY3Grdq]C%^!$bOM8L_dY:Y)`IY3Grdq]C%^!$bD=
:Y)`IY3Grdq]C%^!$bOM8L_dY:Y)`IY3Grdq]C%^!$bKMP>Bc4QdW,7B@seD^LP<b
+4U11c/7b?XPLAZF/!jJ/"fH[3Bq6Sec,W7h*:o>A+'?sjD&%9qUPTGQ/+\)!+YHs
!9@nG8L6A]C&6B[!0uA)rr?QsrrD+p?YTAerrA>?5Q:^nmf*:JC=Ys&3Bq6Sec,W7
h*:o>A+'?sjD&%9qUPTGQ/+\)!+YHs!9@nG8L6A]C&6B[!0uA)rr?QsrrD+pM!COH
+$0iLW8Q[c<cu^.D4(-B>irT(h2hqQnECN!On=sVam21^O$`jHdtOFkA"JjSA<KM1
.3t'J8kC:k;NaTsPbaI6,pCFRUC)cejL\u>M(i1+E=H\eeq3'Fc6,!;8NI;]J(QQ'
YN^A8Q=A3heDXlkAJQtkq&)0d!r#4IY_EH/oT7ZNQ29rV`kcl`1%=_hR?:@oU?C36
E1ZJV8#:2-:`RjBmL1SCf2&K7I9l+0N#">,rh4[Y0\ZO,TH=+5c[V...S=RX!6n<?
InTKY5HW8cFq:tKrr>^cTBEmZf@8WfFdYnh)8.Qm]dh2\W#k9/ZE:G0*_1U*S;W56
U[qeb$j$2bF-BVND.YacFWAHbR^P:2eTTdHmhjs0q>UGInkJdOSQ<I[<IJc*h42Zo
Rru/kdeLnn28C&`QH%S+Cds71d`'A(2MU;Q4+2%70NpbV/TY1K!9Uhp"?E8K3ZV(`
:+tm<IjYE7UW:U!DIu%!<h#LgNQlfqgHM_bN<+*YLUb"!A<`mQ8L5f2P"A8Nk?I/@
,O8-%G>??!VUjb8PF%Y=%FM]??6qNhgqmQDR`Jul&(5?67^@KDHhnL1?QX4Z3f`+Q
qfRtDo]Ns7>AX%jJ\k#pjS`Tb[In;"H7hSQa0G'e7=Ssl[+tD;i`Tc+J#`6(cZ.`3
ES"3;'<cMZgVtO@)Y.,@Ru`\;R.h.P,-6N"nif^-rr<o9!;NSjQi@&`"9/@nYa*Q)
X]'$3Z9#B]f9t*n.^p>iB]_>#$o!&d8P\BT2sTEm:,-tZc-:,q4.PIm)6Rpd\ruVQ
F]K%;/('>agtfS5I_r)4ZJF"k?64II=R<,8Xt=UE%?,)\O.*'@>M7B.EB3n$WRJ>*
rrC\fINPO0\,&1][)AP6;ll-R,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(btcg,hb
hhoXJ-L]3pY[uh"5i22>2>'V&dH]6Uf=:c"gUR>u.Qq9"g`.MX6XQ7.L-?Vr"LZk7
UC3O=**CHmB&,fmj4P_:0f#]Q`MYX0hPD)IZKe%bDIn>YVAoUL%s2AiVr:Y)Yc5L8
\a?5tCp8Ng*-H\<3!$SYE@u=EP"MsAPd5Tor1hkno\j0Vf\e>mPL7/,*kVFPV[EG(
p;[1[3lrY18lA5+P*D,$,c)cL8L[4`40*KsqTmc0J#Uq&l>Z9mqe&_^]XH!YKp6Ik
3N`$4\dkC6Ip)cLj(A6sc,8aerJ*#F4mX"rA,>X=>41*Hf8Bm@mn$;KP"?pq,a(_J
8L0Hk;Fr-sPd5bHJ)XP2rrD;u/,oT3fX7#@f$F7doq21AjaZH_&lYm;I]<>Ii`Dn)
l+\&7!'Ji?Q;?$qr(?U"rAWa9!9]g!;ll-R,c)cL8L[4VP"JVD,a+CTid\t'=R1H<
H<rg:kh5Z>3m<=f^7S/i.j<-Jc2Rd>V=37,"6i==^Xr$;rrCSuSGojUQN"!U1P>8'
o%?YeoXJtBZPohD/a(p;P+J3j>GgTDoh5dCV2.^@.^n)73Z)h,I+=IGUln:q.3t'J
8kC:k;O1*]rrA:0(]KpUrrCdnorPHFchsQb^\$Jtrn-D0Vcb:.8P2Q"P#@H7,a>*f
8L5f2P"ADCT;qj&VTp(/Yh_t-mQF6&qQs;@Vn($n\\r8,Os=b.#PcO,q,p[=cFJ^'
Z>Aa86Mi48=1XPskO!2.%;fBgIMH-U("fu30GcLa4bO%qb+@@&Z+GXX/UISmJi(sh
U8.U*SNHI.=H.P.HWcbHRpIF-+6_MW$"K`;:&=Ig]JR/F2fX.u(1nLHL,J>()TIQ@
d,DHJ'<1>V7J5`k/uj(UG*3,m#neVjN=U!-*&"A2IbZbg&a=VVDqS4`;87U_+%A,U
KJ2)=l9D!=\nfV>gAK+KgG(G)rr>UP=:<q'qJ=cC`IYkI.96AToq(J0B2-9\/9?(/
1EYo>>L'tFZPo/2U^,#4c!&9("r1E.'tCW;49n'j^#Ttnb?jLOZ.hWM/pkd7!&`+(
U9KfFP"?pq,a(_J9.-D3VD:1a\m'r"mB)$)$r!.oINYi1XCFtOFPF,f[qRnH-`_]g
.j#i8:8q=Z/%C!G.=$]\,PS7FA.&-ZLUV0I;RE?lqX;kDpK%.0cuV6d9Y1.NMiohJ
Zs/R,@nZ@YMOS3F>pIcBg`*G_X$a)_NiD]oS:6rkNrGBo7AB.bF6duBL4'umg)kA9
-W9@'jL"peCM2W*O/_dLLUOlIc,4%/V;JlX:s3[tpLu5Oh6co.)q+]"l[R%T2lL=Y
e,9O)2U<K9Mm539^I**eN?p$aR?`i]Ye=[,`Jc\'<E4U\c`t`lRbP?Z9:kja&jYt0
C5:1jXm+Xd%gsMfq%V8nO^e\AbK-0Tgu&Quln39te<;7[?_u?QUZlo[l`8*Oh=bSu
CRJK`4.0SL\)-G?m]FfV>!ro=a`okg.7keJ8lA5+P*D,$,c<EcPFlEiZ(5YkQG(8^
Xc1.L?m\6F^Bs=Zk"/DJNRWIKpS`SrGX))@[?=*V:[DtorrAD!6iPiVrrCmY^LMC.
r4VA;p>->Zn1A16;j7(tW;ckZmnj#a[d\e@JM5[38,iQBHADI.KDtqa$X"a>jSm0a
5P]ZU5OH**rSU?B2c9STbMJrm!,^Zo!:L!?8L6L^>f5j_1SXOPUISS7Fh!gJA6.=6
KN_Y]DL4a$_$200X1800jZ^"_@J=7'c.L\)gAI9Jeh%t8VpfH]f*EPVX%KYK0WjVg
(T;H@$X7LT/_Ka,jG&Fo>F<ju!APt<)lMXpe$,ggUq,lhY\^Oqq]'a,[Q";umr9t$
]95cYCa>08.8)%`J''ourr>e/rrDGH!nLL;)u`_#^\VoQrr?kS&lYlp8L1,XP"@)o
,a(bt8L0Ij0<0,qSr<:,O0/'&l`bEoq^-TfV=18-)TtcX,e)LS?tg"EB3shJ%<1S-
($F<"\'`0ACiFUd^M,bo[1K\X8P2Q"P#@H7,a>*f8L5f2P"A8K5?gAB/(T4Bhj+3A
SnqTR-gPFE-$mo:S+=>cc&!n#=[,mc!:_Se^\$EArrAX+>0A;YTDg-_2u]<:J+Lp!
.Fq'9P#@H7,a>*f8L5f2P"AHArrA(or(>uK!9qA8r:?#ZrkIPnMtKH:RuA<N3;'Wb
0!aAE)?B@YhcorZd6=fNIbCUBQId'+p$Sue7dkQ!?*%Z,EVDkq;>#:3d:IM?m)ZK!
DlME6?'K,H7+_.%/_YX[.BE+dVW@BAWgu'N06"Y:G?EJq-CZ"@Fs$#<Kt*:;.7keJ
8lA5+P*D,$,c*&`Zi:"RoIp/&=oSK13U9gYoq2%MTmu=Dci(,p8PZQ_,a+CT8L1,X
P"@)o,a(bt8L0I`P"?ps5Q5SC&%-htp1>E#]h_l"+(qe,od>6g^Lllf[?[DJ8L[4V
P"JVD,a+CT8rde+XgE3LSf;9YN=Yc8CSJ+-I;?9Q@R1E1+M<LA".[l;B'.h%7o/C.
[V"1=rr@9j\go&8f"5W#,S7rs$cml!3R'Gt'j*=3lRoI938&H*&8\el!&dqE!al!.
!!!+)"$clq@9%qWY-R@8@uZg\@0Xnk+9Q2.!%%[G!!!!VTJQX",c)cL8L`!.`P32_
FY9-=p-([jM]ni<1^8^l\;%HSZpS)?E;$n<Y%=\>W\\=+:,BB1q1AjH(6[9,c#=/.
Rc$Q%7"_2`)/&&?hhuimQVDAp+!57:OO9.."%/M^6X+V8+g*jcHX3N#0e(I@#8\kK
g)H67mIe2$_.a(K[EWbt".JA^&E])tk]K?d8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,a>*f8L5f2P"A8K4WFAtlbE:8YQ"T=E#,atDEhLEl5`@\/8RG;1U7m[a'FsA%r>b9
j-Gui%e7dW41h;dD'bD>T<2Jr?.8fRp-.sE7]#gNX^Cm0e,KFA54AJ?Uo.?APP1WN
?hn!VrrDaVn,>eQp7JHoq-DJL!;8VFr^N]]=XB:*T<2Jr?.8fRp-.sE7]#gNX^Cm0
e,KFA54AJ?Uo.?APP1WN?hn!VrrDaVn,>eQp7JHoq-DJL!;8VFr^N]]=XB:*T<2Jr
?.8fRp-.sE7]#gNX^Cm0e,KFA54AJ?Uo.?APP1WN?hn!VrrDaVn,>eQp7JHoq-DJL
!;8VFr^N]]=XB:*T<2Jr?.8fRp-.sE7]#gNX^Cm0e,KFA54AJ?Uo.?APP1WN?hn!V
rrDaVn,>eQp7JHoq-DJL!;8VFr^N]]=XB:*T<2Jr?.8fRp-.sE7]#gNX^Cm0e,KFA
54AJ?Uo.@+rG;K6`33>D!7QBurctb%[/Fb>!6X`%rrB=uJ+>HslI>cIlCBF]VL=B#
eb746EW&\B>j\,`*6m5fB/X7D&sAi;AGoI,!5u'1rrCMs0E-7!=R-tohO0#iROW1J
]'Ofjl[-lN0$1]+G*b<H_>lJid47/Oe+Kc<oW16Ep+DtUf^\7Iofh2QGPY!K2f8M`
kaf@Y8pUW+:YL9*J)tlMrrC^K^\Je7g4$GZj`aN#!8.1`q&5EeA<p$FI^O[eG>J5=
f_`GZ)OK0,[=@:^:]CFIqnMqFP+?-L:YL9*J)tlMrrC^K^\Je7g4$GZj`aN#!8.1`
q&5EeA<m]a<r0q'G$PjTg^rg&L-:7Df"lF-V]o=c39dm1o2\'(orJ)m/%U60a5-aq
aOHI?,dMmJorJ)m/%U60a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,dMmJorJ)m/%U60
a5-aqaOIrQorJ)m/%U60a5-aqaOHI?,d;66\(4<J9<Y7ji3fYtr,NmMBKNKdZQ84(
S9-Bba-*_$T<2Jr?.8fRp-.sE7\lqb-'S%pX^Cm0e,KFA54AJ?V=pO`?hn!VrrDaV
n,>ePVcb=0p7JHoq-DJL!;8VFr^NaXT<2Jr?.8fRp-.sE7\lqbAG)Sj8"kFs_U&1c
cV*Xi>/0X?VuHb`IGas^<3n1B<cr;73fYgF4^W*2[J9PU?K1FYB0\%t,m#95h==-5
7Zp=gV'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT%TZRH<')HRgFHf+K&TFZ
CKf;r(HKc\!NcDpct]od_4/u)9@[jb(5)%Q$PqJFZ%VkmaiCn-\j&'*0M*@^L:JTm
Qe#O6QZ#.ciGV-oDqNf='jGP",\,_?oaX>X?MbQi[C_j#-+X]1mdRH\_5PsgFcWfI
bHA(%A[W-NZGHSTz!#j3&!#_1(!)ifsj*H`hVq11:Z.D&a_Y\@BNon>lg?2_m8<@$6
#>qKSfJ@hTl$??qAPbPA@:`YSp,nB1q)K6(a%,:)Q5B_rEp"^G=X4tlW\\=+:,BB1
q1AjH(6[9,c#=/.Rc$Q%7"_2`)'p^WP"A8;,a))uQ&C)Cmcn(8]BjonWtn&l5\LT:
BlOT!c"MjAki(oPRp=*#=8of'+0>:K=C!-&=R8M^qqg4(>1`?1Rdr!QLIY!,Uj0"*
X,V[udrKH>U"b7sh=d&t3g&ZfF8&eWY_KsfCWAIg/"uo3US[XUgV6cDm&HiG1:MBr
Q?m#U>3AtCr%DDm-3ie:H_?5LG<%,E"I;g?X]0ZG:7n.>H=!/p1&SdfeBa`r]*F;Z
#0%HXDG@#:-F[II<mp:^G]q[=5]c.r[B6j.k3CbliOh%gC.`CiP"@)o,a(bt8L0I`
P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT
8L1,XP"@)o,a(c?I^8tRajg=jl,0Cu!:BJ0elb4?J)omEo\n8KpA5S?,c)cL8L[4V
P"JVD,a+[hNW/u,p##^-=8r9/3"&l"oPaOqY5\Ld_S?&S^fni/8L0Hk;Fr-sS=cih
no`jdE9^g-I?_.*:XuZE3q*#,FYE^-b$)n98L0Hk;Fr-sPd5V]r1hWRo\jH^f]TAJ
PLb6F*ejUoV[G`_a#t_0aX!$A;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L_d(
rHGI*@(Z&upiu5NaJe=MF6p$=:NmbQd^Xk,%VTkV"r.ZNop:)1l8Q$'W4*QYr0hHB
]#l!DWiI,f>uTBHT?TDGg%qo'H>MQ29+BCacK!ElJ#c"S3d[C@S")sR)'UuL0<M#\
WkE"drr=G.IPj874GVHG;q+"7oH2diSO2]BZYic<\\1K_[l(O@WW&Pu]4$7`>K;"p
LXh>9UXQe+=C"tnEcPm#+f=S_l<.\I]r%.,qjkuYIN0t)r*FeW_7QE>>l)E.FOcY1
DIL]&ke>3@qct=([!RUKA8^=$_0;8,pt\EO0#W*RV3X0>fYb8&/CEs7SKm3YRTR>(
Fo7aFrf8-W*P%R1%9dX\Q8^\gkA:"%Ou*?f/fs$C[?aO:XaOinc<8V8gIiOC4\Wom
\(:/S\ZEfI^hEi?B6.+Z8lA5+P*D,$,c<$h<pJ8errD8R-G`pNG,!d$15q[g+F\/Y
Y\fepR=JDk)]`Rk%ZSs)l;,F3.]OEQ/oEnO\WsG&H`SFGC'4On`1J>_lM%a"qQ9a^
?VnoB8NOBMJ#eX@hjsVGPt&>C)l,`+><hX.epm>LQ2^iUCe7>rS+XSiI[shHl.m;W
hhc#dAUrbAm>c6.%!H<6dV8'L@q=WuDWitN$mBL'O#B'4gXl\^f@9+7()AdgB]*I6
U!4mdd#bc@W7LW+g##`-I2+[Cm5aTGmBF1B==_^P^9^a*H#uEE5"j<YEA?s_1h*f?
XP%0]Z;83t]'Bj%o(S<1O`\8)g,NRfZdO2:[Yn9MJ?p<;d;IQ'G;jq_Bn7M5iEKGJ
#Mj#m[]eo'FULCW#)sQ>9j&E>q7j%5D!A!sg<?*uPbaI6,q1+&8P2Q"P#@H7,a>*f
8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6
,rn1mJ)omEo\n8KpA5S?/>'#Yno[1nE9Y.7I>YFq;NaUNlCCiaUZ+?s4P7doo\WqT
?*jT:>k(H</SGUDa$c0H8RYKhe"C72N9k1gh24KBqXAPH=Uc[[455]uTaOMioh5k'
JQGe7QMUBcme#l"k"`rWNqU/gGLC3lP+-/2P"Kb@2uKH&J+V],rn--\AWtNVjW;&6
!2g2(!;=G6CF#`%P"@)o,a(c?I]\+Af73&&WIO=/;V"u8<km_]^\$L7^\7ORCF#`%
P0*_(SY&o3o&lqN!:3]MqGAP"aXT8UF/&=h9cZ<o@cc=pQb'hVX0od:J6Z9u',!XE
P*E7uchsQb^\$Jtrn-D9AWt\pjW9-U!2g2hp;]<B3lrY18lA5+P*D,$,c)cL8L[4V
P"JVD,a+CT8L1,XP"@++T7p?C`HEiPbQZ4qO'r(5ZDY.bXDZtYb?i!J+H85]BX2]"
qI?NB?X3-kCTWU$]UZ6(_S+k>]!#8_o\[(661B>hddY]H]TPm,5N_^i^U!gMp1I%q
0;n,aU[7W!I[k?L2sf;.DR,QU:r.8`_"sa*4k,<0^+ZDX*+q8!48gP9Hb"?u?G(/,
%LuP>!9X#@qcDOeAmtY=eFgQ'p3Q[5;Kqu,p28]u=]u+\YCVC/:W73'--lV<Z0urA
ca)06gMD&[f#sZUkPu'6!,/GZP"JVD,a+CT8L12],Q*OnB2\Rh5;1pD*-LnVCMKl^
KAEs3FmZEu)\$mGHB(r#abeM.O%%7V]eu%cgtHSaF0[?>9k,bbfNpI9BlOgY@!l"D
ao-m4FQg8YFNU*@AfXn"lqRI+Vq&J_GNUlnZ?82fQR&Gpe?4GR3Yt3(kl"u'>922J
pZ#UJh.\LLf/_.2AJOPT[[+u]5s-`*WLIc_?Y@1aZ`)rmisqsg>IgDUQIm=;Qs;S^
hupU8#<*%iE-3_%r*6D$?8F8j)aL_3)7A,fBVQbVEpV%YDs?6`-U;lr(9S0A`Td9d
WOq^SK9MPh%G/.s%^k[5R+ukGU=#`$C]p!K!t)3'MVMB.ScbTphXV&HAZp6bf^5B7
QTaHW!#k&$d9&scPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,rn1mJ)omEo\n8KpA5S?/>'#Y
no[1nE9Y.7I>YFq;O1,0chpE.TD^_1J*3::ZH;sn?=l^Xr9PsC>;IqWa0ueBXjsal
[^WJ(k3FN:5rurV,a@g@:qF)V3d9*qP0A<2EN[&:n&gsm2f*AIKmq(Qg,[Um"'3L1
Q0;L0VW2cg:U+A"W*+8F%ZLqk^@sI$"$gZFGqMnXSf_"s^K8!b:$Q!d0'p<=A_,B-
Y/Js7BtQta22D">aOR>ikgoDhN(7E$Ck&_N>@YaohV11O"1GJKZK@<Rh8VO@Pi#%X
P#IRl^Z?NKrrAr(rrDc5!Ga6XNW/u,p##^-=8r9/3"&k8.3t'J8kC:k;j6lir_C**
!)=P-rr?uCQEnX/[Jp4S?2jo&%]01*\(ODW,q4,'HCd>jrr<tp=L2p_Y%'M68/0Tc
`dKrsqh7^mdAPDH4A,7rk?T@gn*ut!3k`$`c0=%S'puAcAen$AkE1SAG3VA/In&g2
!@9l^ebfH<3`">MSC<sW8S'nW$u8S_]OP<]QL+cgA$h<Bm0fReqK<TZ1T08Tl3j.`
,rO`6kE&qQ;aVI.5QY><.g[Xt-`m=Jaup.4!)=;Zm>cMD=ZpEs;<VB`E3oQECie$'
XHH.#V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`
P"?pq,a(_JalqXQO'VbcdtN;K@t:tQ:Ib?aP^;ftS1FU>gDgBuP*D,$,c)cL8L[4V
P"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ
8lA5+P*D,$,c)cL8L_dXbTH^6Y@Vl]l"4>Yk0h:RrKUsSfjPWHf/_ShdW>eFc<d(@
LT#^j2`q$>Guh4B.EVSiS@q#_%oE9+ghq?8ntl?d3I5oG*hiT6\D6QOj]]bOV^MIa
o^DE86iR.+\_m;,Qi,t0hroBAro8(7pQ]M>P+80?bL=5Qoah#@kC;qM?h9V^J"c-L
qi/o$!8^_WP"K`nYLmkN3kf"%lDhtOC[(^b2GiQo\<qCT#%#I0)s_J'ZIh_oPbaI6
,q1+&8P_.i3p%2!/k._KjuMen*C`a_=][Cagm;_d3:C;=Z!&7@Q`#>,l6#n_cMmn$
<5,Jaak)%,_l8.Qp/9I5:/CfLl/1]NL]6=T^\=!Hq9.7%d.IqJ`ohj?.b70;3C!,%
VgkE*+8_&CrrCnT^ZR7Frr>F95PH+frrB^4=X96mrrC>NSc4DCJ*o6Wrr@=E/C(GU
e2k'+VMar3k3#k;E\T=hgB.gCB`*a'Bfbc>\i#]&J)q`*rrAr)5PE,\,s'-nP"JVD
,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lCA_
f$s:Y>5LZYXcII3>j1m:3&Tb'n$N!,ep^\)_oBCBN+PO[6Qd<;W3Xbki#LJ.F'7_X
iZ&Kn*nUT/%5O*<1[7cfN8Cu8T;Zk,dTqguS"5n1kM>RG'[_tt>3apB$]h8[7q+Ds
U@^=eo^ddaZhfGVG=Lj70C#u$b_lXIjL*<DG."HMVd#>XbdliSR^ec/XUCf@b+gkL
jPr=MDjW4^6"qol>h8u<\ZQ&qUe!Ne;Gq%g8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q3BpQZjQjSQiRGX9q^H;3T;u>iFl3%7
l<jF:PdQZPP"?p`Uln:q.:i+Dq+%-.l,(dFZ-QUs-`m=Jaup.4!)=;Zm>cKbFco<A
PbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`
k%3@e:sJs&MYAlpg0L>5;'G:sL:h+\7b?;E(Depr@n5[JZ/F^8Y(_HH'Qj76Nn1V3
[8t`ME7VH#\^',R<F;faV6<*Dg0'cl1;,q:M#/_%^s0RcY8*l5!%N>/3NKICe\B,;
I5<6j`ou'0qC6ZI2nc:>h`)ClOU3K$h=[83e/[hUh1iodolDRk(:$X4$Sj67NoT_&
6aiGe`ueGJY;*6'aJHEVg'(tIZG>bj]7/!t?rm#;=oM1Y\=ZkUkQ_:i46m)G2E_qZ
I:9ZEZE<$c\?gOOX*5"C$3%(hVmiD[@J&p?HAu#`f8/dPG;\c/WND.9Z-NEg(nTt@
]8MqDD%4V,G5C)M@'kO6>3<Au!R5[j#]iOuF?60JSqHki3j&j5Y7mj;l'(b#g6k]_
pNG!/VZH^_n#=l08kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g
8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,a>*f8L5f2P"ADEeZ\d0n,54g0E&W->0A;YfDM1`rgZ$9rnh9=A<`!&.j#-;gq:6<
<>;gnAWG+pXV+3.=FFtaoiu7CLJ$gtFrfH%5:Z7nO03o>='I)b7h%rN2.?LbNUrAu
VV!WAeoE2W5#o^cr"EQ)nK-E\>rH3DDJLu\lKbKa0*-U2XPW(u?ID)1:4GY-bhfhY
\sH+f*S>OWY=5o/K&+E?HDfI6>W1uN&F%bjn_7<`ec,WNrA1SKh"n69An<ueCrYa!
h<;83qBl4B9s<<7q)c'BCJUO[W(BTa4_Oakk[41*Zi:#AF4RY=lTas$6N7&7KqJ6P
Ss#XTP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,a>*f8L6AVrrD-:[?F&5Z`I8LW4.:.VMogCNp6K$b'c`Fe-G1q9<%TFX-kX,\A)4Y
1RQtqApP9@Be?M4K/1m5**VLKK,tZ719kN;U"J$Mhco).QB59;Rc_/V3Nd.J/T<HT
UK*rd!+ZogUTKgSC)cS">AJ6LaSb0-lc'W%hn"#43!LM<V)a$/Ykl,cYH.Ji%\B5'
*S24<?^51DO6GtBKS)_F=i3ICEj]mk?e(dLGkC&k^U(1[Ul%FnFc9gGCFX$B?Xr_D
H]eGKg3m`9!+mlRZBpPDZgoNE\F=:=+.W;d7=]H_!1Oe&hYZ'W3i0R!6Y4eEf^pnV
JSVq@@pJ264&(dfl"piEMc*J+O+hHU&#4Da[`bs3C^_SsY0"91QSGWdV87oB]:_hk
%Me&f8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q
.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK
,a(_o:XuZE3q*#,FYE^-b$)t9lIYs)GQ+*nQi>lR/S(*$.i0-d)U(=dgN=;hZHD#L
3N%s>?5H#pI3OQQH;@@F_P]k'RmG,B/"^[$fj4CPer9mljg:1CEOlD*Hp3+Fe8qUp
bHcH%k9DGEJDJtOrN'\kT\/]Hk-e/Z,q3BtTD;!NJ*FhrrNX[Pb9sCk!6RG4rr>e0
J*i8B8p-:g,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&g8L0OrP"?rK,a(_k8L0HtR<R2BX*GJpqta%s[bBa</:KHOF.D8CF.?AYP+hmU
2#aNT!9H.8rrC\TJ+T1$,c-"85H;Ko:"0+Bp(j;!-C=YZqQ'VrPheS(!+BUA!7GR,
P*Q%I2#aNT!9H.8rrC\TJ+T1:o2"YTr_mq=!<%VLrr>WdP"JgRe,$-F!0l;(rr?JA
rrCJ\fY:M!"qBtB_WdG4f@N)9V]NG+f`e5mecI*68L0Pa,a(_Js4I~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
