%!PS-Adobe-3.0 EPSF-3.0
%%Title: (dynamicity.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 18:25:10 05/29/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 386 158
%%HiResBoundingBox: 0.0 0.0 385.5 157.5
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-05-29T18:25:10+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-29T18:25:10+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-29T18:25:10+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:710CA19178A9E111B2188742059DBF4A</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:710CA19178A9E111B2188742059DBF4A</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:60d98071-1357-4465-a526-bb358bd0c5a1</stRef:instanceID>
            <stRef:documentID>uuid:d883d468-e595-4bfe-986f-6847284d444b</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 385.5 157.5 rectclip
q
0.0 0.0 m
385.5 0.0 l
385.5 157.5 l
0.0 157.5 l
h
W
n
q
385.5 0.0 0.0 157.5 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 514
/Height 210
/ImageMatrix [514.0 0.0 0.0 -210.0 0.0 210.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%13FN$4ICQ$k<jZ%Ls'b
%hB0]'GM)j&ePZh'GD/q'bh;q'bqGu'bqH%)B'M4)BKq@*ZcON,9nQ`-S-f"s1eUH
#QW9S!WrHI!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!:@M0rGKOLWIil2_i^@KG%+pe
kudBfaUJo`jf7Md?[f>4S+VE7g!V?t3LDd(da@"?YAA]%\>SPu&$4[K$`is5_7m(0
nV)_<C)Z6$ZZu;NcM4qlQM#-km\Q>(K8EUg$G)hrpH#cGg)T#h"Z?n8mQtk5cqDZr
l5/#8S3;=Top78>ZW>\@>jC*iKC3^Ug/a!ZJ$.Jnl@8D4l[8jGWt4>FDO"`BgO!fm
UhG.9Md!9nb`&&!W1q1*;5`di^!P?;(4(sVC.k5ci3>Md?V#'Qeb=2i4diu4c,l^2
khsfWn[mcJpk4GD'FW_BZbEVc,M"ms%od_4b+Y+`%aQBWrr>YlMJ?+R8L1,XP"@)o
,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4V
P"JWUT:Lhf0^d94YZ$UCdebS>!"\bL.gs]'!6.s>lMXq\rD0Q7Piph?as05gYDDrR
oC7Kueo+[elh0tl=jZLu#GMG=ZR*N]p;W7??h6f0AJ>(D)h+LdW6_R$7C`s0[r](a
GkFB&!2R2Bleg,=_8>G]ocIB"i`04<CTWR2gLi*JcP8qU)';s6`59j3r&5UeSL*pV
rTl-.c-<TFF"<!\1[U=_FI,fmQ^t>G+4f>J\Q)T$Z/;s84g*GoTj)-OM;s(-EVU[!
d3u`!W[l32HYoY2LY$$0[EWZP6!=.R!uIrq?.8B^/>FAC\$YoOj32N[1&`Z.Z73`W
T2p!&?N,eIlBm'`@=Ek+<OhtR,*WPMg.<QA<0BfuV'M3q.7keJ8lA5+P*D,$,c)cL
8L[4VP"JVD,a+CT8L1,XP"@)o,a(cIlfpjX:AWZ:T:t00\_0J*OEktdF3OXaRq"YT
d9Y/k^M)_A@HS&Bk-DF!ha`%/W&^NUk.h#lpM!df?9YF_/+W60[XD7>HG0Z?e_;:A
52O`O0ce<V<p>+o4.tJ6X0$]=.lNJXe6L%U*7=3.6V7(b$?.C:kh4C`WV@NeM_"&B
\uOCNb=`"Kh*$9k?fMATY+PAWW&hdC,/:HbhX5O#h*(m9a]<W\cha.d*L&>9>R:I_
;uK2ui!A)@M(:N_o^8p^0tOeX=R.s7_YV$#mo(#8c_Z`k6_"Z0pH1ot\O_g4*lI8T
'tlisY=lgD7?#5rT&/D<HA!Apjg:1BX-Ac=,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o
,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lG9LY7DX,lds\$\UV(+
g[Q?V_b7Hs:P\Pjnm6pR5.,fD`VS'2Xm&t9@un?^@SM$Tke$A;jH>mQ?CuCc`ca6"
*o'E.6QYB9XX@\F6#QC>Zc*(>6Y6j*a2l=[A9Brh?.\Jt)nNdQ].;ZFXW==2l]p_,
>k>\0]tFO6h)81-I?\ji2:biE#7b_T?1Aj.M-As;AGo4_%`eHk)dBr)o^(4Wm1.gl
I>,%7REfSO>iG_b8NHhQj+#%!3W2J6-e8J4eap+7-pAi]A,cNTX].?Jem>9Im`0`^
qO:KE`O"6ee?*Fp)d2:)mNd9qpb)H:oLqKMh("GKKKhso@(cFc\E`7hb`pd"8.L5C
,_B!Y8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lFid
]6#ZreNU20)fN]qgo@VrI2=o'2Dsi2SDCB._bdoY46^WO(1Y,Cg;br*#7)b-n_`jk
NRRI0Y'jH?eDsfUCUT"%`k9p2`NCcI$r6?0p1<4?ielo-rH($&dFVma6\h-=D#XL_
9AEECP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`LFWlK3g5Vo7<paPRdOR1:\J$!?4WUUY^0sW
bl+)D'q?GsWbJ0O#-h1SA%(bc5\p.$r4Fi`C=__^Y>3;LLKe(K6[gR-TDj^>:UfBE
A)^JA0kt872sAjt6Q/,tBE8]7],PU([>%lYLG\f=+\<t/,a(_k8L0HsP"?p`Uln:q
.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2Q64[RY$D:tZNokZM7MV]
`h[O\_oHSD#FgN@:QtF3njiK.(&\\)S^b.F\!nmdiF;OMoA<^9=]qA&=nRO`VrU`o
aJU[1)=0P`SsI]t%G,ZgG[@`'5K62Yl^8uq>V,-MjR!f[?o)kbk-=LkjC%d/VlNB7
P#@Q,3i42`UB`'UM_'EPm2KiJOZR?.d4YDo5#AC*hiC6,0?;2:[oHgkf3f)(LOf[u
P`[8Up-,>$rS93k1Dk1eOT,<-8,NPYPPpihr_l/#lT\b5EZ<DTX^YFue_Mg_X-d!D
aQM%UM'L#`q5JXg?RIXkA&\]?9SeX:#3J>;!'qeQbLr]$(4B$UbLM-XlQ9EF4kcER
6a_pN[^Z6n?h4@U$k#*T?-UBs]Phe2:QZ&:r[QOT\O#JH4Us^Aj2iirrVF+qiEO<O
GO^%@QNr6;_lirDbcdmlG,_XAe$bjG8/i*4p4,@-7tU0_k.RJ5+jFtf7\G@+k.*UE
WK/,0TeUf_@m!lU#@l`B*CAu295h(WPoSYcM2-$&>JDO:M/FY"he<=Ii?>:@nt&,<
<W9tfHChfFn$1oFqalV8]u._BT52/@LAq6UWp+?7X'rIkFS^p$11UbCUi5mVr9Kk9
X<6"KHNL@Cio4G+;VZX\R70j/Q%78c-VimI.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD
,a+CT8L1,XP"@)o,a(bt8L0I`]RTj'j)"#:2_mUga*gnd!#5ChqDET.;X/KI,8'bM
:A/1-fCZ.idSBiQ8b*805K64EbWi6E@p.6!np\p6hYm7n1+PPk`l=LB91L\!T31rj
PP3>'>q71g2IXs;J!:esn&-eXjkiu9!6-Vr6g3/C([D8X:)IIHX"hgFVm4Ngg@!7B
E8VJqR+XIpPVXg&`na@k%^*sqF'K5p6:sk58L1,XP"@)o,a(bt8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P+5m]rr?/(ojaY*ohkmoBGKR4gcF'N^jLnb
a=_DrDq,&sNV^ikLjcV2k/K]0j*.4<X$^'4%Ze5PQh]88q#(h`J"t]H=mF<Q8*"`X
:XsC)`p*5#L;Nk?"`uR-*i4Nj_XHQ@3#?if70Tr#l+@C=F)1ieU$X#?6/(9BbX#@g
=T5>mJ$!rmHWi'RS8?op05QJZgcgpLOLdYN]+F%F/D>8V?!AqWd:J=CBOt7&f'K2a
im?[HmOLfmq]Am*l*]0la0QD5\ZQK0'sJ687s$a5ip3f@%(c$/X`_KV;WuEuSR]&c
<BFCD:F&Fn_$d?gbbkZ=IRK(&#/7l![=e;Dn8F0NajNfO?`a2nlShW9rrCQPk\[Vq
a"aZS>5_M`NO;-Dh66!WAHL2[?fOS7rAC"fCPZBSM?"sV#4#',_R]C\bh@$9(>CGp
E+O0r9C.#8@g@$apmi#Kcg9t)ithtVrrCZNDDN9dh#))-9I=!`\u9<;G11uDrrC>o
nZD]E6iR-p5P5(MI<4^u>!2t\AT\pOen[]r"9+GGCJW)cjKLhKrDUYQkcDtm/TL&9
,OJOn29!%*?1%a%%rd&IhBli$o;o[0ouj<Q0tt"V/*pTS*'Vb?Uttm-I5X[N?)%&J
O6H:e;;[LL'C>WY*+T!KJo].>%s['l&<E*ta^NbL6h>S.0<VFNQ.qj1?/7QgdoTFj
/*h`c!2Jh6[pu:aP<&Tl]p%(E7P6kg<LG_U]ZXGI3FNEj*qoj=coH]#n6@+s=J&Kq
E\i$\2e)`X*l`;geAdu3HQFRN1#ATbEuuD;n#_!^m,h=!lG[C-\bS4MHA$4XZ[MKN
]#HJA[d>bo/hmPi<38"LhcRojbJCN\odR<E/O#F71td.nqCet1PO1T*a,7\/Km-\D
X"3JM;TaG9m"Ye2=!)+(D^H@fDKor$+.KF-*#@F-[i;(aZh4`HLMa0ok&**/OR<>N
M`p%U<dXou2l-=8`g9O;E;Tp08!s09+3:VUUupdLX:cn8)#j%+qm1sN+8O<H#WbR*
\Yl^L^r,F0H8nn_VN\R<bFEj!gh"cNmR`[P,aNcL,a(_J8L0Hk;Fr-sP`eT`V'M3q
.7keJ8lA<SqTSs>Y,o'mq5[gBPnousjV,-bFPH4sLfg7Xpu)/P6.5c(rrAl.;r+7Z
:L!a9J"Z%UH2dlmM0e(>KDc$Jqp58+8P\GOqW60e#?o%0*Dr,#bgp[80S/FFgP^58
e+`W.>JPh9C'sN]Y-.WqB0s*,FOS[-L'ZMt5+o7RI2I5krr@g89'F%/42.u3lM(*f
+0l?jZV@(;R\9)@jDhJT,UB:s8L0HsP7ecAS6udt491parFU22qR>!^=7_Efa=ND/
'g<7/^u/]er+5QfNjI6YO$`*^)K9\=CMe%BF1tIVnH6)cC1\1i*Bo5.>?K!b3s.__
b\4igZFTGoB$-P70;k8R5Lso%Epm2IBC8?ml:pP\qSI6e7qP?50^&;i@rW@P*fm/i
7?&+3/dY;l"f:,$_nbQ%=bE8FGr6-leR/lDQnd7g'ub9YOo@"_[SbEM7p42bgS5R1
P>1+mm0DW94s5L2FZhMom(HK#3NRR1F/aD2bFQ2_LNGQ;b^LNaDu=GPhMp"T/,k`>
:p880ojrfsc(P6<:jj'(P"f2WP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTs
PbaI6,q1+&8P2Q"P#KYSIepZhemGJEiSt6fTT#CJ4"CQjrMG_m5H/!nWVXT_Rn`>C
qOSfEk"u'XC\KdAC^iOaqi6T<>bBSSnU&`rk#gp$(YR5_X%\JbJ'K:Ng'_HeJe,g3
Bgc1P.U?Pc@!!q-3fd.B<D?t!hKujhK=d$'#M&;5YsV5"Fj(e?)E,d,qFL5V<W<&U
.(qkC=hc=>^8LYEWEIeiY?#/$D%/VD"R8+"B^nTL'Y!kHl1s#cI7NV<<+i%G<]`$<
H#>Sd?\-qX5H?s!=cJ8e7S)f-7CumJ(qB,V.;@/>`(2erE^p5c4-s;i>/l:N#.:0*
)?:"MSM_o/#U"s/64+2D*I'F]H4.D/ibN%_MV<P7RSM8_G2R'8*G=KKXBg+k_6'*T
!&nLq(/0eY1pPc,2j"?OJkC&J`\%uDhc94sZ0Z&P\[LN'(b`:PkV.$^k*H&LU\/Q.
FW[_k.^rnK]LLK":0l/'DKET4]fM4^U"kDeJ#^)-5*(PWDqa&TQ'arZ]S!rN4GN&<
`h2'pB_#E3>5GAOqCbaQlPJ(7F07U23ci#hS]P9%nW%uZ(&h61k&?nf/jYLpOi`2r
dQCF$-q[j@,smZ@ejp?sJA1Hd:AV*cJ#7(3/e("N*P>_P2:h3X6cbDZ&-ldCD)C+r
bNj#I%M'"n%KXg9RUGjm86i#>prM\Ab]Tq(l$5tNb3c=V!;UJLn%G[15N=-V[4Ihp
Xil":=&i$!PQ(V$.g[;Oo>4`sG0#&@'.Ek\N]f8m7iZl2U<^Le(CoejimE`i$a&<e
G/g2-bkNeDl46\UG?pj6Z_u>ZFlc_>`l#AQFUUK(]*@YlG(u&l)FP(aB2ABGp%mel
WDiX`6XtcI"/WKCe*-j]A4M<Urr<uVN')FVEEF]fQA/G[kSi%9!)Cf_aP`X".*n=+
6RMooN\#0/_8J/cOfg:OUrMJ6T\IGfL"3H6m5V9Z`lr+_inacR!.JusQG(&U@3JrW
o5HEFKgMlP_o#733"jiJhn<7J6^mHt<E^9jn1J9)GO6A?3&Fguemq_jGPr:ZdGc>+
:+J>OUln:pV'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+aKXo1u0qSUmgqPR<$
bH^P=6SJpp/ps"(GOZ^3/ar`?!<?d5:6J4I8L0I`Tl!fe;sC]`e_&<j[.%8X"=^.0
T/6>?Rd[5(@k6h7>(<GKm5K.2QfuU0rrC<84jj7NL$/lIej$25,O7f@ffGs6[d-r;
p=i_5f]YORFC&\Sa//`QqMip+p27Wg7o$YHj4<$hEt6g8TKh3sL43on_)P&K6gB\Q
>12RFf!J!r5QG$mQ]LZfp!XEn"F?UTTYK+"]P>W,O@)NI$"*kYEE)q=rET3<p%+s+
S(B^g_krT4340:F4BCjF=RTpo3H0$2Y)guADaD3P:?ckX-t]\@F.M.UG9t;K!c:2$
GpJP=.S1nK;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J:FlE!I`HBWI\fEL%TRc1]g9Qk)BR71_FJM6`/3Sq
J)Yr5\uY+5'b$Vq5(SVpNS9;734smKNRMs`.3K\`r*u6UrDq1?k5(JMQe@DMrAKrP
I?W?XVqc[[\-J)p!"lZhglAX2/J^L:mV>B5Mct!.J`6#0S2*c.KM"Qq]4Sdr;sO&P
K!pS.2F-,&#\eBr!0a.?8LCE.,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q
.7keJ8lA5+P*D,$,c)cL8L[;brr=%hn+rkb^X;2nn+mg/rqsCI`r?$u](c.qa`mSC
WH\:phtut:6iJI7ht9)jr>nt`qt<,Nr4@[G^Z&/9hc=d_rQOGsPH(PXQ_>\$,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o
,a(bt8L0I`P"?pq.f$Ujj3tSs?'03LATbIJ\G(@.L9sFJmZRY'8L6L^eh3J,qPi'6
aEOhSFq*lNk^a/EmV<Xbm:1W'^G@-u]_D>!@TT%_eLGX"Fu$XGVWMRghU>jBCsVQ9
#=:7.0!FT-pqcg??5@b8r'P*oc,udI?'qbN`]D+"T'+2SFk\FmrrC$YesoO9H.dIk
7Z6WQ^:)JU.;3q&i9;2i(B.9tqo*$\>=G\*YQ,a,NM*j?+f)\5&u;JuI^db:p)qWE
3=O$,@$^$=TA=if3N(l?,c)cL8L[4VZb!'c*f&-NF^42d>]gI[i&m&3_=!AI8p!s5
(r'F,Ve0$\VlJd4'*H`2TMNSS^pfcp]qN[oc#Ab6TRr>n8L0HsP"@AOTXi&Be<@ZS
.<Lj[?e<W'pf8<:lF?`F@#E(7&&t:3Y4TK1I1*.ihNsd&;oY]C4Dt>?Yf"3YPj'HV
8L[4VP"JVD,a+CT8L1,XP"@)o,__MI7M[klGu#1(6QKa!4>j5R8kN,b<]1['b078X
;coC>@tRt4k">4uYM\@FlMgihkZPS,U^QcGYVG"H.jChtXC['Jin$RWSZ5e:RG[$h
4l'JG]$,Z)f[^hs@5R@1(?f#oho,GJFku!JljfGD0fjbHGkAI>Q*`Aqr(k9D)aQ-B
Iu@[:h)FW%(/@(oV^'U2]K*M;0KQY(fHK,0Id(1JdQ6hgle(*1ko!1;YOf2iF&.G@
k];2]8*nmFPDgu(U-op.NKAXR&@e@6+&d+A<hHK9;@17b`s)3GZWaN5C>dZmhfq;W
UggBQ*@6j@=6gn\et.js<Q5stl"0N]RdG%ADt+lA>m.,PP"A8;Ac609_h%JjV-2>)
bdG1=Wc-=o_t7'g]C&on5>(e<p"h`j>NuuGDOk^WN#Y`!o#%MP_/J2p5!^[+5*hB'
Qi@&CrrBA9=/0o`To"pi(-28CE;ooroT/"5F<@WuF.r8Q^8q3Vg?7ODE-d^U1>]jN
0]#Qg!7*dM,S7#'jH<(<.3t-ap=@[dOOgcOk7[graX&5g8U:#Bf<;7t=S$Co^JM1=
l=kFrHDWt+(dH)W[.m0;rp#RBhZ!QnBCs71.g=>m"_2*C!8Cn2d70"qoJDo+A,UWJ
bOo3pX=pcEb^M.hfj@^t'$:,W=oeI=I#@P'XfhMgFY4G2@meoBR;88M+G)Zh'[7nd
8P2QbrFPiMdlsgSj4$,RNi-_NZWGlUSZNuup0<#KJ)`WV9P*7uT<$TtpJf0i53Fcl
:?FRoofiSg;s;=V4*O?t!#f,l^M(LM2"aS3S86a]rr=0Hhu!1Q?W=bPe^s8rUie^/
:$Xe1l=.J9iOlb8gA_.c_o*j#VlE<6P#@H7,a>*f8L5f2P"A8;,a)&l&,n:Ea&0;n
#O5YaH*9$)l[>Osnb!-HFkZ*N*c&8lI;BGa^@,FD:*4,@J=-?:Ul\NYd^i6)^St<m
daus,kDc[d^!1E'3(1rMVr0B>=??]9[LFRb^SCFEgV'H;G'<#)paR.VILfZ]TljDj
O)?I]A#ZU))W&XYpB&Lkk5b#6lOiO9Z3?V%]=L1A0L!Zk=\^<J!Ar="A06!PCNgE>
ml_?8]\h9mRf<Ad*DW6/rr?,(CVd<re^Ug+V.GZL[Cd#'"!*`);12S(=-H"\eT2[@
DB7Hi\YnjGNW/tr^M*WIRCU%_BPc5an*\M!T141qL$(E9A,Ks2bT(\Xqa%`$[N'K2
F)>6R9/`-dp;YrOP@_<mmti\+DtqlZpOYafhcnpTA7L?-+4M%+f`(s3\$%ae<X'kb
nU@<aohVgq]s$%[Xa0k+lu/qS='Os4Y,1b!!\(4loaL(Ke'A",WUt-!CXKC70<S)Q
l5'9"]-*FrET_+/fAc&j/0Cf2D4as[]_*n`Ro[b6Z%Jug4.0"aCTYAm22LYZ]+2;^
>IqO$,m,mp],L!@?58`+mEL%g%WT)&`']T-i&[O7RIqNaSolBL3bCNq+?G5a>Wha^
[<"4[eN_#s:na34Ap;da]0.t8CA__:#lF8@l_L\j>FePl^r1Anm+,Y$9htcB^99e>
ZG>W)IHQ[1<VlVJ&(M/eEuJ<'eL]E"M`3IlISV/8OWr-[eM6EuNO$"uZ/@XFBokX1
&6,!UoH3V@Db'$dSLX&qp:"L3.2RE-e(iO<cYoKOL;;nXrrC*grr=mJq`"NT^<);*
<-*[XF,0f&,j549bd)7MVteU'GN*(<r#_t!<dJ\i]cWL/q0YTo";3"lormo-DcQ$^
I5[[`p/gA*l@!TXn(8[>\F&o+f_DVmr*>7YofK&k7[CI+EIQjLfH0b=J'J6\OTNZ4
C`fUj<:DAS<V4EcJHbiY(HD5SB(*QKFeA2@d.9NEkhu)lqRtD9N([=o38D;kppLMo
eQXj#naSDUIqV!r1!XpmgI]D)pAt+KgZj/L]WH(,IV%&@%-p@5eWj]MRb`sXm=<d2
TR=n*LiWKirFtOWH!*@3rj%("ZdZk]cjT.Omi6,A5%)]om$F:AD/\duY?t<+^-B']
X3MHbh2ZP,+,0,hLmUUG_+>o88lA5+P*D,$,c)cL8L[;irr=!@QVmE]Ql+s-e?Z*n
4h\Sq5:Z_>Wo8HIobJ$gM:APCn(INe>5nRLOQOmb`Mk<ME3O'@*@AE-6+4F0Fts<j
O/;@o<PnD.!3Am81C#9DY%6U9MhX37*_7AcF6mrON,tOW"%3g*p#lgm]^.Q4No93n
.M&Z;MdG(Nr)Y`3KCt8NX-J*8\*Q!!-tY'A/Ub&l@mFaT.l>g9Bd;E)<k%qM3OSgl
WFb`]i*kWr*K8co_<qd,)nel"\<k!H62X@'kr33bFM(9CK0:cd.BW?r&[oR'>U-\X
-T@lE]DB-\4ZlE>9MjWO;17"L1#RD\HQ/"7kKhO3VeoK--KA#76X&5;8#Y.`F$mS,
F.1NIaX',nd!i3@:T5F@qYpOhbfFWA2Y,%k/8OTf/^_SBg7%RsSKn"^V#LG8A*QS_
bd7<$\,QFN\E^f*o^AqI?TRRj[`U;/>TI>>Jke\k4gO#))qsoS>HRo*&mn^mL@"9T
4+M&Nn+;KG>i.d+Hg4unlJs$O7/m75'>MR8eGr,LbA\K@9nW2m&;U%GqPjfK/#X<O
Co^pT*>AGQ)8E19^R>*%DR]WG8L14*cMGr:I_Pc)kdZWF):L<uSa#28hbs5j^tRC"
6.jSgRdW$fZYo&fkr;_Q(lWO"D9f?7,T$;n@f^Oe@l#WilG$C]:XfoX4Vt+s>DGh_
F]L]T^XBWI[s<12%gV/sTk3l]F"FL?=_/E#dah\k[_$%BQC/4s"pZC2SK3eqQY,nq
>C(E.[YKg2h*q%A\4e[@[po]l7:;O,S869grr<rSR!BcQn&WQnQJt*?EM)#g>T'n=
mfsrXflRsNS3![iV1IB@/NF4c`QgA$=<.(Fa`0MFM=Y!Hps77)a82uW%BUE,B>'R?
<>+<\k.%o%YI"hS&N^[aqEOc5qRcVd)SW4l)jncMgkQ722:_a0gsXeLVcBippsT#"
BnOo0A=*DigclBJ$QfcS:&SD-Vdg_41@!(?YiL+20EGe4?NKga8OL,f8G#u58*W*.
kNRl]nDUHB>kKrPIeoO`d-B9$8b]a$ri@tuJ)_(*2E+XP_YUb7G<1\@]$<Z_mX@=$
[q0U,>2rhGDD!"R<c-aR2j6a7pbhj(pYgVk>lOe*qLaq'8#u9+B4eRHfpQ\caJl"j
XcKR*gj+ZNaX'-K:-KKE/qmUq*A2bBhORAN2M]r^?J>,dimBB"jQ`S*f07$%DLYU'
^D'^W[JMOsoIfk606eHSQq$C)4S;AQ@=)GV;We;`'&)`U`rjX>Ca!B^>]\<`qHlt"
]MXj4Zj)Mkh!qjng,tSM[X+98`9Pu6FR8;3ZsM24[/L2Q&9S.sJ)]Xn=4*Gc^8^e<
\uKsFa=P?:pU7=&S6_n6]7=+tqb+A(/Pjl4hlYd=3oK7J<JkcOT=Xr[hY1.HkV`Z>
D*"@9LY71?%m^-pb</#fLp-gY-C=YhkTBV5L]7@Z(&n9pf9LjG-.i.smX?8W$3("$
df0<e9<\?qh#'D7'E8&(VPW&3c*-HBfA,erP$<E2kU!TE=7hmG-.-,eIEciJc1#"N
7p!:7qg*]<%G>Zo]'ZcQ^8<^p9nB)3[]oc3K.D`W!#9o:r?n^ihOTpBAR[Za3hc1N
)XBUY-_:Hg=&mcH"kd0fm[u9'ZWV-&<7.#p29[os8_^\C1d7hqS2N[he7Vb$Io1,W
g@:8=FmfH[=;koXV;)l9P]8pMEo5n)Uq43"^:&.@d<.((@k@9k219h%LIXEtT7jAB
m$Bq$'05q/ki5rCN+jZsF0VA)0Kl2Y.kgg.A^uY16`E,qr9[gK#E,Z,Jj/uulqeRL
chn=/rrB]MgHYOiif`5Lk3#_Ba8Z/!?e55We:/PcP8?F2P"?pq,a(_J8L0Hk;Fr-s
PdleELX>mYXbHGcTeP/ldLYSW&l#`),QKi]FH6K)DN[V;YH+:!qFB+Q<o&CD7F=$Q
]Rap4]XPEB)D*,%L2+$aI7C5.(-d.hY`;)A0GY2MO7@5_GH.toWDQU`Zbml#D8g\6
lMrO@b_"YH,QN5DR/[/EO/q(qlT\U_VY+$E.:j"1CFXeKpT_qQ4%%`>_KQVAloOT4
Zi"8)8q*dg?R>Y/Ri?9Dc>V(`e+?aP?S<)R-$ii2f8WLLoXA[[279]aZW\I^\17G-
U\)igLbQD@4#*]Qm9nJbpRL7ia3:T@UtSq]NI+<)".FK<85q?.Y4N.;l!6(Tml/Wu
O5f%SU68,rcOPn@WB]D^,72mV)lIhiRW.*`CDcR`UBe9B7!Z1aL5J^maXnR7)!]iS
iN=bRLYfhIrFl&2e%W6^j+3^.*lG^MfKJml`-EEa]&W&!rr<nn<.MmO*B="+_laqZ
:+7g*\$0gbF3Jp9k#6gs%rge_IE]cR6+3Z$N.5dg[($X,^q$Z=NRk)nIoc$WdJ5ps
V\^DQP3r*/dBCr3qr(@9?9Yf1O%5uD<m,@*crlSQg6uN^/?F?L$LcNkW?"UfWo'oX
!*nu1?Vt>RCh@H`4E9I-ZtKr\P`34&"TJI'rrC$ae_G&!Ki_:=eD6QBBut__]@;&8
_En+J@;(/7&#m>>;igYpr0$7V9hWTN^[ZC<CFc2ldF3Da1hJq<rLV$M,/>LnPME11
inLP7e3:%ce!pSeI4t80MGB04V!N9^0rMr)gb'u?5Lc9tHDg])qO`+R\tT+c9=1`B
GF]#p@p.1MU"']g6sI'Ud!AFrXLf,c<;Pcif/a%d%Y`<d>cNZphrqF'e9S=hh9P)a
."-=9gXF3<f"S3H3p,XC`=@#c1"`n"\$tf@)mfPE`\5oIE;FKI5?IA+p=Y^q95Y3s
m1*nO5I/V(FbR2&Q"^$Er\AeK(*W?*5-G3%A6@Yk/s(7/rFW9^rX7-)0@aF0]g(e[
:AYeHfklLn7SCe9fD(s<3sE!YF^1`*8L5f2P"A8;,a)&g8L0Os:TO-3DRIqKH<s^B
EiV(0`)"d"o4c])M'T"DI]E(a^8Y\Ul;-!/$;D!pZh#36<`J'LDWAP2ht)1IoFOEM
5sahO=*dBf9M_qdH3MN,-F\W8osja+`h@E)qLS=OUAg5=\(2oc(hh&J>J)Y5%@5`*
\Y1uS"?idHI^jfIVk[:==%`F0X^qEkN-^6M>G%R0_!g4<rr<4!rDERp)*LL^4^74m
=S/5^p*N/e^_YI\Ihf`kA*P^7qQ*EdX`d0L_%4c&m]b"\]p]It^*P!Vb,.C"ri<Zr
^I@d8LpK;thS*QOcb/bhn$IO!\jV]U8s2akPim2WLOo,VVH_K[M`4XRX`4,:]R:U#
p*"C?^[(@<7N>(+5N`8BTH?Z"M&+]IGRf8u!7BH+J_7j3`=$HueNTmZ)]Dn/"@?0^
I&j,oNBaKb@bYkuB1*V_7UK).HcT\Vh.YQA"H?udDgbmeRFSW)X$3ohG."el<sKBF
OD;gq5qssRfFNq(\:=$=A$LKorLNdGgjA91c+@?_!2A)U,@mg=P"?dm/75O:<p9D1
d4OU+O^4,$a0^]qm;LB:"#,+[g.<SSF7jnG]=LY)okWllFpCj_!k.1EX`lI4f,'E+
+%q7G](+<s=f:Wh1E=rkW%DW<-g>N&B<(SfOk2$!rEBo9V@THe%s)CX>TqAf(!WB@
8bFLb^[0PVrrAheT==CZr)"(q3WB(]5/&s-kFd5s#H7;hRB<qsX`X`h_tYL%r=R.7
QV$j+lG\6QH7L[.$Z^&1m(8&9g?rEs1h])GH_b`nNR2DsoScE4>487h--hN04jrB^
.mY@r2+gFcOAiuDF6J$RV"Lbe]_u$7f<pS0qN`@O\tD6W%XjuPn-?pGoKTND=$#_#
I5u,a]T7M*6\T\?pPm05nI)F'pK79Eoi&!Hm#9^(2YWV^e<<gf4l,@a*.B%BB`qU7
U\0P=oW!n]q:&:]q5*#^p\(ktj73S;@*S]O)EhDYg8r?kZ.&+5*r?'[WuLl0jeqZ;
pFs000C`9>0+,O6fT&=MO>8A6g\t`<T9rna<7R%.Bq^Nd[LK<J!,GaC?j;0+D*TW!
X7mS*G&TX+med\r8Hc"<P"A8;,a)&g8L0OrP"?rK,a(_l&NUZcJ)]8_c2Rb\Fl=>A
G"sdk_e^RfXa@);U&I^b!#pF!%p&RsP@sVlP+Qkg,a)&g8L0OrP"?rK,a(_k8L0Hs
P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g
8L0Pq=4NB&Dtqn#5=@:l.ipgDlVp(upJp0X?i6Dm2Ri/\<2.ul/TkuUi:ZN;.7keJ
8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8hYNA
A#urON*n8ZS6u=S,a+t5YOS[CEj>HM*?tiUhpsP%M'Gf)e\h8R!V.N_1c#'>rFPi]
SSq:"N7R#sd-[0B>DFT@Vmngt)AdVFARp:JDR#DTR@et5okesi?'OJ9eeU2rcdE\e
&9e<319<..hcK'?*KB\G9f4nn/!Fh8eGES94l<cDZg.f9q&'n*OdaL?CUgtk_W'`\
q\UgmB7FIWH`'\/]X.I<f:T!ZD;A[Ig\hftgFiU]W#[f0FoMG$\9Weco\QEueaR;<
4[-]*4mh%FO2MX_K:rX<*S#:MQUXEO%neu)Q9(B0L>,fM=EN.b6K3HnFaO^urr?/I
f@>n^PVKB\p>k0ndWW*I*J!ITCYSi&5`/AkVPLd&!;ZWpof)mN/[><HrrA0SrdXl@
rrC5YJ%Yd]jA8Lr.\0M<@<?;n\sH6t<KE0rcZ/%@25@]05SdH!rrDnbrrAA;rr@?E
!6D<-lVCRGhd4%(oP^d4)/[-c!pm"d<a\)8%m)ijfYTk[P*=MI^:jJl-R5JBrr>!h
1PliN'7I"]i((EI/KSI;rBU4s>hb82Z`":mG<OLm\;iKY?]VmC\_.DU>q[EPWe"at
47$f9p&Z^PE+%&5d>eojBb/qBl!B@"ROl5)E/#H/e@04+l$kf@pABrD[`chPI;o&'
ohRcSQhBUF^CL!SUT79LTD2-SUZ8"1oj3='2=1o_%VpSHE&%\^_Sti3,8[NT]T/>E
crk]$CP\.oraX^Fd]rfP`E-![bkejKSXN-kkr6?gcDP/[Y^^7XIRk&B#2[TMP!LQh
,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,qS4:XY+So
TLgLr!+(#Cou$);eu\ap=4B\tS4Xg-riL/5chnc<%u,b/FBUoh;lSj:I9URn)']'\
HSE8SHQEK<rmYf\X#8@]odB%J/'"_T]J3W,,_g5[O(08ASHld'&1n$tIUDlIlT)XI
RJC-,f=&O<OcoE&eIHJVg$^]s!&Y=p/F#H,5,&XOe?/`NS37ac$Z(X5VZ-*5h=m6H
K'HM3K*L\S1%<uR`mmS^k@2)/l.rRF[?ITbX$&Zs^9>uLbC*StQV`%.Ho`29X'OBK
N<NI&FKVTsf"-8m:T%;Ha1]*Pmc1QfLLLaH.r3@XXE?WIW1R7>a49%AOtjOZJ[p#c
[/4%iD>'#Gf15O9?2jmhrhf\qjgID1J+>%fH3BR!rr>:_VZ-YX[QiVungT(7rrB%5
q/)2eTDXR=G-`tZ\pc6A\X!S9Tr-!aG6+C_n*TSHT3eXFqR/m_kfn*Tbd;hff[0$K
resA9+T6T^_pc?/k4F/']c/ttj(@?WB%^>6#*H1%`kP'bN%X.%*@I_M@al8j*@K=8
\cCI=UO2b["e_3ErrC(=!3`m(N;D5WI<^b5ej9(lZqPksCAQ?NZg(Rk=Pm@Kl9-WK
ChH\C^A>t3Hj7p4M=;g6(%m[d]Gs^5i9&MSHAD=)HT1:$,M[_TcVVErlBkXpr726(
aC/T4Hk15Z3=*u#\hmbh9e=B+HYoe6LXu/:CRX3)Jr$p4nQ2'@:+oTCZ'OtX3[R_'
N^)aa?2u$NX)[s<m58pI8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8mDo%fk[jk
ke1bGF^7511"Jj&@JkW+f6jQ?Ss,#_3bClSc32UZc*!(1H#&o3dNg*8Sphu6A#Hc8
m/jmA7I@;giQ\OJmiBHs%#$1BHRe;=B<[,KBWdCi2?<C*A+rckWSk:8S_(HFpq<rI
=2)+Bqg*<Yg`E:j9:P2>CPS73,KrL>C\m;g:>1,>ok[IWR!jOGfD,r4IL4qa[[eJ/
M>KN8io"bJ50HZBDiMBB2MQ++0eg8h2sS`g3.G7\_f>7]bE(-*>u&%6lHP:i]og"!
gA_&:f2qhIB3)8/0<!E(T:^A\Ee@#"U`BiZHu\.fpo^CWB@Ub2WcWfI^XgQ<hR6_i
!5Dq_Vd6F_IJqNTk`?i1rr<nNr8%AQm&0j\V>gOS?iFsC!;9@k!.J"LUmdXm^[[6^
!6sF#b(&m&c,TUN:Xm^oh%pkh/EGjP9pFKPk`8haCMP/CT:NI+FmSFcqWmfT^TDo3
m-J\h2]:J\(&VmPIVC$4Y4(pEP#HG$@Xc\gq,eU75IFF$)rl,!;5KbV7)Yo!:&RD;
rUK)MFW2Qt=k#ZXcYl>D>^o<E!#Ps<=o/`q]hdnK6@]tp*7F,S"$lkd?njhig[JG@
rH.n69g62c[OH#d1;NWur.]*5i1FFp3qlod4YOP4#$4_rhW)LWd3P?IjF>,n/AJ+U
?EiRX1T9KiARPN$epd@Unl`XnXn>K[Meg&1rDor@3altFrCYF?$R\t3H2)E-KWdc-
*A8)#o\=n^K&*eD0JSd5mcPZN'.#P+dK=J7P!LQh,a)&g8L0OrP"?rK,a(_k8L0Hs
P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,s3:EgLZWAhNudHde7e\qWtEsh&r-_g'>lE
4\$-f]@+A"XpqEZd^>Bl]G@pA\YKNOm91N7VIF\>SWV@l>IocZ)W)NkiQ^t.e1WoJ
rG/E_Mjmqt5.";dqG;/K4\DAP!t!A8*acP#m33,G"n!8Wfj@YUTY_TV*f$U3+.^/g
cgX`Z0Y_7Br-SME!)r7W[_;4?G0ps9<de=\5,m@6Y0O/,)Z[eB%!KD,Ib0#V#HRk)
N$$b3I`2)F;u2PP]G:n/db:]+6N7%59R*1JRWX9Ch-91&rr<lX?[A"a)*_`2VbkOn
O;[>E;5L%"h<aQ8hm0Ne!/t:aDZ9_1;uZiH=)%=TlD8u1H;UEWqUsOsos8Sdm^)XR
3pgb_;r)OEMk;L!!6-\l!&oE).K9C_.=^@orrAP'rKR<^hj*K+,cATPrh@m7/*eiT
IWfGJ_og()f*_HsO0-VX%fI]B98:.n]l,Bm[,YGQ4+1;g?Kdd3$YD6c<W9FT>/g?g
dB2Z$#@mc6SB&2df5##7^)FiY>^o?Am?dK\`r06?oi7C2co+go!OB>)h&>9V#sZu_
3%2_<LTbVigLj<3WB[`TF`FnTmU32HQCN6$Ujrau!7[1:h=]+ZUM9C^<lEbN/STG)
JF<=O1"AIqFUtXYJ(;lE2*KJom*"Zp"'o`Eo<rcS4E^-"ecI;2r[a,t%^5PpYLYp=
bKFaE484@:O$E8Ce`[B"lL.'XqR=m$knnGD8=.tN2Efd-kMfO*@c\ku8L[4VP"JVD
,a+CT8L1,XP"@)o,a(bt8L0I`P"?ps40SYaaZ'5"6i'%AV>V@*n=E:iF+<9rrr=6k
0DeQD+-ZIFP"L.Xl50A\rr@=OS,WI5r=8i-cMmkrFNGekP`eT`V'M3q.HUQDrrC.c
r^m%Vq.&XX5FMLSnfFG'!%IpJhC$bO!4>&=rfI%BJk75ch7=F#Q&kkWkl1Y>GP#hM
f94KP,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k
;NaTsPbgaMJ&th8d6<Wik^Q(br%F4),cAL?O8PpU!-k,3rmLfH8,>aFrX7>-`W#r9
P(2PahsruRp$_"<P"L%bP"?rK,a(_k=?g'j!9A?RadiA2hT,4-*^>qJP"@+m9#'I"
rr=9bq>UH=E4sH[\,;4]r1Euh[%HR;&#,4Y.G%-:P#@H7,a>*f8L5f2P"AILf`~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
