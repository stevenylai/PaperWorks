%!PS-Adobe-3.0 EPSF-3.0
%%Title: (formedsections.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 14:04:38 05/29/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 357 248
%%HiResBoundingBox: 0.0 0.0 357.0 247.5
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-05-29T14:04:38+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-29T14:04:38+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-29T14:04:38+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:B2E68F1654A9E111BE7586D53BE239AF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:B2E68F1654A9E111BE7586D53BE239AF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:24019502-fe22-4f63-bddc-1d574536d2c0</stRef:instanceID>
            <stRef:documentID>uuid:ddb8b30b-bed7-4360-805f-4fd50aa1d287</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 357.0 247.5 rectclip
q
0.0 0.0 m
357.0 0.0 l
357.0 247.5 l
0.0 247.5 l
h
W
n
q
357.0 0.0 0.0 247.5 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 476
/Height 330
/ImageMatrix [476.0 0.0 0.0 -330.0 0.0 330.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%13FN$4ICQ$k<jZ%Ls'b
%hB0]'GM)j&ePZh'GD/q'bh;q'bqGu'bqH%)B'M4)BKq@*ZcON,9nQ`-S-f"s1eUH
#Q[Nug]IR$!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!;0<S8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`Uln:q3B_Q0cWd7*@V&\tp<:QUD7$a\5@\]=YCZ#iCOVOC
r7&JkFW^Opl6#`V&,u&Eepld&L&V.N$U=@*4_l=@-h]JrrrC7!U&P+0i;WfG!ai4D
O8`JY&,U8Mrr@9ZZ:QLerJf<Vo(T)4gNYs[^mFD*U]1=\]gMeR_>aMl"g!kZEdqSA
+8ih;+84P%rpV62)lWc:jmQ%G!4MBHpOR**P+8/sh+.JF07&EP[tF\\]Es&,l9G)k
e3E?5+8t,$aX!c3p,>kK!6a5mrr?oorrDKh?a72'ra,7.qel`>!-f9b8L_d[NRWIK
pS`SrGX))@QgAUbrrAD!6iPiVrrCmZXHH1rIq*UCr4VA;p>->Zn0RrNW;ckZmnj#a
[d\e@JSQNoS=eHi8,iQBHADI.KDtqa$%BnZ5P]ZU5OH**rSUl$,c<$`2c9STbMJrm
!,^Zo!:KtrZ+?"q?M+j+D[6:BGS[SV.EVOJe:7&`W.3QH5Pr6_6F/K!lBmub<b?c@
0soJJc)n2%ltfnaq@uueV/*h'CFl':rr=J?hu,N9rrBJe#q=Fs,a)&g8L0OrP"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2
P"A8;,a)&g8L0OrP"?r[4_Oakk[41*Zi:#AF4RY=lTas$6N7&7KqJ6PT!a_ZP"?p`
Uln:q.3t'J8m%K'>e1+m;Z2Z!\H=hZgQ(&OV`j"NV:C;sGIQ4Qc&naT??Pq$lS8D>
`pZ=,ROlU.H@+Y?9*<up3,!38VJ4>Y#q>8QIpM;E:?UYH>r`W/emmFSdrS_J\^as9
4:dUh\/]iue3Cra3W2KQdIJ^&1h'kM!Vp."V9^fr^7s$?B[H<]^.Z138kC:k;NaTs
PbaI6,q1+&8P3,K)u`_#^\VoQrr?kS(:)'Ghsuh6rrCN%J,<`+P+?-H8L5f2P"A8;
,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*f8L5f2P"A8;,a))iepld&L&V.N$U=@*4_lU?Zi:"RoIp/&=oSK13U9fo
.3t'J8kC:k;NaTsPbl4h?CUV>n*u6copUo'ICMF(LZ5h%EC9(<A@+P/]-Y2?lN?R-
jL`?n;oe%m0!Fr3lT\#-3On7L@<?PU)-rOcq%hUU8-Dc`Z*!^1cTd<R&kOAu,a(_k
8L0HsP"?p`Uln:q.:i'hq+%Uf!9qA8rNX.Ab9s'7austK!)=:/!:>dJ8p-:g,a>*f
8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J:G;BNlGqGfO/m[U
qta%s[bHFnq^d1R:32rjQsAf6Z:Q?VJ'C3X^\LUQrrDa.TD^+'eN`t(oPa[eir9#A
Rb"c:Ee!5DeR/6Ol2Lb\$W$bc9E&Z(<W<'ADP-q/YdFE1kr#Q*8ofFDT@I<HVWn*\
q[64!P=tmhrDijtb&3jO!3ij1!9lABP"KbEk+C12r2/`Y!;d."rf^>rkrgPnrG'4J
R>6iYlLb#C;sa04Xo!##gNRILAiCQ4!m/Ra!6&#7rrCMsJ,Xo]W@?Ci,a)&g8L0Or
P"?rK,a(_o:Kd\tP^4/FS1O[?gDomfW:`oO3gdo3-L=BF0)J'rA,9cQ`k,n,Ms@j+
(0p=Q<W<&/FW^Opl6#`V&,u&DVcb<uD-]f3FY8mh<Q`Lc0.H\j;io4"da<u<GTbCl
9>M.8^RVcr;NaTsPbaX+d.$n@;s:nZW8H2_Rr2Oa3>OK;i<G'A>@-77E(PmM.du_A
U]1=\]gMeR_>aMl"I/3tZ@?A,+8ih;+84P%rpVCC57af+Ab@N(l^>T!=\Zr<[_+%@
FuD6H\o:EVY!41roP#kKf\K't!&&YRrO7FZ!5&Ve`p,eaHdk:I]H@+18PZQa-h]Jr
rrC7!U&P+0i;WfG!a_3lks)8a.jM*)rr@hWg?J:2Du*'1/JRZ7c=$mpI1L;NoVYh<
$>umgVI)^FD-"#-],3o(k."&hf*r!/9dM56P"A8;AGV^bDtKD7<aajpq5gT#>HGq2
]jIsCbS9h6Cql:R!&cL_h+.JF07&EP[tF\\]Ep%<=Zm`';<u!nE3K9ACiC$cNRWIK
pS`SrGX))@Khp7CXEuV3T"!2fr2U"Q*LK?<_^hN'E-1eQdAMRgG1'MXZ+?"q?M+j+
D[6:BGS9t7e:7&`W.3QH5Pr6ZSRe$^lu&Tu!11AdrnG9h!8[jn@s&mk^$6^5h@KVT
,c=ckPPZ;trrD0L;#^O(n:11`0A,)Nrr=]uL]+]7rrB\<.Fq($rl44fq0UUUmCXP>
i)I;M+'.Ws(T;Hp3p(Lc`5T>4[_BBudd!lSg)L;&0dFX`4W6m;P*D,$,c)cL8L[4V
P"JVD,a+CT8L1,XP"@+EqPX>nM-c2A!2f[$r:=+C=[,mc!:_Se^\$EArrAX+>0/3c
^0Z7(#GO",D*MaF\Ff5E^=UZM2pB.C\A.QfdrKcT8'9,oF.7AAHSR=!aI=[Rh!H@J
(j+5g;H)9pZhao-VloZ.:9?f$EbZ)'+.D_pg\mH?(4o.VaiXP_`E,h7!7QCHrdO+4
=_-Un!91&WJ*F^4rr>9*e<K8EP"@)o,a(bt8L0I`P"?pq,a(_Jam21^O$`jHdtOFk
A"L)o:Kd\tP^4/FS1O[?gDomfP*D,$,c<$TTDg-_2u]<:J+Lp#=_.J0rrC!@7fNJ;
IP:\GX_T2Y/=qk$!%@NtrA[mY!4Fip=_./Cq+%Uf!9qA8rNX.0:9mG:P*D,$,c<E_
D<Wsn1C]AR'%\'XnLFdgA"7-+)!i0(::=1eQdTfd7@FqH<^f]rLUPp=BRP%XLGd=q
QFX.:&42i0\sn"?YKXmoXi.Webe-QaF-u,.IRZC'Um%pGO/;K<mu_'XVQt^A62pq^
O8Zcl!8h_mqu6X4r8R_V`<ZC25PFjO!.DWRn,-PaR`R!M,a(bt8L0I`P"?pq,a(_J
8L0Hk;T\dgrr@m^Zi:$&r3-%i@b+[H><hX.epm>LQ2^iUCe7C-8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.EVFarr@m^NW0!Ur*TBn>1Qh@<;usg/()-(hi%L7SnhNO
.B1iQF)`n9];K+"59pceA$t[,F,q94CR>3OHhf4ODLmje9m-8RFZT(5f=pTYg(uKp
=RFC_f$U&P%oL9\O>YT*7$:/eYOR*nonT1[Y)T"$DPs?r,0OqDFkH.?<p:cn[_(D`
@!s'LT++k:P"@)q-R\oo'jWp$!)<:h!;ZMhX_!][rr@qZSc8\er;QcprR4YCXHH.#
V'M3q.7keJ8lA5+P*D,$,c<#mf9trH]Y$pB1HrjHl`I1R<nH\]2H:AQHYRKI[D/5u
m@L*Q!0gbVrnP?i!8dCMP"KbED"SnJU?Wiojq%IcV>Fo(rrD-s;#^O)0Rri1CF#(5
rrB+P\)?lgR>$m_:AeojH>R2F[Ir+j\4]Bt#jeo28L5froPaOqY5\Ld_S?&S^fno/
UOUELGQ.Y<(&n:$NWMgqP"?p`Uln:q.3t'J8kC:k;i12!%hgbaY>kC)2;dV+jBkue
d-[.)X#AVP)E;m`F._IhlJG+s?W"%GZPf$?>hk((l<5^["CH4R7EgPN!:IE_Y.9pe
IoUfmg?u,)?On?<]gi:q[Im\2[Ro#iYR@$%!#L,e\ipAKHn9VbX+"=`aE+TNE3g\d
Rcf2MAA:r/BTensnTiaXHF=l5:$S%&o6NSfZ#$pk@f^OYgcS/<LWO\>P5bLu^K:"f
:*t0`l?*FiHH&=XXJ_7d$$2M=O,,H5hR_4$Uln:q.3t'J8kC:k;O1,0chpE.TD^_1
J*3::ZH;srrr@m^Zi:$&r3-%i@S1d+8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
:/BD)r(?U"rAWa9!9]g%ZK;(eFI`4lXn8)#f!D>kn8XuPfZZ,%"&fJ@GMt^34NT(n
;TA!m/t+QKeh\uXEt4O:Fa0AsbOT>@^jS=+h=PMG3$bDp8L0HsP"B<b@EQ=iTQNBP
=*f)N@H:]mi#T#(\%/@U#V\bjPisZgTDV]2n,53.rrD6MR[<AYU]1=\]gMeR_>aMl
"=JV&b'm?9Y3UL$hbA8m>P;K=b=ul!O0HX$QMnoSgIYrT`p,eaHdk:I]H@+19D1;A
rrC7!U&P+0i;WfG!_RTu=[01&O8`JY&,U8Mrr@9VrJf<Vo(T)4gNYs[^lk7!Q;?jb
U]1=\]gMeR_>aMl"M\Gh+8ih;+84P%rpV22=XB:/)lWc:jmQ%G!4MBHpOQ-*mJ0m*
1n;a[PAOH*R/XG0)Ws#;X6<u2WKjc4<]Fba:7=a"P*D-MlA%GGX^LefCtl1/[hg\A
a()QE3R4MG2D>f,9u8+;E"p&sFW^Opl6#`V&,u&DVcb<uD-]f3FY8mh<Q`Lc0.H\j
;io4"da<u<GTbCl9>M.8^RVcr;NaTsPbjSk^Z?NKrrAr(rrDc5!Ga6XNW/u,p##^-
=8r9/3!h%b8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@TAf$F7d
oq21AjaZH_(:)'Yg&D&/?F0Y3VYmXqo3t=7P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6
,q1+&8PW(35Q".GDuDWSrrD5Nde_M\qS/Ma5+W45Dl@h;@6(l@2;cM/U^)0h*2W=(
rr<\F)ufn4pqQXe[AS.)A5rCY@r86sQ<@G-F'R<&F'R1f"=0jY/C&lj^Lt0VA3JOM
ddB)5\`C<P1bu\BH_0V0o1c=Z$kIgNdMA9D;T\d_n*%5iT:qfe(`&_&]\D_i[E\\I
A]2((Z/KILS?ML=>c4L3q2V"M1[f&;b:RkE@^\-(CCO<,a:RlE#==TEA<KM1.3t0@
hQ>9'HeDG"Z#u_N\es%'F2NHhAQ:VVFEn"Rgdu-[onT<qQ]HYP6ZY#\d`&JpY4;Z:
Cq?)Sf<fC'e\HEMZr0eb8L0OsPP&_j::pN+:*!"-!,o0/ZH;sNrr=EPrrAr,V>gP)
fh!XD8L0HtPEZ"HMQWNM!2f\o!;ufE<jKihrrC#>:B(=CIXh?Gl)Rr53B_$S;<VB`
E3oQECie15am21^O$`jHdtOFkA"L)k;NaTsPbjRV6G)WQ=a6K91Crl=2X>+S\B\^[
f2WGHHs9nKC2`8eA<Km;odk![dcmMYSRXGT!7rphF]VY$Z0]4PMC]"]_l_fc_o%)i
(/NMbB@Zq8U%IhiqgCi:ZO+n"WNQ4lI3:Vp\E.KOV'M3q.F7k.Q$s6/l?TnBo^Bf;
aL\:b4'u93F%eP)@#jG8Z+?"q?M+j+D[6:BGS9l#n*%5iT:qfe(`&_&]\D_i[E\\I
A]2((Z/KIDV^M0s;?$X>hP'rLD;bEomfHk$\rZhsoagq<#QFdK(:$L\ao.4KJ+E?4
J(o34qnSQbDPR43Qb>ccgVNmih?C!D8ofDkFW^Opl6#`V&,u&Eq\uL6!9NZGrrBLs
J+nM0,a+[if\K't!&&YRrO7FZ!5&Ve`p,eaHdk:I]H@+1>0/%f1[=B'=WK>hbFOi6
=]q-kZbm^E2N4^#@;r32Z?B8.BNf1!lIYs)GQ+*nQi>lR/S(*BPLjWpot"HV-<6F_
Cs7#[gIl='p,<p?p`@+L\*6lLc!&:<XT&:C4U_8i:)8?HNd=<!lu&Tu!11AdrnG9h
!8[i0^T3c*fXG:#FhXP\))]-t=gJBOAUq2*>Cm-BHS)Uf;NaTsPbaI6,q1+&8P2Q"
P#@H7,a>*f8L5f2P"ADEeN`t(oPa[eir9#ARb"ddqPX>nM-c2A!2f[$r:=+C8PL2[
.pZiR*B^dCg=dG5,ZfD%Q[1T-"N6I*n-NMY,Sr>grrD4@8u((iXSn9*qC\LF9`G+3
gV)+kU_E"+gLLOTd;("jS=ePcZp."+)>;>/IC^d9\buI-;fb*8KC,VLgbu[KQ$WlG
X;[(@QWX,)CqAp<2HsSi)_<*40E;(Q!!02&TE/IHPbaI6,q3f*im0(0F!n,=ABPHC
=W)[@%A-8((^$1&*M[em"l6=gVfWpIWr6/#Aot'PgXEa'^<ldI\ZEB3qjP2reiBq*
mVHR"SUBjbO.4Z\DcSR8qIPu'Y1k8h[]:j"F!<JdGCD[*MPlMaIS8>fj.&/bY@Y\6
[$W(S;Yq:geor3f\<<)>8L1,bJ#;<":7"]MO6HD+rjeG<D5PNOO(J,GhcV"tAT%?&
%U'Z6P"KbED"SnJU?Wiojq%IcV>Fo(rrD-s;#^O)0Rri1CF#(59QtUfm_=aNG>?5q
UDj^nQTlYgkB$*u%Eo7uq%oVNFNc>DP"ADE=oSJdH5HRN/H5_)*;-D=HI)Mad(f53
BE$QHX^mZlP"?rK,a(_m/uG_-T1/*`[9D#%.sMP>Rc+`lRWK[+T?qJbm.YVgLUuf_
?,mEK4I8+KL0&LNF5<mgBsjP+Ja_D56ISnTE348XW-%Uao4r#P]THLmJmITrZkF'D
A&'CDaH0ZY,r^ui5P(A@;=*T!I`T/"(Ju`\J)]kPl>=rUo\Su@"/+kEmD%?sU?E$_
B'he<'8KilJ#TuMZpFE8?1&Y:=is?;=8>4d;q'S#a%ib)pU'I%QFbeT>8i8SL8uA+
#^EG'Tj#UQ()9q/)XB#\p,L`JeduZ+_>lJr5QY<n!!!!$=p%"k_Fd]t,a+CT8L1,X
P"@)o,a(c?I]\+Af73&&WIO=/;V"tCrEmXd2N0i'SW-XY?'4?U\;k?1I?2)#VVF6T
)sf\sWIDkP5P]ZU5OH**rSU7BZH;DsnrH-;!7QXoqdZ4alu&Tu!11AdrnG9h!8[jZ
kZ<2=(G@GAAnHIOa'D\H2]8^RlKt<ATo2j`NNW3?Pj9TX8L[4VP"JVD,a+CT8L1,X
P"@)o,a(bt8L0I`P"?ps-gI?'-$hNLS+2""c"gHmrDW^r`32Z1!7QBMrctV],c)cL
8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_Jam21^O$`jHdtOFkA"L)o
:Kd\tP^4/FS1O[?gDomfP*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`
P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"K^K5-AI)
imWU>f(t)B@og`eB$;L-Q%7GBFpTJqmYgr]W;ckZmnj#a[d\e@JSQNoS=eHi8,iQB
HADI.KDtqa$%BnZ5P]ZU5OH**rSUl$,c<$`2c9STbMJrm!,^Zo!:KtrZ+?"q?M+j+
D[6:BGS[SV.EVOJe:7&`W.3QH5Pr6_lu&Tu!11AdrnG9h!8[m\P"KbE@s&mk^$6^5
h@KVT-2SX[rrD0L;#^O(n:11`CF#(5T@hsirr=]uL]+]7rrB\<I`CY;q0UUUmCXP>
i*+5JV^M0s;?$X>hP'rLD;bEomfHk$\rZhsoagq<#QFdK(:$L\ao.4KJ+E?4J(o34
qnSQbDPR43Qb>ccgVNmih?C!D8ofDkFW^Opl6#`V&,u&Eq\uL6!9NZGrrBLsJ+nM0
,a+[if\K't!&&YRrO7FZ!5&Ve`p,eaHdk:I]H@+1>0/%f-GG1XgG*a>qPIk;f^*b2
<HE/Kc0hag,l/@c46YDec<A=8P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt
8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD
,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sPd"o'WHCD$eNiE1=I!?,
1EN!)fnrrOEH,nBS+1BA-20LmQL`/]hsuh6rrCN%J,<`+P*Pn`W;ckZmnj#a[d\e@
JK*nJ<VbGQVInpOeA!@A*p[/5DLIeTc7mTFP'\baPP&;9d:pQA6O(a'.Qu%$=5/R1
Sc#5)6$Jr0_Fes68L0Osch-"1WRWH4/cB07O4Q0:D,f,DZ&GG)qC;Zt_m/)gZ-/$g
(/NIfJ(=HJU\+/YqgG6DZSg%O[B9F!IDe(f\`G+pHBpKhl#b==cEWdel^2e*X/j1k
p0X"P('Eg[f'fABiPBUD-gNG`SPT6T3cG#T@]a1*Uln:q.3t'J8kC:k;O&6Y\^>_7
U5l"u0l\dd6ebp9e^WU,8.H)UJVaP:=ZG=6Wp2hFDnuAQceV/=/,j^?<W<'BStH#_
YuL`'ks_;(Q]%D%Ej2^M-As6_[(KM]5qOeQOphp.b9uT,r1/'2S3!#9hdn(2=X9/%
9mkfme,!WBrhGZP,u/DhCrilh1q8-)6_6Q1"]>:"SY&o3o&lqN!:3]MqGAlOrr=J>
0E!k5rrBJflWGMo5P)5HYPqf!rrE"TVuH`h/S1.=Zi:"<]k@?F:&//lk/FEbP`eT`
V'M3q.D`m9lR,VBfed9ud8P(kZ0SOeG1tm0Cl<;e>k+@e,`:dKKmTM*AS6,VG%n&8
?:IsWh+LIYGM08S`srN!llnl>)i>0VYPC6JrA\pQrP$EITRM[iQVZf2I7!r6IiH,R
\#AiODqao+Y1`7E.Fq'9P#@SjE]X2D;!KmrADuQGK94<#2XFX$H`%r-+Lo+qPR_Vf
gY$GFSq6`Vg0I(,[WMuVSF-2#hOVu@hdkWaS"m?TV1"j!=8l=orrE"J]Dhko85@7l
pcV!B;k&u+P=B^_n_Vu>Cn^6TI#NU6pL[_lU*FT![^(5*r1hWRo\jH^f]T'.=X9/%
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OsPL7/,*kVFP
V[EG(p;[2L/=qk$!%@NtrA[mY!4Fin.FqW]^Z>C)G>E/K*CdO$d*]gU<9gL+ChOa=
Rqm8!A`gj)Tkc.R\5d0@/$QUof&:1!<^<sk!$GEI+Gk\9";!jNE%N=LVSYtRp>>6:
!7>r_I?/9<DMZ395<mZQrr>N!HYkA/*N_!V0DWl@YP*(-5AT*SMl.=r+7YZcD)H#Q
HB2t-+gQ2]9`"G5rLTUONqZIr<4HABjq?9Hd`X8Rm<`tk`AKm/0R`h28QlhW<]s-N
L,Q'3BOu=j#.:RHL:+-%!!9-RKkkNg6`:dRRq#)SKUV,+ORGZ0^_i.@hEW_<9E<YP
nk*qOZMspHeGfO5_l!G6mIi$\=[-&=jQ_6eiR<;Mq\<llV'M3q.7keJ8lA5+P*E7l
^[Y=RJ+VWLrrA\&P1EbqhtX5:5Pf<6rrCC$8L6F@-gK=]STk('3g]j'AM%K;oM;PO
!s]Ve(H8>Pj'Q.il9":C,.cXac,jpj\_r;K;H)$iZ@D%MeR/6bl2Lb\'i4gn9E'*_
<W<'BStH#_YuL`'ksUc=Zi:"RoIp/&=oSK13U9ghR@SDnoffM)kipnj(G=;%=SGmX
F`t8O@:oZ$ei9%[(IjRXT<4a\Q0U[2Dp&([cSd@dPP)9^!"utXrr>dh?hrj'XHJg2
8L1,XP"@+EqR->'-XH`PV[fR'!4UWQJ'#BJ_]Pu[!7B#b^R>$Q4^Lj$V>JS3lIYs)
GQ+*nQi>lR/I[SA1;,nX]8[RalC8/rR.g8iRR%PmC%5mh3YE''A<pdi@CXmp"0@gK
AN@W=m>!J>+jMdf7`W\>hu8;@G_6s("3nL8TnUsq(M;IV>5&Bi#?P$u$#Of=9:klJ
[B0S'_'Lf#RGY>i/^%omCE'[G;`fD3X`J6SXme]%f_2docqKuCl$,G!E%8eIrG*@_
pY?d:>HMtK]%rN:GM)XOB[BE^'maT'X'3`k`]C1nS1MUsYSOe;BpN:?0^8p)f3.r7
8`'4Wl(k.,T!SFs..f1k3*H7][Q3YVAG)Sj8"kFs_U&1ccUgm;8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[:[UOUELGQ.Y<(&n:$NWRd7
4WFAtlbE:8YQ"T=E"Z*NP"?psPg9-aeStMqdIg5)1EOa2.t.3e].r\]WP5VA^bFPI
i[Hnppo@DC@d;5((`bOkVdk[7Tk3l*2\Rn+0p^k*f=n^Of[QJ@;/aPN/o0c'Eo6jT
3\,/#Y+1-nhs&g:B%@K1FNYV77-XWQmTh3iW[o5nEK=*7fpRnfRU9S,)gTTKWU?jt
8=f/j!spF?P"?p`jS`Zi!0aD^!7Q]trrCg?<NNKTZMspHeGfO5_l!G6mIi$\8P2Q"
P#@H7,a>*f8L5frj+$'hW;ck^^B=K95BS9RZ>mYL<RcNjhgte-T=U1XFco<APbaWT
p"ueBhNRVjT]1(]Vf`j4CFE]K:p1nV[YNno9hr#8mZZq"mOm,77<\:SIaB1bHF@Ea
E&sRK+&J^.0jH90_iFUgDPJ,Z!7kZia0ZqG8p\F=8L6A]><hX.epm>LQ2^iUCg,"0
lY$2CHI)S[o"Xe@Mch>T,a(_k8L0HtPP&_j::pN+:*!"-!,o0/ZH;sNrr=EPrrAr,
V>gP)fh5Ho0Y3^Y.X`,<[af.d/?RhjY%r\NY%c77(E_*%mm+kXff^:LrE6`KX(0Vj
+d>oX98-.5SZRmoCIgP>?o`CGbY>cGTCJoRNm<hW=ZHS][M`q:TcTL8XY$QtcC"=i
nHgZ3Y^Wjd1TW[3hp_0NE^i-rJ]SXQDQU*RB5?_Fi(Ud8Ko,J('-7#VTk?BLO]P2M
Q9J'&[_-gtYq`5WX)0.3AG)Sj8"kFs_U&1ccW\L>XT&:C4U_8i:)8?HNd=<?P"?p`
Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8K4WFAtlbE:8
YQ"T=E#,atDEhLEl5`@\/8RG;1U7m[a'FsA%r>b9j-Gui%e7dW41h;dD'bD>T<2Jr
?.8fRp-.sE7]#gNX^Cm0e,KFA54AJ?Uo,S)l??7PqU\6g`cXm(^C?4$*g;?A0N@LC
!Fbk89:Zk>7c/gHrL*>5r7l(o\tonUa0X:%)]KC=qP44t3VI#j@BLd/G#S96f!#"S
l2Lb\+*[_b,?"D7f!#"Sl2Lb\+*[_b,>qIAP0*Ssf!#"Sl2Lb\+*[_b,?"D7f!#"S
l2Lb\+*[_b,>qFRZMspHeGfO5_l!G6mIi$\=?3a:AEn!/)Z38I.W/9>7@#_bgKY\W
O]Fi%=E&$YO^*;W[usXP8L0OrP"?rK,a(_k=ZG=6Wp2hFDnuAQceV0./=^YV<HTD^
2rK2Km\H#:A<KM15'd,`C2Mj25,V<Li7g&X`tg\ZE"9>c*NrmeRXDr:eGWS7[WFme
BKi2kaNo$(&%9AkhT+**$$4nb4N#n8qmFg9<;NB:HHp:eLJk#(Z7-sH^[4#i'f^']
VUolm_s@W^#.jB5WN!8Sb#hnQ>=0<8k<6a?5hu+#3QK@38PIQ(,a@BgD#XLRY?Cl*
dsbBtH*M-9T<4a\Q0U[2Dp&([cSd@cPbaI6,q1+&8PW(3YPC6JrA\pQrP$EXbF.Rb
:H'@3,+<gQAlBYu3fI?;nO"<W\L0[d>u/q/=r"]bXEdo-[q=`D:8(r1e\:?V^Bj4<
@(F8rS4S5m,c>L!I5gHKene]rq0uU(/&:e`l=Mo<1EtF3[LY[#m;^'XH&=TTr'Kc`
8PCS1XEp:'$uK!Dd)tZ^%;T.p%;T-(!!P3FAm\_j5>Zi)`p*;%f%!K?(-<Mr[B4;k
[>Y7LAC>((G6'!NCF?4`!6RG4rr>e0J*i8B?ab9Ar_[eKqf<#B!.36IcCpSie[ccF
o\?MpN9_H7aEBA.:Y<".dIqsWSN?O48pW=W8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;
,a)&l5Bff@l9AIYIaJ"IH@8!_DqX]"`gt_();Y"5C>Hmn_WVb12uY;<O8bX<5P+VI
8P8rLG=qgHUq\,u5G#g8agWMFBD`G6Xad6YIlC3UE:2%aL+ZIDZo9?MgZs7'K$k#u
CRXCq#;sbF+jD2sd-?Rro!*,P^"l>Y[sa<u[:73ja:/0Dbq:0A\ZHFp*?75Fdqb>8
kTke=Pt#U"ai8N#h_8HFK$mib\ZPtXF'Jul8<@pSWSM]!ofi90g8_-Kp/pl(f!V5W
k;_Z*#q8q]<]s6mpU7*%Bml:0L:+-sQT<>P!!:CA2;N3Cq1g1.$u:ob<L2Y"rrDh0
h+R(=Z9F7HT[j&*D0)SDHF9iub[[ZkWPZkQ9*&h"k*]gN6OocAX`^82oUYH%?CFK3
J#rYM=0O.M\(.Wm\]*+WjLq8_q2]5AWT7r,nm'cW+sD(:-gPFE-$mo:S+=>cc&5^N
.3t'J8kC:k;j6lir_C**!)=P-rr?uCP5<l3!/Y$grrAqoYPe!$?WOr&lbE)NeA(_S
.5.fqpm(/0qJXOV!7*PKVcb:.8P3,FhtX5:5Pf<6rrCC$8S]lIDu<UX+8n.VJ*66q
P+?0Jepld&L&V.N$U=@*4_lU?Zi:"RoIp/&=oSK13U&!D8L0HsP"?p`Uln:q.3t'J
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k
8L0HsP"?p`Uln:q.:hIgiiB$X!9q6#rr>9+-*4Cl^[Y=RJ+VWLrrA\&P"Kk[8L0P`
j^R,*Hb,P<DYkLtC;l:^O;\3gRTr3aF'9`i3]MIlVUmR;dr/9pR@0"V=HtjKM2>Ul
F554qaN.f>&9Y.^oR<";n11u9e1`q+I^`.qV\[&)^;ea]%UMJ%FUSZ29pB2;@rb>u
*6T8Z@G5OP&:NEdPG_fORgC@'8ofBhJ)XP2rrD;u/,oT3fX7#@f$F7doq21AjaZH_
(:$P18L0I`P"?ps-gK=]STk('3g]j'AKuV3`P4L-FZ_3UqNp:%jASu&%F;>h[A$nk
&l3TkX'bF?hth<W?i,89[?=IPqe)l-!9G"nrrBM^J+pW0gHA(,!%>F6rOIR\!57]$
B#!XJ8Se$$AXO,$>G$mDfbLd:0];gVY/W@14,?I!rr?m.+8hku+84h-rqEA`Z(7$.
Zau/l("bBJMi!L!EZIfCk>Pu&hE],mi=U-V.b@J^I4)&NFWECnXJb(_3q#Ml_`^?U
cs/E"dCW.DFa58^AG)Sj8"kFs_U&1ccW\L>XT&:C4U_8i:)8?HNd=<?P"?p`Uln:q
.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8m+.2po<UDqJX1L!70ImCFkuor)Ik]rAWYakO,./
SRl0,AlmHc14"Z3c/R2`n,BG+00FUsKKJG%,+C=T)lpBLA(l:;_?g$r8pN)[Ci&CM
.c7?K7GbdUl8MkWf+7$/Xi66rWL^+/R.FL,^K#8kqTmVSZXU>-A7<(#jN"a[Y0(U`
]JRg#pC@]\a_1QS`6J.DM17t>VX1IX<N`e=1E*/til_b!mA?2`_"O=02DnX*?W=#j
5@<okh&S)>Z%b',S+__&&T0u8dAuKAN-h*K@3i=f8ppjgP"ADEf$F7doq21AjaZH_
(:)'Yg&D&/?F0Y3VYmXqo4$9B8kC:k;NaTsPiVdHrrA7crrCN';Z?aOm%pehI]\+A
f73&&WIO=/;V"E8+oX=0^/ml%V/*<jqX)J6R(f=U@pU/<RI)S7D#(5dV9t"EqBe'N
/]YiKa)&<I26C@-/plB&nk+\g*f#UFO/1[]1M*uN"?jLkO(mD$O+@Y99Y7KM]KCY8
e8SdE/>NW%f7s,h?H,?:AW4^ALGd"j)n@7;kcai`?XM.'koEP,m#J=(GN."mDfN*'
>[Lu./0sY!o`0._]'1"]of)0MDaWf\GH0eog\Y>.etSHNcE=kT49q5TInRS>V^nc=
8m+;ir__ldqJ`e@!,Q`-ZH;DsnrH-;!7QXoqdZ4\SRdmT,q1+&8P2Q"P#@H7,a>*f
8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6
,q1+&8P2Q"P#@T@2uY;<O8bX<5P+VI>0A9DVKH8"[e2hPR?'kAO%qj'jC:CR!9PAb
p:7><<]j13%#@"kVcb=0p2@'?q.%nR!;6K_r^e>V/Bk3`So2e1S*S/<a*Xe"XcE9:
7G-S8NdZROY%)HC:4c%_P*D-RlWJX'*W82AV`pQOcH8-7ZQck`f!W$`3<Y'lg.]a6
I3fE1I;8c^b9!;U!3d8hnjt,XlY$2CHI)S[o"Xe@McjH\*g?8\WV$+[SUXPRD-:u6
O(4T1BQ.gj/9,Ae7#?QS[usXP8L0OrP"?r^cU@WIcnKH[0lqZ4*]<W`%\pb=Z7E'E
SD9G;CRtfnAS?S=c`4bUF4:-hp*u^5.(,@:f$F7doq21AjaZH_&lYlp8L1,XP"@+E
rrAU^<IaT&VuHb`<Bp=W;U"Ht(TI(FLIY,)(qFh!3lehEH`OQjUC0$t(9tfrOKSO\
rrC!@7fNJ;IP:\GX_T2Y,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL
8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V(A7>
?h/?sqJb_,qgF^:Q;?&7q)\!C3-?nQ^<0#BZ:Q=)S=[(e!%@ImrA[s[!4FoR=_.2t
q+%-.l,(dFZ-QUq.7keJ8lA5+P*D,$,c)cL8L_dXWU9Pke$7`*R$d6X]t_1&./Q0O
SdsL*E06j]U=NHlr0PuQ]&.*A<:jVs[CM8$PNig^I9PB()>Un6)EG]aZ:\$:qUb03
\(#EPXdOG&_kFiYG#8'!/=m(3/816?n"SB9-iBspBY(Br+%u:'r&*/f!g2`0X1^"=
CENAaSJo&:@T0@k8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q
.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq/50rH
fC259iH5P`7@>#2$uOWt=SD]jlS8i@gRVG#Cl-j]g.<a8q`!*0r3>Md!;ce@rr==-
q`!*0r3>Md!;ce@rr==1Z:QLc*A=O*B45?D*:-mE_7A5.Y9+D">j"/;Z+r#AA\oYN
IYucL,a>*f8L5f2P"A8;,a)&g8L0P;l>"D>oNoPl<NRgX[t*VOXq9a+Va:YlT4R>Z
5MOZTYGfjdB[;%*ZE`/%<E34/epmleZL]?2%guMcPiVe0Y&t7n:qFB37h29pm^C:D
IG%ZO;.Ei;&B_o/!\><C3bbW9VGT]"<E1k2]%@*gf!IeJer9Y19dGt!P"?rK,a(_ps4I~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
