%!PS-Adobe-3.0 EPSF-3.0
%%Title: (accack.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 14:05:11 05/29/12
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 0 476 224
%%HiResBoundingBox: 0.0 0.0 476.25 224.25
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
1 pop
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-702">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2012-05-29T14:05:11+08:00</xap:CreateDate>
         <xap:ModifyDate>2012-05-29T14:05:11+08:00</xap:ModifyDate>
         <xap:MetadataDate>2012-05-29T14:05:11+08:00</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:B4E68F1654A9E111BE7586D53BE239AF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:B4E68F1654A9E111BE7586D53BE239AF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:d3f21dd3-ec6f-49de-9c8e-1878a6c550d0</stRef:instanceID>
            <stRef:documentID>uuid:ad22951b-b51b-40e6-b850-a2d83af4e4ad</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 0.0 476.25 224.25 rectclip
q
0.0 0.0 m
476.25 0.0 l
476.25 224.25 l
0.0 224.25 l
h
W
n
q
476.25 0.0 0.0 224.25 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 635
/Height 299
/ImageMatrix [635.0 0.0 0.0 -299.0 0.0 299.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA>!"M;*Ddm8XA:OX[!!3,S!/(=\#RC\A#RgtE$kNdS$P4!^%1Nd](_RJq'+u,r
&el#o'G;)o)]g%A)\aPF-RU8e1,UpH1-7QZ4$,Mc4$,M)%1<OR$P!d[%h]Qg&J5]n
'GM5q(EOA0(`4&1,p"*K*Zc@K,:Frg-n$;k0JG17/2oXP4#]5_4$,Mc4$,Mcs1eUH
#QZFWHNO9m!!3`5!tbS6_uW1)!!*6(!<E3%!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%
!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3"pbA7$o7na!YGM;+VHL55uD&(,&r/h
"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt(8A*e-:F%sA4=A1F>ar`<T7T\Z\66F
FlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1f&lZb7os>ILR4pJa4KMK&HDk6!<NB,
!sAc3#6tG73ro<_&Ha12&d1Kt@<!J)"YtXk'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5
"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]j7>a)UkQ1@`73l?V7":mjn2YdG(u<[
[`6n\p*Vdh=(c`4Q`%=5fB;o.g&MN`!<<05!tbMt!;0<S8L5f2P"A8;,a)&g8L0Or
P"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8lYY@O0@$bin9`P*X^o#eIV7YgA_/eUo'EF
k,Tu3bFI2@il]33EGJhM5L!n>bN_S**SEC)B#_W@bD@hpNG&F)E</o$=P)VE@9H-e
d:KJ+O<?TRCEN2=(/:E&Sn^*g)SM34"ML^I%_A-fY'[$WhO2pMpdn7ZbcBU?^O;*s
!J_9nT#XhaZsWfprrD3sc<&GtB2EH>J1YA3Y5;laf,V37Zjh6C#]A;LV"07(Y?1E;
Cj0?mRddEp[#eoLmDfZW[J)c8IGL[VP+J<5(]OK2J,.%o,<a\hp>oRi`H8B94G$/Y
_79J5bh^Y:`FY98[^WRPq%^9@S#i^Klg>N/Y&W769>6X2LR6CD?&%WKMX7#&CT>Ed
Y,S<;gE-*,p:G*.3!$<m#Y@fim\@&:Z.Crs+I:M'hVoG\rr>sFMtW)/!7F+0ij$(K
=`&@X^E//@*(p[@Xc?mb3h%VGf]J3"ii1PYEo3>@QVm!XS<mQ'8RZS3c$%etEH0_V
]7,d(.4OM1d=;!_rrAQcgRe.Gr*a+0f#ChZ9LX[&Dh%O;\X%?]L339s^Lj_'22o]h
ULUHJ=^ZBS(-?4VjEmN#*].%@'+Zl2Q&NQIDAFf64+k6>)n-+p)oej+^PUQ^o5+'(
n$13m?3?[,2`7bjk:jTOg]>d=\+Ya[!7F+0ijgQ8+&o-Qc)JuHh2?\FqZKgk=P&+,
*&bSUgr'=boSXSm8*l;K*OuBtE,>D5>(8uGY@B),Vk^j;cb#F+ofm-)r?M=Bc7+19
rrD\Prr>$]1E.",^SBH*9QP.,0SVYbW#@17G2s=KHkR^[#k6D*<u]QX:1d5R%Csfi
f`YSRWc+kBXa=i^]u4(@%KHU(,#V@f*7m*gdd)^oi45pAe:u!&"SUUbrm?5l8,iRZ
=#GoamUf30:"WI3j$)b^f!:UTXg$;j\`'^E\YY%(Gf]AYnrfQ&B=Z9B)2>Boi>G_8
j80Sk!7\%U.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`
P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT
8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sPdC4ipb2#ahc>?QlVA8#Q9%QM
H\c>f0K,I?cq4!8PgYem:iBFSFUlJ$b1O`=OE!#XjS2bihFEq>hpo!!.OCK1f+Q0D
aE22=rNr,fg4Y^IPbhc9@J\YI6H4H2B=dh=@p&GnXf[]Q95\lYRJYLF-e=5@XN$,Y
GHF7$ZdX9&XGq`bp,d'KeX&WGCZc!Qh3=`p;<bI[bX^i*fl8jdXC\iOf"J?k['7/V
N]+ag8PGs0;3[n'16eV*Vf_dHVE)lCZHsTg)c_#_l@U$[h-?RG[()[5YJF7_5f:jQ
VVH!ub^3Q"U:3<ip?upulIiS@E@*maPhVG!;.iqLGdN39O$HA$(Ep,dHT+h]rr?Y0
40.ALL?'+]CjV(*(mtQu4DPZ""3cF_hissX4YQ_Bo^(qrFSq)5ke'(&Bs"PKY1cF6
@s="*=',lf8PGs0;3[n'4'8+Fq\B,2e>iqb+4:),J+Y;68lA5+P*D,$,c)cL8L[4V
P"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ
8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk
;Fr-sP`eT`V(2;.XiV"t30qbmO?*)gi2e2eSDW"YrR_&LT&9I'?aCXIYQ"Sc^\JV?
P"K`b\crpm@[tYl?EiAdQ52Kdh@(1:PPQRP[T?[LVpZa=3k$dY3P6.)+_r?dSp$WQ
V:9G*`6Yen<ZUR>b1\B=#d0Z7XO[4f7Y3U'+0up`YQ"Sc^\JUS)]=n$j]ojp3>VIW
%6]aDW2MZQg4B(#8L_p_R*XT<q<e1^aJJbgT=Y%&o@s9FO]k=%V]5>::rY+.1@I]A
\@qRhf%SL6C?I>m=V>j>M,MCXk.U2le?[h7^<6nQ*9TR"@BmTJ!4C6H:2fL=Id@"6
cYreO0A2<_fDbiBhu&A[8L6@KT3$>f#]R]$'Q5;D23p)/P;;,8,p2hj5BZu+kI:Hk
,.*M):2fL=Id@"6cYreO0A2<_fDbiBhu&A[8L5P#XjtK:">uoE5=A"PA<KMV8L0Hs
P!XUt'tCO:LCQ]omSWk!2t-_NqiXj!O?VEYqu6YIroCfJNVi_UJc=_pSKn`Sj*q".
i.&9j[c;i:!8r@;,pu7dmC;&gp`JosmC;&gp`Joq8^]m$DE%%`#Q'\]DE%%`#Q'Z^
FHA]@NVi_UJc=`EgPu+1!.k.1Pas'1[c;i:!8r@;0=KnirrCu,\KrUp"7<VU^\Ao=
9C97H^\Ao=8P.>qqee@]rWi=_JHpf^U.S]:P"A8;,a)&g8L0OrP"?rK,a(_k8L0Hs
P"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g
8L0OrP"?rK,a(_k8L0HsP"?p`kB,YUkOgh<#NZ0smKPQdOnc$n<u3FKAEHePJbE<%
/L.b^d;^PsC:'.gP"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8of!6lVI>*5dU<I
<LB0?[]g'\q"5Z_D7]#tG6D[ld9k6!QN$rOj9hJJ4aC%bXduT"]0mM1<;,&'qFh2E
cbJcG@(E])h79Z/oNppS/:K<p*XCqRE[4=L6cSH;V[g1I<IN/qVHoU0'`h.?EG9B%
`98T&&%A*0fCZ^K"%.^SVXcVE!4aDqchaaTm-(r[+4"^Bb3H:@\;&YY^4:Is+--RO
..s8E/B,<i(E@22fKDkGkI'&V_4W@?_@(h!@Z&ub72KI`.^m_$4[3r,E3@b$[Q@=K
7_0=[\5Y>eBEfutq$ksIln<Fp)[`b9Mh(ZC:Lfp1gY3['dj="s2%Y4ue%m=TVs>B^
5Rb]4pKh_/]c,^*cA_EhpPXG_Tteb57'ZTrU[%jZm9@@alu<IY2a;:nCt$AM&YIM;
[>Yl.H`X4/b3n-tBe@t&+eV++_)ls<&AtCG[(@B7LUE1)[hb.c^4)E\<0W"SXhEB;
Me_qV?#>tsV]GgkX)W33[I"!kTK#TVK_4r'N3(_bCY\9+dZsmdWinmm+o^n7iooRn
$?#'p5,#QLm!"eS)X:)BY1`%Pd1PeaKfck0)ltsprC7)Mn(p^-f2g%!f+Tn`[[hc%
8P&j]Dq6jJls&4ioXu^ac1[(o9nfi\B`;_amNNf%I:C-pVce.Cf(Ll^3iHhb^5"G'
W,6e`jOi:nU%(UeV.*e?\_ETcg7$X$croQO*Ed<Ql!6J&#GU.ePVp;&3;<BNY:_o-
CmPr#pX`OB,c#VVgjRGY[h4TkF0DkM%VWo[:UcO_>RHHT=g9^_D&$2jjm6J*XjoS[
2E&UbgtPI,[\lg28GFE.d5l[mXhni[V5DRSS4ni.R-'Uk[EoVK9<H`&\(uDUDenXC
chFZN(6,1R*'p!WPgZJq-`;nFP>/JhlYi(Jdqb>jjOoSu89KoYBE?jPheJdb3&gL@
g!$'bfjuaYk%aaFMoNR2i-Ps1Z)>HPht:m,hTITj/D/!#Q<<ktf443Vk?GiXL2>hr
nQN;-=-%F)WV/3QH`T'lr>t^uk=7Rs4N+%mgo[#p5PjJN9&$98rrB3";FH[>,q1+&
8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a))-)]=n$j]ojp3>VIW
%6]aDW2MZQg4B(#909$V[m-k5+?q86:N/%m`/hlNUno?"8L[4VP"JVD,a+CT8L1,X
P"@)o,a(bt8L0IhD"IMZT.g&&X3*Y(5H\/fTDFYM8kNC_2R\sc_6%C;31'[UjTW3&
3R&%N[>1,ZmAe=]ickoZf[cJXihMfI;e*Xd<F&mrZjE$UdWFpta-+-eHA2Vo8\UXr
Y59thF"u?PK8Z>[$n^1/#?gH:8jt1$jZ;j&qWXE6a5D(iR>BJ!RTL"OJ4AcTP4+.`
[QP_65PI5Irr?HorrCp:Pj-=gZTTD35PI)Err?HorrCp:>\a,QD$M^E)VVTb<K-dE
Hm.q#["$Ip:$G8L8MQt$HIkabn!B3XicR:dMVB'09hfa8BKc$6G+=QN,s>e8.l5TL
_uB^XYeTlAhu2t9dJCc\!-<+op($!YmR^0;lt&jK=Q%1U9:Y#B%l>'aeE8]lD7+:9
a'D]1293P9Z&Jn^.RBV+S*7VcjC@)*:!Boo;i^_1%6?J8ADJE+*(Jf.B<>h*A9=lW
kdnC/afMrh[CA2_T:k_]SJps=p4SZf;O&+l;H##K[/PRJb.s:W:Zq`X>bn0P,a(bt
8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD
,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`VQMOSaN;Z&bld=A
$<fr=BqjT_cIHW/`l;RM3EIs4c:,IDK26!j.Oko-!&gL!C=5^P8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.>__]VLCpoaHrd](Oqs)]h'K6a4"sb^Wo(#JDQiMb8kXR
CEEKUUuplHnKD%,,r"uF1_]k.rq-2ZHsQ_krq.P";]e`J0)ko2rr@@ORs\N@EW5VV
P#EGs^+TEc3<&u)?CQ=Jrc.r1,a)(J9ti7[!''uYH=!(g?2ejCod#]!+&0I%rr>%Y
!.)`NR!?NJF[FX``_[RfVqJ<qq-6PF<O&iE]-f)*1McOJ'g:8tM5m%hIF\Gi8P-TR
O!!tSpS[Z<ipZK"pSfF$R/1[iGPT;VdVE%%6[P4ae<3Bq8Im$iN*7<eP@J=(VO,tG
aD4u,a`0EGW5t_`VVdAC/ue]Ub1mub4Ik(2.3_>5T=)7Cg-3XPWkE9(2K'8@pOB=+
P+-/2K9_j_Kikf:el'A.K(9&:!TI!TA<=(%Z*PqQYq9P;b\gi!&igkS77g*C=/.tb
.dM*EZ7<<J**[Q%HX-8(EZWS<.g[Xr,a(bt8L0I`P"?pq,a(_J8L0Hk;PekD_oL)9
9RFNW[[5jjOoR(B%>cHr.dE^oe#gB`;k6pJ?tC-a=P#C>QJ-(u/KrAj%=a7-=l":u
;s?4k.[hrsNIRhk)KtOdrEKbNa,adVf(qaIX!QGA$Er:M]XpP8m<S725=hA-WkYb^
QIIN"gT^)ufuV)']t[53]g%a]\,B9SQ9*T-8[6rXb1plE*6bI3BKh.C'=WTVUo0qY
7^`ZVg=r9.%3GVKGu@4+8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"
P#@H7,a@J6i:c@,3<TTK#79f&2AhSOXVFnR/EC@(;W`Q(>D4XR\2;TQ-g,6OP*D,$
,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`
V(.kBDo^#D]XTq4?0Zr)1^^MPKDtpfP-(hRSG/QQVUA$FaoDOrI@CZ0pQUp+Uln:u
982Z>rrA$joc/P3`X'NU*VOm^5+ML/DUr<i2;KO@T.BcSGPKTL%le]/L\;r[rm@r/
GGcML^2Ua^lM[>XCWcYWZ);/kU_aG6nbo]LCk#T9,E\$V>n=rtXgZ\o9.[4)>3;DB
#I5C7"s,("XD1m<D>H,pTr\p[24t):nXUUDr+%md?97ClbC(a*RJeZRjE_oCR,bdC
am$RH@/=5<oXqk%:)36u&/?#R5*kPr[=+Tth:q!I7do2o2gM3qqBPP^l$16%GH<<.
H%46h#L`TQMA&N$ErQ,Hl&'9R/H5^FQ[68+pI=W<XVS=GDV":gZLDiilP4!\gKG*L
mM`J-[.YptkJ"3(em"M+k/46;Br0^#h>q&:cU63Rrr>YRV.'6#!99!T#OZ?pnN(h?
$[-#\.r<Ed7]3fg<`2lf?Wqq_rrARW:<Fi):L2hTfq]]g^<N,FbKrGOAUf\iCDQ;d
/t_^9mZ/s7Vk8k=MRl;PV]s?rEU0dna`Z/hTrra'GIRrDHF26\Jf4V\9PAROV2i%i
fLNS4@XH&YLlt=Y8L0Hk;Fr-sP`h#l18Z!AE+9j1S6uka.GEptU!+\)4;"M@.<L_E
,s:U.?g@F^<`7-pCE,]5CWq<N1,RMdrc<4Sqh.2XJ+p+5[BB?k+,ES=YP28q"I/LB
o:)i]!8JasA,cPB0DWlDJ*mmJ!&=KRhR[W#^YNh`'(kMgf)<E24O<rflTb+LJ!g69
mn<Y$FeAPa5KnWOY+*nDpKR@p]fQ/nFh_le:G`"N3P*Q8_B7o)qpPKESD@iWi=GN%
rTg?Qli#E5_(SQuh/D'];p>7Ac>Kug!-!_hO8eddk;QQD!4YDoa8Z-cl+K.X!-Q%q
9@L*=>PA8bo0;i9XT&:U+oZ!O!51&]c.7C4&H;_brrCoeDbe('Dqkutli#E5_'M4i
r9!<0pBZ89rrDL\rc<4Sqh.2XJ+p+8e$&LMpB8/jrr@2VE(Nh]rr>'jci(^&k!/ak
rrASFBE$j#o,mqsVY'3Qf)<E<:;>V'g_*Q0rrC>^Zi:#EL\[#1oY9QJ=oSK36i>")
!.*nC3r]2&^MlipYP28q"I/LBo:)i]!8JasA,cPB0DWlDJ*mmJ!&=KRhR[W#^YNh`
'(kMgf)<E24O<rflTb+LJ!g69mn<Y$FeAPa5KnWOY+*nDpKR@p]fQ/nFh_le:G`"N
3P*Q8_B7o)qpPKESD@iWi=GN%rTg?Qli#E5_(SQuh/D'];p>7Ac>Kug!-!_hO8edd
k;QQD!4YDoa8Z-cl+K.X!-Q%q9@L*=>PA8bpif^;!#\"+0RD#hV9He7?<lb)/MXZ@
e.:dGNi]4[^]$;:?2jomAUjEm?hjlm2e;PRXiRX'Qed?)]!a<G@nVGZ!+QpPI[K(e
%i_>-@F:W84$>-`fl_Y1!S_*OgEYWS;rXGEm!X*X!4eBp!8A6<j:_Ima(+GMrQMJE
fW5#P+MGhh?V^V$\Fok%RM,Rce%b<6J*)EKpil^!+'nmHmU^nA`F&ED^[]tQn,EB/
/,oUX.fTLi06-rWe%b<6J*)F!Ab>HgO'h^V,sE@L!05+OJ,>X@rNTH'5qi.Z5.ggp
grfWsm>A[L$f$5Co^D[<?hpBKfmPs]j4F9D8Pb+kj0A:7roR;^!,P[8!0BkR!$.-'
rrDdK^\_KDr.=YbfmPs]j4F9D9D2^frrBS%rrAK#;rQX/m!X*X!4eBp!8A6<j:_Im
a(+GMrQMJEfW5#P+MGhh?V^V$\Fok%RM,Rce%b<6J*)EKpil^!+'nmHmU^nA`F&ED
^[]tQn,EB//,oUX.fTLi06-rWe%b<6J*)F!Ab>HgO'h^V,sE@L!05+OJ,>X@rNTH'
5qi.Z5.ggpgrfWsm>A[L$f$5Co^D[<?hpBKfmPs]j4F9D8Pb+kj0A:7roR;^!,P[8
!0BkR!$.-'rrDdK^\_KDr.=YbfmPs]j4F9D9D2^frrBS%rrAK#;rQX/m!X*X!4eBp
!8A6<j:_Ima(+GMrQMJEfW5#P+MGhh?V^V$\Fok%RM,Rce%b<6J*)EKpil^!+'nmH
mU^nA`F&ED^[]tQn,EB//,oUX.fTLi06-rWe%b<6J*)F!Ab>HgO'h^V,sE@L!05+O
J,>X@rNTH'5qi.Z5.ggpgrfWsm>A[L$f$5Co^D[<?hpBKfmPs]j4F9D8Pb+kj0A:7
roR;^!,P[8!0BkR!$.-'rrDdK^\_KDr.=YbfmPs]j4F9D9D2^frrBS%rrAK#;rQX/
m!X*X!4eBp!8A6<j:_Ima(+GMrQMJEfW5#P+MGhh?V^V$\Fok%RM,Rce%b<6J*)EK
pil^!+'nmHmU^nA`F&EEdJZW9!#Qe]qQ=^)=]JIf`n0Jp79^.*m:ZXQZlQr+n6V[_
0;j<THN*ui#Ql<IA)DGM+g/r,@r6ZP9p`c\CcB#IbIU;d5Nat.rrBPrr5\g;H=-95
XT&:U+oZ!O!538lr60&R;s^Zb<;N[R>ue!9I;]*ICS81Vi,g5ZXa5-hl[IcTSnJ%D
FeAPa5KnWOV>gNU]$L>l+6Gfbf1kM]qlTaI?CcSWhmar0RK!8Wh.Q`G&+^nAl$pur
Zi:#EL\[#1p!\50rp,$kQ`"3Y\*aPOk'uPQ=oSK36i>")!.&#DS#lVig`cZ,rrB`S
hOT/-hmausfDD]IJkC<\q9@K?mL]Bu1&h71Qi-"35PGG5R/[0T>rSZgm^MTjH?K5Q
Ic-B\BDuspTDO:+b^]A`rr>'jci(^&k!/ap:$L:,Xo!]VSU\6.\0Ru?rrASFBE$j#
o,mqqJ'Mr<rr@"nq2bOJds?09l[IcYVdJl$mKk?)J*/anrrBPrr5\g;H=-95XT&:U
+oZ!O!53L2SU\6.\0^CkqlTaI8pR')c.7C4&H;_brrCoBr9!<0pBZ89rrDLn2lC$N
\*aQKFoL]Ui0'[Erc<4Sqh.2XJ+of>!'.X:rPBZ=5Ps&,l.>g7qgr.FJ%FOI,c?gN
lePJe'&"tV("Zr(cJ%djk#Or0DI+9k@pJlC6V`Er3*l5a'fgNi@lS9?%Ah;N8&8'@
qRP)FTU#hmGB^Rr3dqAacfq'(HF;,S0n.R-4\#F3mls6ZIB,s3h=NYs3LJRD,:TY&
g<lgZOs3Lr8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL
8L[4VP"JVD,a+\?Yk,+\LJZ17Y)?MOCU'AqF`%_"/#]`-BsZP&RIT\#';8msi:NO5
%+`u\`2:*mQauL&Xc6r]F`ig$`-g,-P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK
,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPbjXo(K%*/k4K4Sb]gfP(94Do^!5;K
7d/VF;l,.L5<<miW?eB+U>]C/L2"_=)f)&2/?tK[9s9#LZ0la7C/8Mn3*HV6P*D,$
,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`
V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,X
P"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL
8L[4VP"JVD,a+CT8L1,XP"@)o.f$NeRY.Xp9;BP4nPm6YPPb@[JH"VolD1`"h37a9
!.b(1:Fk`EZ#d1S*aE!7,Bs[P?TU3mmuTnadSnMgYT<Cp*L9o&o.+V?DX0S?)aNP-
m5h+/=`IYOG.TN6b@b6;5)G%.VLT_#KTu*8/pZ>V`EoOd\[2_21q.Q>k\FKq)gi[+
S,TYPf)G_Efp.>0((i,Pdh$UAk>*/@.GdX;U[(**Y/d6(!RAk!2%TmbDJL6@Uk?5*
$;LB=N:pIcF"8f;9obOT"Md-7$.)1j&l[.&\c//OhpdBJW-C2IGG6-$LI3S>r>e(l
8!4o8er'%gm`IF+/"uiFlU+l.E,4dDIjOK,g6/%i--k!4NON.pbLgR_;6JSg4k@@$
p&VXaC/\cr/8HfFVIie76X9LV\(]CMGpeDdIfu#)Up+k<YZ$bea3%od5LTU#n(M-W
#asDpIN#0>on56'XePMrlT2/!Kr/!iXJ^;nF9UnXkRpu"lOGp5Zt7kc!9[NWBFS_c
36;aA3ZeN3O0+XPp4p6QZDoHm9sDIj?!D/,D35crO!Kt^kq!qP_+1J)?Ya9>_d-C<
l6#X[IWo]FBC4A:^\A?-8PZ9Y/+)"S^\A?-9C:Cs^\A?-8PZ9X^+I[9Xl$*0/gpNa
.g[Xr,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL
8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q
.7keJ8lA5+P*D,$,c)cL8L^Xg^R/s4a5ea+<gQebNo0/`aQ8g=.=#'!SIb+Rj^^Fr
mCqU`U!4i@^Hs#;k&,rk[r]9!;GraDjhIX'RVp)V7:MTiEiLIl?J>qL-jLhj!o<E,
iBoPujC_]jMsb##l#o4kDlh+:_W'ONGI3n]##;m*?;d#Pj^n'Sh2jCl^MCaS4(cJ6
gKRK!FZ.h<%3rX0&9O8hMf(^)_M;5BCL"[6[C!?$ffl;.E+'h\7.Vou;O!F,@J!4^
m&K$+/:/q]ceKRQR0A;hCRo73,L[Qo:oO6$AJjd7f5%I]['lH0lFTY>Y1A@_pUQq1
=HM2+>EY5HV`LuKPfu8d?'*H_Hf&J:>73l2os1c:GFg^;TKh`2Xj_uLXh/8$=Z-`a
[Pl9RE'%N48,"Tl8lATVrfrU`F^7bcfJ71VZts.Z/ShNGh50Q$QGh)nGgR$PTF@9W
:T^iV]Tu*!l]CgD$uZ!kbsuoY.8!3Q1:f)5?$R4#+gpH;Bf4XL#]3n.k_>Fe97u"+
T'>coYLeR^AMsQl[[0h+f_"L,n$JPZme8g4n648)Uo+^;X%'Z@O6c3C@:^3:g@Eq%
QS^^`\?[Hd\,[nu#H2aIVsB;&;gH+KFfqEu!J")'G-bt&XljX.?-k\r3[m[!;i?^`
m5@t0DVDS/*VX#ugTn<8)ZcP$c!cU+,T%c;gQ^-NUo!0%9dr\,FRXa;5H'(sb.+G/
I1#uSW.4*T\<<)>8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q
.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P+#ZU`\UE]a5h9`_WgkZ7hWK+QY%qbU<75Q
N%GH]XS"_G3Q.'(&@SoYqaD[67b7lY2]h"9*\/kEI]q5bAf_Mdm!?\*SSMQ`f$VBY
[r?S*j&,_P;k2^@NEuPa@EcHSo%RZRoS^U[gtq_/cJ>EAUs?<p//FOa@lRtT\;Q`&
0ek?UHZej^=T']AZ,Xhtel_*<A,SWfk8>U*C#fkUB)_i[rrDcMra_1^9D\Yg8#$LU
*8Ga9G6U07aEs:"Z&[WDhFa,*qWmg$XHqJ!Ot"*6"W./tjIX5:Y!3!!>ImIGWV!mM
gLEks%.)pXo9CA`of&XfAqAF9KhdF^H<[I8(V/YL.4h;FkNq*f5Q9F;!6gW)S,B2a
!8E#!P"KH2;QbJnr_rgsmD&S@0A4+_J,QkV!1>+0S>@^um,-nhrnIGQb`_por29Pp
gOK$^8nlFGY("Xp;uZjb^\l2,ftY[ZrO;e,R3\Z"V(1ZphrR*%g]%8tP5UmJVuHbO
J,,7"EU2ob[Pl_pR35Bd4*E5D8J</\l9Tp9ZBMl6.qifdAlcs^ZiQ#F?R*Rq:@LBe
>9C2dPlCa\DuTem9D3T#TDnn.rrD1Q.DY5@=KoA34dY&,9>t]_*LQPd_>aLg//<fu
k64e]rGq..D4<RhYiIh2XfSt/L:,UC[C!X7Q:/@ZQVEUiBZm+Efceqs@#)#;aDgVn
Ef]Q,EK0Za6`I"M@&fmEKr8usclE+<,UB6)*?OQ`GN@5@D7A*Eo#h+u2o(ur>/4A'
BB(C>gtSi?bka4S4AUT_V.&[-=Z>u2m:W6KCNJmGV`*/4j)[-E@1=qlUjSkADbLUR
BJ0>k!*>hSm3JR\:\kh+!)W[qeWk8W`2M4oT'0r\Os4JdkMiThV'M3q.7keJ8lA5+
P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0(R>HPrS
VDu!0A")".64"2/8P?eOX"A1LCJ2t(#7q9(J=]`l)!^YZkT)=RACG>"0#t)\A_iC;
r+8tHChm>@:As&#%c$d0?g@f8XK%UIY,7(4."A4Tk?2N%91tg_USMc4:!"j=OYJnV
8GK'!Q+>1M>RQoaGQpf4&gtRcMi)N>qU_$JXmA%b['e6PhAZ8nr.d=>>8f3)\ee1'
Q"JdXhaT3nCi2]60Y-2JN*s(2ncu2GJj;n'6DF?-XDY;ZJ<mPY(_YgHdB@Ra"jPud
obZ\!Z`.<"<C+7%T#u2grM'!Em/aT+C%Oh^JfF?=mA4W(^9*lOfl^F]K:RX:>TW&`
`oYgcV#?mN[DAJ,XY'Z$,s?QI2`[<"FUEjdQ85J>ZJCLpZHHG6Ch8YZ-8dgcYd!^[
qsYU&m(&hi!+l%.f%Bla077:jNHQU5HZUiWmBIf\4aKbd_!=#)F02mpS=EVA3efW@
?"&(#N,aK>>sQ]knK:VM$lmTp=(PhLVcckK__Cf:)YQ@pSWgXn@_JVWjl9FOC^p\!
:KiqAp[npIN9m$SgtYTWhel((n/g33F#Q"dA$tZY(@G]Eg#[-p(2$dBN6H&gASe7@
SAmg*QIbDP8X;KH`&-n*J;HimP"UnRbNlTYq^fh%osh=KehQR%]NSQ7bhUu#H9oI'
m1.n*R7+fgFZXHA;eBTD/Z/pIiYoW:f!pWm6^pmo7!k`<3=q@FXX2.jQ.F37`kNhQ
,\?qSLK,&<(bGPKUePf%L2D\d^li8)+SC+h?B^Y$g$.L'^;`7iq]1hQWO>Ykc!i29
k*Y3#P#KgVF.1+8]S<heQT1?4%S81;V_bJ_eEPfTA(FC(Xd9:7WU-b=M]#hOQu(Pa
#qp2E3!5B;9!Tu44]^]+k8V!B7Qk1Ll@"qV^!6Onc&oQ6$1<tJM'^L/<Rn5:/<$[!
WOk%_c>@E+CN7?MmG--)G,Egk^3dXup1A_`F"s'F=]:&'/@"TI]<WAeN$d-+Mg"Q!
=EaRR9R.pIJk75NP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CIID1\1
aITT6*10,oo=q$7jnV586i0OU&,qpm')e[,!!iN(9Dsa$VJFoZmU6S1Jdd<sk^Lt[
!/(:OV>eEJBn*u!!7LlI@a&^j477PR/7Yi]!rB_:bm.)jZ6Z6CrrDF>pcnU^lq@&=
r#bkjp*p]>Uo+.lm4\6!qHrS^p6Y\!r@djqiGE2I;B-.*BQKS&L:F`MOls+MaU;m*
h-4+lR2_S#,Yo$c;dm3ONhL>u')O/Y[ki4;XPR-*n*;(+=oG2s!!iN(9DsbY[g)Mq
J4pd>;7%DA?^&&b)hP[N.DPaQrX]!pq\&k(rr<<(!)*9JKW*R>.]q:Si5RGe3QFAb
e<5uc+51)kJ+UM.QgHI$5PeaR<$b&bYLN2g2q6ToA<#>U-9Mo>U\d^`&,qpm')e[,
!!iN(9Dsa$V(!kEUEj(FgU*,/ep%2jGb_8U*&IH[rrB$5^64_D8L1,XP"@)o,a(bt
8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"J5E
'[a\C?tZG0A)Kbcgpm0S,a(bt8L0I`TIR(P3p*dS]EYpaOrHJqiOMZ.PbaI6,q1+&
8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`V-cI`,Q;&7
.gj$freY:2rhq*?,$-PB3h&0/r?IM#R+R^/9m)'Df8&/DK&*a#hVRh7"(fffm+@RB
mb>C_6X&'bDL7EWGj^[!qX+/DAR:)<\YF+b?I>GtE/BG'8P)Z/e7DL+CYEf57Rp9`
^"%%Br?&>sm]1084]lDMed%?s:9QkI1&fX65c1_jm+j46g+J7GDeLrkp,r*"BcQJ*
Otb/RrLq$:;n-`gEd#[D1o.%<oQnt@?YI&+f/!ViQF+uM.UTlC]6kLtB-(!O.CZI.
V_-Gg)gb=UUrPC6<q_9_m(pH3oLJ&3h)p;##te)oO3q-#IU0kYDQ2:`c#&l-HX'h-
A@_)Fp9a(sIJseW;dW_KID&CWD7B0fDib9H`M'HD&(Y6kBP,8F:QqacV3If&4O'5T
]-GbgheTL(;Co6/%=#X)c2uSKlES(j[7bj?_S'XJ+)Er:54[U=f3NMY3*5<)MY@o@
[XOW*Se'([2PrDggjnX;Q.K/OJ7G](r;B"W,>(RRaq%T6jn-;=jGYm<95eTuIb)P=
p/b;gJI[IBL3mAD?N.F!<`KsAmn2:hF"?qrmC'?,3.u/F:#&uD4>)6@bZZR#S$$=G
>^"W;3!VS@1_V/N;H&<We^%:-*;46RMHX4uV:Bluf)'7TKY(.AmF.sO/D&^GN7!s;
[Q`='j4.SO[T;F(mq8b.B@G\;8brG-k,u9l1>>OIDDdZ;Vd/Fs":&g`pO7:;,%U2+
Spf2_-dbS$^?8N$5]r#'%s<)S4cHU'P@<+]VWNEsj+Ysd]46&H>m#'J"S^:EQ/0p.
Gki2Y`2Vh+Y=Zu]H]5RNg)IDiHR$[*FF&GaBD(0^!)h@?ZatA.BD(0^!)h@AP*D,$
,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq,a(_J8L0Hk;Fr-sP`eT`
V'M3q.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`P"?pq
,a(_J8L0Hk;Fr-sP`eT`V'M3q.7b>a^<BZ`Jm;fq*"[IlVWU:/S-j[^Q'ZZ"of;YT
1:FaD%ophrAc/jIcRh6U%6eOA;lBV7]o6H=V]C`$StRdWZ-K[hp4mL0!"Rt0hOT/-
hmb!J<&eAXa<[\.\o7AHDbTHV5-2A4TXEb/qPL<)g`K^XCF@AFrrC;IIt'-O!-1(a
qp`3l:;>V'g_08FrRUq`,s8+'eYi04rrDd<PQ(Wr9&;3mZOX02SaL<\:"Qu>8cE#H
4l7\o#H(qs\*aQKFoL]Ui0'U;Z/gB"J'W'48M@@0Id;L0DuN=FH?K5QIc-Qj?gbDk
#q>"P`5s$,-<`:I`rPODI6=\($ItL[fZ.%O!Q#.[JYui[28FpAbLl6ZFpY:U<A`L_
7\nc)L6;$@X'V?H]&1"CVp1k5/)&jb:K=/Bnf)3<=`)U]#`iQ`Z'I?IF^*bp<hJ9m
rrCi7:]C#>YLB]L>PA963r]2&^Mlb?.K9B*C&RtErQ+("!:NgW01^R_bcdtlg[Anr
qX%j^0?A*Ji9m_Vh#0NW"-N=1UXQF@>PA963r]2&^Mlb?4dhpL>H+"b%'e?kk!%O9
A#]tp5Bb'CToLb^c)(]6c[nC6niq93kI:Hk,d$]t;b]0UlGHkI10st`keAJglp!Ci
YPND@l[IcTRTMG]TZ0.rguABeTkNqf"arcnJB2C/`!%ENUm,"l/SKQM%r("I1,SbT
,c)c?G#g4UCN;&1UAk4f*oPIq&lDP)P"\D[/ocD!,b`\NNKOUg[?cQ7ENR((I.i_d
P,+8%W6OJ,_fu4$Z`G/JNsu_#,a(_F.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7
,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8l0B4\aHH#
BmUu9J:^rFoON-4<'ITt>F3\tL-5S*Z2!e?g?3O5)hVA(;_\i_g<@1tD-5*+Y8YGk
[+VkRZY%tj:!U#UJXs)AUWFfDaY$)%ekBme;]Y[8?Mo35&SU"-d;p7ak-VEQR\gB4
rpmK]YC3Iu]@VIlB;ds?gtTa!2RdY]Q!J<I-XJXia<`mh,a(bt8L0I`P"?pq,a(_J
8L0Hk;Fr-sP`eT`V'M3q.7keJ8lA5+P*D,$,c7V^Qo^4pNI8I_Wiah9m;6JY[GNcS
qj""K=Es0-/qP#.>ZT0[6h?-VLfu5V8L0Hk;Fr-sRXHh=bdo?RZ+7@)<X9<)Wr&f/
r>$o@[KUp+f)G`U4*>/iM).Al2d5N;b/ZIl.4O@BZus-drB!0MF:OF.DAchG]AKT:
]:6:ZXs%;)cHl$SrrC@<5Pb<Zqs_92,aA5U:L3;"0<!cW##3`OflPt\FM*@s/i(l.
+kl_6oae&e>//'0DT;?%Pg#)-'9dq2Di`b2428+*lnCW(F<6isnh>%JWnSM"lN:b9
>\2AopH)=9[2W<foKXL`,rn+<RPM-3eX'2dah57Q#0)EX3&lOl\8]N>&UH$^4"h>'
EUiKKa#q6ACG'#cCY\'5#`cuo>oO;(ds:U9Z2XgL)JudQps\(LHT-?&S6T6;.MYk.
f!I[O&-28-.At\r[keC)nMmtH$eg&flsOP1[s3_akl+2Rf-dKD<c:X1K/cuUl=4!&
Wn2Y[h&Bq!J@irMCh2R'QVjM$K#TmWlpdY#fT*pMa6:%#f6Y6cA)[TnZ1g3[frhaO
Jac6,)#jT<J)`\p+hq+KS,j`l4-AS%+`Mp;]$JrTT!s]Keo?I;c)VgBOcJuB_#"Cd
k1JZ%PMLT^bg6-pd5n.II7ld;]Sr;H.q@rciIJJS#.e$^\VWmRPl4PWli&XkF)&Uh
rFUVVjK_&N!76R7^XdC2]@+!kZLHOc;T<Sq6b\g:Zdo6UHPdKTn`d$H[BKYX!:l0R
7$OL18L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTs
PbaI6,q1+&8P2Q"P#@H7,a>*f8L64\lMWJr*EBX-[I#[,1C(fd&)3X"roI5Vrr@)A
PP&F`?ZW@NbqCBg!QHDM@1W?Oo`"pQJ"0D8GP:2jrrBT0r]f2)mEUjo!-5.<J%8JW
!1J=#q-W;!^ZM.ar`Ap7,r^<kFH?<a?fV+,Iba00pF<quqiri1VpkYGQ2Ybrrb;$)
!9J^#;H%f5k=GUQ\Q/Vngm@EROoGE%X8IIX;Z?`cI6[O7k7k\nT25Gfq8FX=Ir9@h
qitOKrQ0NDko]XL^W65:0DVNprrA>`ED-:Fo`"pQJ"0D8GP:2jrrBT0r]f2)mEUjo
!-5.<J%8JW!1J=#q-W;!^ZM.ar`Ap7,r^<kFH?<a?fV+,Iba00pF<quqiri1VpkYG
Q2Ybrrb;$)!9J^#;H%f5k=GUQ\Q/Vngm@EROoGE%X8IIX;Z?`cI6[O7k7k\nT25Gf
q8FX=Ir9@hqitOKrQ0NDko]XL^W65:0DVNprrA>`ED-:Fo`"pQJ"0D8GP:2jrrBT0
r]f2)mEUjo!-5.<J%8JW!1J=#q-W;!^ZM.ar`Ap7,r^<kFH?<a?fV+,Iba00pF<qu
qiri1VpkYGQ2Ybrrb;$)!9J^#;H%f5k=GUQ\Q/Vngm@EROoGE%X8IIX;Z?`cI6[O7
k7k\nT25Gfq8FX=Ir9@hqitOKrQ0NDko]XL^W65:0DVNprrA>`ED-:Fo`"pQJ"0D8
Q./%<O4A-=eF(/ek??SCaKh*lnS'lh(jI+K)omgXr]B"9J'qkWgF)mLG>nMA'4!OQ
2Vbl"/u2b3o3=/g3SM%NN?qU)!6.YBrr=T&rr=pU.GOk&a*[)iqFltIAH)XU?hj)<
:&b2bOoGDtTC5mSprQtE!9Jplk-Zl?A?c(6o"ske>*>Gkr-,lPrrAk9rrBK'pSIli
Nq_&\oU-fpao:sirrA"D+9#AJrbGF3!6.YBrr=T&rr=pU.I)A_rFkD?]fOAp17PQ%
3A-'gf+%Nl>1j%-jc(d#p?,!H!4c,/5MWJ(#Pbsrr=]LiK#cYQrr>pi35Hpa5\SLE
[(kaq:]=Gk`?dHmDKLs:Q!`SMaaW%0+878"a8;,Tq5;^A!1!P'9E&YtrrD/1S5N:0
p?,!H!4c,/5MVUmcB8,,Ei]+f\PiG-RXIEr?fr-<k+>HK=8Bf]2h,^eO8G2Lj8I)K
h!#pT._j%$PqVs2e,KE5rc(U1C%VE*jaWdu;g7ru8H/\#<W55<QgN(\rr@)?r-u7T
rrAL95P\[L'Yie&:]=Gk`?dHmDKLs:Q!`SMaaW%0+878"a8;,Tq5;^A!1!P'9E&Yt
rrD/1S5N:0p?,!H!4c,/5MVUmcB8,,Ei]+f\PiG-RXIEr?fr-<k+>HK=8Bf]2h,^e
O8G2Lj8I)Kh!#pT._j%$PqVs2e,KE5rc(U1C%VE*jaWdu;g7ru8H/\#<W55<QgN(\
rr@)?r-u7TrrAL95P\[L'Yie&:]=Gk`?dHmDKLs:Q!`SMaaW%0+878"a8;,Tq5;^A
!1!P'9E&YtrrD/1S5N:0p?,!H!4c,/5MVUmcB8,,Ei]+f\PiG-RXIEr?fr-<k+>HK
=8Bf]2h,^eO8G2Lj8I)Kh!#pT._j%$PqVs2e,KE5rc(U1C%VE*jaWdu;g7ru8H/\#
<W55<QgN(\rr@)?r-u7TrrAL95P\[L'Yie&:]=Gk`?dHmDKLs:Q!`SMaaW%0+878"
a8;,Tq5;^A!1!P'9E&YtrrD/1S5N:0p?,!H!4c,/5MVUmcB8,,Ei]+f\PiG-RXIEr
?fr-<k+>HK=8Bf]2h,^eO8G2Lj8I)Kh!#pT._j%$PqVs2e,KE5rc(U1C%VE*jaWdu
;g7ru8H/\#<W55<QgN(\rr@)?r-u7TrrAL95P\[L'Yie&:]=Gk`?dHmDKLs:Q!`SM
aaW%0+878"a8;,Tq5;^A!1!P'9E&YtrrD/1S5N:0p?,!H!4c,/5MVUmcB8,,Ei]+f
\PiG-RXIEr?fr-<k+>HK=8Bf]2h,^eO8G2Lj8I)Kh!#pT._j%$PqVs2e,KE5rc(U1
C%VE*jaWdu;g7ru8H/\#<W55<QgN(\rr@)?r-u7TrrAL95P\[L'Yie&:]=Gk`?dHm
DKLs:Q!`SMaaW%0+878"a8;,Tq5;^A!1!P'9E&YtrrD/1S5N7$m_=@t94*O>>H\L)
a"g\E-eAs*F/\lJU]1=BGPA*!rE%">'&,.0pY+3q)@7[]K$;10[@`QcaJa=\j0+Qn
nOZMTM:O_*C^Mh0EW!k(?2$ApeV/kQ<t;0Odpp.YFJ%iS$Wl[oId$VLQOWd5]C^>>
9n\[$,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`
Uln:q34Vh5Ip"6;k#k/*\8U%lF'2`(a*ZfM]5VP:dD5[V8*ZZ?Do0Vk''<@HbfPCi
4[L"OXn9^sS703H:FgE1PbaI6,q1+&8P_L;OcPFO3h*^p;hbk#U="ksVRJB$`LC#>
EV^kE4n[5<O/gFEDbmY5c_o7'pY=POGI@,(#DU2B@4_Tk>R$?bBXUf18kC:k;NaTs
PbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`
Uln:q.3t'J8kC:k;NaTsPbaI6,q1+&8P2Q"P#@JD!.^UcPbaI6,sVF_~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
